"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[265,96],{96:(e,t,a)=>{a.r(t),a.d(t,{default:()=>o});var s=a(162);class i extends s.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0}}Neo.setupClass(i);const o=i},265:(e,t,a)=>{a.r(t),a.d(t,{default:()=>d});var s=a(96),i=a(254),o=a(160);class n extends s.default{static config={className:"Neo.main.addon.MonacoEditor",libraryBasePath:"../../../../node_modules/monaco-editor/min/vs",remote:{app:["createInstance","destroyInstance","getValue","layoutEditor","setLanguage","setTheme","setValue","updateOptions"]}};isReady=!1;map={};construct(e){super.construct(e),this.loadFiles()}createInstance(e){let t,a=this,s=e.id;delete e.appName,delete e.id,t=a.map[s]=monaco.editor.create(i.A.getElement(s),e),t.getModel().onDidChangeContent(a.onContentChange.bind(a,s))}destroyInstance(e){delete this.map[e.id]}getValue(e){return this.map[e.id].getModel().getValue()}layoutEditor(e){this.map[e.id].layout()}async loadFiles(){const e=this.libraryBasePath;window.require={paths:{vs:e}},await i.A.loadStylesheet(e+"/editor/editor.main.css",{name:"vs/editor/editor.main"}),await i.A.loadScript(e+"/loader.js"),await i.A.loadScript(e+"/editor/editor.main.nls.js"),await i.A.loadScript(e+"/editor/editor.main.js"),this.isReady=!0}onContentChange(e,t){let a=i.A.getElement(e),s=o.A.getPathFromElement(a).map((e=>o.A.getTargetData(e)));o.A.sendMessageToApp({event:t,id:e,path:s,type:"editorChange",value:this.map[e].getModel().getValue()})}setLanguage(e){this.map[e.id].getModel().setLanguage(e.value)}setTheme(e){this.map[e.id]._themeService.setTheme(e.value)}setValue(e){this.map[e.id].getModel().setValue(e.value)}updateOptions(e){this.map[e.id].updateOptions(e.options)}}Neo.setupClass(n);const d=n}}]);