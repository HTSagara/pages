"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[274,96],{96:(e,s,a)=>{a.r(s),a.d(s,{default:()=>r});var n=a(162);class o extends n.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0}}Neo.setupClass(o);const r=o},274:(e,s,a)=>{a.r(s),a.d(s,{default:()=>t});var n=a(96),o=a(126);class r extends n.default{static config={className:"Neo.main.addon.ServiceWorker"};construct(e){if("serviceWorker"in navigator){let e=this,s=Neo.config,a="development"===s.environment,n=a?"ServiceWorker.mjs":"serviceworker.js",r=window.location.pathname.includes("/examples/")?"examples/":"apps/",t=a?{type:"module"}:{},i=(a?s.basePath:s.workerBasePath)+(a?r:"")+n,c=navigator.serviceWorker;window.addEventListener("beforeunload",e.onBeforeUnload.bind(e)),c.register(i,t).then((e=>{c.ready.then((()=>{c.onmessage=o.A.onWorkerMessage.bind(o.A),o.A.getWorker("service")||(o.A.serviceWorker=e.active),o.A.sendMessage("service",{action:"registerNeoConfig",data:s})}))}))}}onBeforeUnload(){o.A.sendMessage("service",{action:"unregisterPort"})}}Neo.setupClass(r);const t=r}}]);