"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[59],{59:(e,o,a)=>{a.r(o),a.d(o,{default:()=>d});var s=a(375),t=a(412),r=a(215),n=a(544);class p extends s.Z{static config={className:"Neo.main.addon.GoogleMaps",mixins:[n.Z],remote:{app:["addMarker","create","destroyMarkers","geocode","hideMarker","panTo","removeMap","removeMarker","setCenter","setZoom","showMarker"]},singleton:!0};geoCoder=null;maps={};markers={};construct(e){super.construct(e),this.loadApi()}addMarker(e){let o,a,s=this,t=e.mapId;s.maps[t]?(Neo.ns(`${t}`,!0,s.markers),s.markers[t][e.id]=a=new google.maps.Marker({icon:e.icon,label:e.label,map:s.maps[t],neoId:e.id,neoMapId:t,position:e.position,title:e.title}),a.addListener("click",s.onMarkerClick.bind(s,a))):o=s.on("mapCreated",(a=>{t===a&&(s.un(o),s.addMarker(e))}))}create(e){let o,a=this,s=e.id;a.maps[s]=o=new google.maps.Map(t.Z.getElement(s),{center:e.center,fullscreenControl:e.fullscreenControl,maxZoom:e.maxZoom,minZoom:e.minZoom,zoom:e.zoom,zoomControl:e.zoomControl,...e.mapOptions}),o.addListener("zoom_changed",a.onMapZoomChange.bind(a,o,s)),a.fire("mapCreated",s)}destroyMarkers(e){let o=this.markers[e.mapId]||{};Object.values(o).forEach((e=>e.setMap(null))),delete this.markers[e.mapId]}async geocode(e){let o,a=this;return a.geoCoder||(a.geoCoder=new google.maps.Geocoder),o=await a.geoCoder.geocode(e),JSON.parse(JSON.stringify(o))}hideMarker(e){this.markers[e.mapId][e.id].setMap(null)}loadApi(){let e=Neo.config.googleMapsApiKey;t.Z.loadScript(` https://maps.googleapis.com/maps/api/js?key=${e}&v=weekly&callback=Neo.emptyFn`).then((()=>{console.log("GoogleMaps API loaded")}))}onMapZoomChange(e,o){r.Z.sendMessageToApp({id:o,path:[{cls:[],id:o}],type:"googleMapZoomChange",value:e.zoom})}onMarkerClick(e,o){let a=r.Z.getMouseEventData(o.domEvent);r.Z.sendMessageToApp({id:e.neoId,path:[{cls:[],id:e.neoMapId}],type:"googleMarkerClick",domEvent:a})}panTo(e){this.maps[e.mapId].panTo(e.position)}removeMap(e){delete this.maps[e.mapId],delete this.markers[e.mapId]}removeMarker(e){let o=this.markers[e.mapId];o[e.id].setMap(null),delete o[e.id]}setCenter(e){this.maps[e.id].setCenter(e.value)}setZoom(e){this.maps[e.id].setZoom(e.value)}showMarker(e){this.markers[e.mapId][e.id].setMap(this.maps[e.mapId])}}const d=Neo.applyClassConfig(p)}}]);