"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[666,96],{96:(e,t,s)=>{s.r(t),s.d(t,{default:()=>n});var a=s(162);class r extends a.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0}}Neo.setupClass(r);const n=r},666:(e,t,s)=>{s.r(t),s.d(t,{default:()=>o});var a=s(96),r=s(160);class n extends a.default{static config={className:"Neo.main.addon.IntersectionObserver",remote:{app:["disconnect","observe","register"]}};cache={};map={};disconnect(e){this.map[e.id]?.disconnect()}findTopmostItem(e,t){let s,a,n,o,d=this;e.forEach((e=>{o=e.target,s=o.dataset&&{...o.dataset}||null,a=r.A.getPathFromElement(e.target).map((e=>r.A.getTargetData(e))),n=o.getBoundingClientRect(),n.y<200&&(e.isIntersecting,d.sendMessage({data:s,id:t.rootId,isIntersecting:!0,path:a,targetId:o.id}))}))}isVisible(e,t){let s,a,n,o=this;e.forEach((e=>{n=e.target,s=n.dataset&&{...n.dataset}||null,a=r.A.getPathFromElement(e.target).map((e=>r.A.getTargetData(e))),e.isIntersecting&&o.sendMessage({data:s,id:t.rootId,isIntersecting:!0,path:a,targetId:n.id})}))}observe(e){let t=this.cache,s=!1,{id:a,observe:r}=e,n=this.map[e.id],o=[];return Neo.isArray(r)||(r=[r]),r.forEach((e=>{o.push(...document.querySelectorAll(e))})),n?(e.disconnect&&n.disconnect(),o.forEach((e=>{n.observe(e)}))):(s=!0,t[a]||(t[a]=[]),t[a].push(e)),{cached:s,countTargets:o.length}}register(e){let t,s=this,{cache:a}=s,{id:r,observe:n}=e,o=!0;return s.map[r]=t=new IntersectionObserver(s[e.callback].bind(s),{root:document.querySelector(e.root),rootMargin:e.rootMargin||"0px",threshold:e.threshold||0}),t.rootId=e.id,n&&(o=s.observe({id:r,observe:n})),a[r]&&(a[r].forEach((e=>s.observe(e))),delete a[r]),o}sendMessage(e){Neo.worker.Manager.sendMessage("app",{action:"domEvent",eventName:"intersect",data:e})}}Neo.setupClass(n);const o=n}}]);