"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[666,96],{96:(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var a=s(162);class o extends a.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0}}Neo.setupClass(o);const r=o},666:(e,t,s)=>{s.r(t),s.d(t,{default:()=>n});var a=s(96),o=s(160);class r extends a.default{static config={className:"Neo.main.addon.IntersectionObserver",remote:{app:["disconnect","observe","register"]}};cache={};map={};disconnect(e){this.map[e.id]?.disconnect()}findTopmostItem(e,t){let s,a,r,n,c=this;e.forEach((e=>{n=e.target,s=n.dataset&&{...n.dataset}||null,a=o.A.getPathFromElement(e.target).map((e=>o.A.getTargetData(e))),r=n.getBoundingClientRect(),r.y<200&&(e.isIntersecting,c.sendMessage({data:s,id:t.rootId,isIntersecting:!0,path:a,targetId:n.id}))}))}observe(e){let t=this.cache,{id:s,observe:a}=e,o=this.map[e.id],r=[];return Neo.isArray(a)||(a=[a]),a.forEach((e=>{r.push(...document.querySelectorAll(e))})),o?(e.disconnect&&o.disconnect(),r.forEach((e=>{o.observe(e)}))):(t[s]||(t[s]=[]),t[s].push(e)),!!o}register(e){let t,s=this,a=s.cache,{id:o,observe:r}=e;s.map[o]=t=new IntersectionObserver(s[e.callback].bind(s),{root:document.querySelector(e.root),rootMargin:e.rootMargin||"0px",threshold:e.threshold||0}),t.rootId=e.id,r&&s.observe({id:o,observe:r}),a[o]&&(a[o].forEach((e=>s.observe(e))),delete a[o])}sendMessage(e){Neo.worker.Manager.sendMessage("app",{action:"domEvent",eventName:"intersect",data:e})}}Neo.setupClass(r);const n=r}}]);