"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[7407],{7407:(e,t,o)=>{o.r(t),o.d(t,{default:()=>j});var a=o(3079);class n extends a.A{static config={className:"Portal.view.home.parts.BaseContainer",baseCls:["portal-home-content-view","neo-container"],responsiveConfig:{medium:{maxWidth:840},large:{minWidth:841}}};activate(){}}Neo.setupClass(n);const s=n;var i=o(4912),l=o(5608);class r extends a.A{static config={className:"Portal.view.home.FooterContainer",cls:["portal-home-footer-container"],itemDefaults:{module:a.A,cls:["portal-home-footer-section"],layout:{ntype:"vbox",align:"start"},itemDefaults:{module:i.A,ui:"ghost"}},items:[{items:[{module:l.A,cls:["neo-h2"],html:"Content",tag:"h2"},{iconCls:"fas fa-people-group",route:"/about-us",text:"About Us"},{iconCls:"fas fa-book",route:"/docs",text:"API Docs"},{iconCls:"fas fa-blog",route:"/blog",text:"Blog"},{iconCls:"fas fa-graduation-cap",route:"/learn",text:"Learn"},{iconCls:"fas fa-handshake-angle",route:"/services",text:"Services"}]},{items:[{module:l.A,cls:["neo-h2"],html:"Community",tag:"h2"},{iconCls:"fa-brands fa-github",text:"Contribute",url:"https://github.com/neomjs/neo/blob/dev/CONTRIBUTING.md"},{iconCls:"fa-brands fa-github",text:"Code of Conduct",url:"https://github.com/neomjs/neo/blob/dev/.github/CODE_OF_CONDUCT.md"},{iconCls:"fa-brands fa-github",text:"Report Issues",url:"https://github.com/neomjs/neo/issues"},{iconCls:"fa-brands fa-slack",text:"Slack",url:"https://join.slack.com/t/neomjs/shared_invite/zt-6c50ueeu-3E1~M4T9xkNnb~M_prEEOA"},{iconCls:"fa-brands fa-discord",text:"Discord",url:"https://discord.gg/6p8paPq"}]},{items:[{module:l.A,cls:["neo-h2"],html:"Social Media",tag:"h2"},{iconCls:"fa-brands fa-linkedin",text:"LinkedIn",url:"https://www.linkedin.com/company/neo-mjs/"},{iconCls:"fa-brands fa-facebook",text:"Facebook",url:"https://www.facebook.com/neo.mjs"},{iconCls:"fa-brands fa-x-twitter",text:"X",url:"https://x.com/neomjs1"}]}],layout:{ntype:"hbox",align:"stretch"},tag:"footer"}}Neo.setupClass(r);const c=r;class h extends s{static config={className:"Portal.view.home.parts.AfterMath",cls:["portal-home-aftermath"],layout:{ntype:"vbox",align:"stretch",pack:"center"},items:[{flex:1},{cls:["neo-h1"],flex:"none",html:"Next Steps",tag:"h1"},{cls:["neo-content"],flex:"none",html:'\n            <p>\n            To learn more about Neo.mjs please read <a href="#/learn">the Learning Section</a> or browse <a href="#/blog">the blog</a>.\n            </p>\n            <p>\n            To arrange a demo or to talk to an engineer email <a href="mailto:info@neomjs.com">info@neomjs.com</a>. \n            <br>For help starting a project email <a href="mailto:services@neomjs.com">services@neomjs.com</a>. \n            <br>For questions about private training email <a href="mailto:training@neomjs.com">training@neomjs.com</a>.\n            </p>\n            ',tag:"div"},{flex:1},{module:c,height:"35%"}]}}Neo.setupClass(h);const m=h;var d=o(1364);class p extends s{static config={className:"Portal.view.home.parts.Colors",responsive:{medium:{layout:{ntype:"vbox",align:"stretch",pack:"center"}},large:{layout:{ntype:"hbox",align:"stretch",pack:"center"}}},items:[{ntype:"container",cls:["portal-content-text"],flex:"1",style:{padding:"2rem"},layout:{ntype:"vbox",align:"center",pack:"center"},items:[{cls:["neo-h1"],flex:"none",html:"Amazing Potential",vdom:{tag:"h1"}},{cls:["neo-h2"],flex:"none",html:"Socket Data",vdom:{tag:"h2"}},{flex:"none",vdom:{tag:"p"},html:["This is similar to the Helix demo &mdash; it's an extremely fast multi-window app. Click the start button ","to see the view reflect changes in the data. And the app is multi-window: the table and charts can be ","undocked into their own windows. In fact, the entire demo can be undocked."].join("")},{flex:"none",html:"But the demo differs from the helix example because the data is provided via a <i>socket</i>.",vdom:{tag:"p"}},{flex:"none",vdom:{tag:"p"},html:["Neo.mjs uniquely fits the bill for applications that need real-time visualizations of real-time data, such as ","stock market trading data and medical or scientific telemetry."].join("")}]},{ntype:"container",flex:"2",style:{background:"lightgray",padding:"20px"},layout:{ntype:"vbox",align:"stretch",pack:"center"},items:[{module:d.A,cls:["page-live-preview"],height:"100%",reference:"live-preview",value:["import Viewport from '../../apps/colors/view/Viewport.mjs';","","class MainView extends Viewport {","    static config = {","        className: 'Portal.view.Colors',","        theme    : 'neo-theme-dark'","    }","}","","Neo.setupClass(MainView);"].join("\n")}]}]};async activate(){let e=this,{parent:t}=e;await e.timeout(1e3),t.activePartsId===e.id&&t.mounted&&(e.getReference("live-preview").activeView="preview")}}Neo.setupClass(p);const u=p;class g extends l.A{static config={className:"Portal.view.home.ContentBox",baseCls:["portal-content-box"],content_:null,header_:null,route_:null,_vdom:{tag:"a",cn:[{tag:"h3",cls:["portal-content-box-headline"]},{tag:"ul",cls:["portal-content-box-content"],cn:[]}]}};afterSetContent(e,t){e?.forEach((e=>{this.vdom.cn[1].cn.push({tag:"li",html:e})})),this.update()}afterSetHeader(e,t){this.vdom.cn[0].html=e,this.update()}afterSetRoute(e,t){this.vdom.href=e,this.update()}}Neo.setupClass(g);class f extends s{static config={className:"Portal.view.home.parts.Features",cls:["portal-home-features"],layout:{ntype:"vbox",align:"stretch",wrap:"wrap"},items:[{module:a.A,layout:{ntype:"hbox"},itemDefaults:{module:l.A,style:{width:"33%",margin:"1em",padding:"1em",border:"thin solid lightgray"}},items:[{module:l.A,html:"\n                        <h2>Extremely High Performance</h2>\n                        <ul>\n                        <li>Multi-threaded via web workers\n                        <li>Lightning fast rendering\n                        </ul>\n                        <p>Neo.mjs runs key processes in separate web workers, each running in a parallel thread: one thread for app logic, one for managing DOM updates, and one for communicating with the backend. And if you have specialized or processor-intensive tasks, you can easily spawn additional threads.</p>\n                        <p>Besides the benefit of running in a separate thread, the DOM update thread has highly optimized code for tracking and applying delta updates, easily handling tens of thousands of updates per second.</p>\n                "},{module:l.A,html:"\n                        <h2>Multi-Window Applications</h2>\n                        <ul>\n                        <li>Neo.mjs uniquely allows you to create multi-window applications\n                        <li>Application logic, state, data, and component instances are seamlessly shared\n                        </ul>\n                        <p>Neo.mjs components can be rendered to the DOM for any shared web worker. Your app logic listens to events, maintains state, and shares data, without caring where the component is rendering, even if it's to another browser window.</p>\n                "},{module:l.A,html:"\n                    <h2>Powerful Framework Features</h2>\n                    <ul>\n                    <li>Component-based, declaratively configured \n                    <li>Standard ECMAscript, without proprietary extenions\n                    <li>Property lifecycle hooks, elegant state management\n                    </ul>\n                    <p>Neo.mjs components are abstract, and configured declaratively. Compared to other libraries, Neo.mjs has features that make it much easier to do data binding, and to detect property updates and events.</p>\n                    <p>Since Neo.mjs uses standard JavaScript, there are no special WebPack transpilations. This also makes debugging easier: any statement you write in your application logic also runs in the devtools console.</p>\n            "}]},{module:l.A,html:'You can read more about Neo.mjs featuers and benefits in <a href="#/learn/WhyNeo-Features">the Learning section</a>. Scroll down to see some running examples.'}]}}Neo.setupClass(f);const w=f;class v extends s{static config={className:"Portal.view.home.parts.Helix",responsive:{medium:{layout:{ntype:"vbox",align:"stretch",pack:"center"}},large:{layout:{ntype:"hbox",align:"stretch",pack:"center"}}},items:[{ntype:"container",cls:["portal-content-text"],flex:"1",style:{padding:"2rem"},layout:{ntype:"vbox",align:"center",pack:"center"},items:[{cls:"neo-h1",flex:"none",html:"Extreme Speed",vdom:{tag:"h1"}},{cls:"neo-h2",flex:"none",html:"40,000 Updates /s",vdom:{tag:"h2"}},{cls:"neo-h3",flex:"none",vdom:{tag:"p"},html:['This demo shows the Neo.mjs helix component, along with a "Helix Controls" panel. ',"Move your cursor over the helix, then rapidly scroll left and right to rotate, and up and down to zoom. ","As you do, look at the delta updates counter at the top. ","Neo.mjs easily handles 40,000 updates per second, and beyond."].join("")},{cls:"neo-h1",flex:"none",html:"Multi-Window",vdom:{tag:"h1"}},{cls:"neo-h2",flex:"none",html:"Seamless and Simple",vdom:{tag:"h2"}},{cls:"neo-h3",flex:"none",vdom:{tag:"p"},html:["Click on the small window icon in the Helix Controls title bar and the controls open in their own window ","which can be moved to a separate monitor. But the application logic doesn't care &mdash; ","the logic updates the controls just like before, and framework seamlessly handles updating the DOM across windows."].join("")}]},{ntype:"container",flex:"2",style:{background:"lightgray",padding:"20px"},layout:{ntype:"vbox",align:"stretch",pack:"center"},items:[{module:d.A,cls:["page-live-preview"],height:"100%",reference:"live-preview",value:["import Viewport from '../../examples/component/multiWindowHelix/Viewport.mjs';","","class MainView extends Viewport {","    static config = {","        className           : 'Portal.view.MultiWindowHelix',","        showGitHubStarButton: false,","        theme               : 'neo-theme-dark'","    }","}","","Neo.setupClass(MainView);"].join("\n")}]}]};async activate(){let e=this,{parent:t}=e;await e.timeout(1e3),t.activePartsId===e.id&&t.mounted&&(e.getReference("live-preview").activeView="preview")}}Neo.setupClass(v);const b=v;class x extends s{static config={className:"Portal.view.home.parts.How",responsive:{medium:{layout:{ntype:"vbox",align:"stretch",pack:"center"}},large:{layout:{ntype:"hbox",align:"stretch",pack:"center"}}},items:[{ntype:"container",cls:["portal-content-text"],flex:"1",style:{padding:"2rem"},layout:{ntype:"vbox",align:"center",pack:"center"},items:[{cls:["neo-h1"],flex:"none",html:"How?",vdom:{tag:"h1"}},{cls:["neo-h2"],flex:"none",html:"How Does Neo.mjs Do It?",vdom:{tag:"h2"}},{cls:["neo-h3"],flex:"none",vdom:{tag:"p"},html:["When a Neo.mjs app launches three webworkers are spawned: one that holds app logic, one for tracking delta DOM updates, ","and one for backend calls. Each webworker runs in its own thread, and thus, in its own processor core. ","This means these processes run in parallel: your app logic isn't affected by DOM changes or ","by Ajax or socket calls. If you have processor-intensive tasks you can easily run them in their own threads."].join("")}]},{ntype:"container",flex:"2",style:{background:"lightgray",padding:"20px"},layout:{ntype:"vbox",align:"stretch",pack:"center"},items:[{flex:"none",style:{width:"100%"},vdom:{tag:"img",src:"https://s3.amazonaws.com/mjs.neo.learning.images/why/IndexHtmlFlow.png"}}]}]}}Neo.setupClass(x);const y=x;class k extends s{static config={className:"Portal.view.home.parts.MainNeo",cls:["portal-home-main-neo"],layout:{ntype:"vbox",align:"center",pack:"center"},items:[{ntype:"container",cls:["logo-container"],items:[{ntype:"container",cls:["vector"]},{cls:["neo-h1"],html:"Neo.mjs",tag:"h1"}]},{cls:["neo-h2"],flex:"none",html:"Modern Enterprise-Ready JavaScript Framework",tag:"h2"},{cls:["neo-h3"],flex:"none",html:"Neo.mjs provides a new approach for building feature-rich web applications. Increase productivity by leveraging a vast component library and harness the power of multi-threading for extreme real-time performance.",tag:"h3"},{ntype:"container",cls:["button-group"],flex:"none",items:[{module:i.A,cls:["get-started-button"],flex:"none",route:"/learn",text:"Get started"},{module:i.A,cls:["neo-github"],flex:"none",text:"View on GitHub",ui:"secondary",url:"https://github.com/neomjs/neo"}]}]}}Neo.setupClass(k);const C=k;class N extends a.A{static config={className:"Portal.view.home.MainContainer",cls:["portal-home-maincontainer"],domListeners:[{intersect(e){this.activePartsId=e.targetId,Neo.getComponent(e.targetId)?.activate?.()},scroll(e){const t=e.target.cls.includes("portal-home-maincontainer"),o=e.scrollTop>80;t&&this.toggleCls("hide-sidebar",o)}}],items:[{ntype:"component",cls:["portal-home-progress"]},C,w,b,u,y,m],scrollable:!0};activePartsId=null;afterSetMounted(e,t){super.afterSetMounted(e,t);let{id:o,windowId:a}=this;e&&this.timeout(50).then((()=>{Neo.main.addon.IntersectionObserver.register({callback:"isVisible",id:o,observe:[".portal-home-content-view"],root:`#${o}`,threshold:1,windowId:a})}))}}Neo.setupClass(N);const j=N}}]);