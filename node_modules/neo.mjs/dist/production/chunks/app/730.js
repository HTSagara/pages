"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[730],{6843:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(9147);class a extends o.Z{static config={className:"Form.view.FormPageContainer",itemDefaults:{style:{maxWidth:"300px"}},layout:{ntype:"vbox"},vdom:{cn:[]}}}Neo.applyClassConfig(a);const l=a},730:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var o=n(6843),a=n(5108),l=n(2577);class r extends l.Z{static countryCodes={DE:/^(?!01000|99999)(0[1-9]\d{3}|[1-9]\d{4})$/};static config={className:"Neo.form.field.ZipCode",ntype:"zipcodefield",countryCode_:null,countryField_:null,errorTextInputPattern:e=>"Not a valid zip code"};afterSetCountryCode(e,t){let n=this;n.inputPattern=r.countryCodes[e]||null,!n.clean&&n.validate(!1)}afterSetCountryField(e,t){if(e){let t=this;e.on({change:t.onCountryFieldChange,scope:t}),e.value&&t.onCountryFieldChange({component:e,record:e.record,value:e.value})}}beforeSetCountryField(e,t){return Neo.isString(e)?this.up().getReference(e):e}onCountryFieldChange(e){this.countryCode=e.record?.[e.component.valueField]}}Neo.applyClassConfig(r);const i=r;class s extends o.Z{static config={className:"Form.view.pages.Page11",items:[{module:a.Z,editable:!1,forceSelection:!0,labelText:"Country",name:"page11.countryfield",reference:"country",value:"DE",store:{data:[{id:"DE",name:"Germany"},{id:"Others",name:"Others"}]}},{module:i,countryField:"country",labelText:"Munich",name:"page11.field1",required:!0,value:"80796"},{module:i,countryField:"country",labelText:"Page 11 Field 2",name:"page11.field2"}]}}Neo.applyClassConfig(s);const c=s}}]);