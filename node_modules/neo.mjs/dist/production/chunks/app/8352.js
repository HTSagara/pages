"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[8352],{9431:(e,o,r)=>{r.d(o,{A:()=>n});var t=r(5608);class a extends t.A{static config={className:"Neo.draggable.DragProxyComponent",ntype:"dragproxy",autoMount:!0,autoRender:!0,cls:["neo-dragproxy"],moveInMainThread:!0};construct(e){super.construct(e);let o=this;o.on("mounted",o.onMounted,o)}onMounted(e){if(this.moveInMainThread){let{appName:e,id:o,windowId:r}=this;Neo.main.addon.DragDrop.setDragProxyElement({appName:e,id:o,windowId:r})}}}const n=Neo.setupClass(a)},8352:(e,o,r)=>{r.r(o),r.d(o,{default:()=>s});var t=r(2583),a=r(9431),n=r(6270),d=(r(5691),r(825));class l extends t.A{static observable=!0;static config={className:"Neo.draggable.DragZone",ntype:"dragzone",addDragProxyCls:!0,alwaysFireDragMove:!1,appName_:null,bodyCursorStyle:null,boundaryContainerId:null,data:null,dragElement:null,dragElementRect:null,dragProxy:null,dragProxyConfig_:null,dragProxyCls:"neo-dragproxy",dropZoneIdentifier:null,moveHorizontal:!0,moveInMainThread:!0,moveVertical:!0,offsetX:0,offsetY:0,owner:null,proxyParentId_:"document.body",scrollContainerId:null,scrollFactorLeft:1,scrollFactorTop:1,useProxyWrapper:!0,windowId_:null};construct(e){super.construct(e),Neo.main.addon.DragDrop||console.error("You can not use Neo.draggable.DragZone without adding Neo.main.addon.DragDrop to the main thread addons",this.id)}afterSetWindowId(e,o){e&&Neo.currentWorker.insertThemeFiles(e,this.__proto__)}beforeGetDragProxyConfig(e){return Neo.clone(e,!0,!0)}createDragProxy(e){let o=this,r=Neo.getComponent(o.getDragElementRoot().id)||o.owner,t=o.dragElementRect,l=o.dragProxyConfig?.vdom,s=d.A.clone(l||o.dragElement),i={module:a.A,appName:o.appName,moveInMainThread:o.moveInMainThread,parentId:o.proxyParentId,windowId:o.windowId,...o.dragProxyConfig,vdom:o.useProxyWrapper?{cn:[s]}:s};i.cls=i.cls||[],r&&i.cls.push(r.getTheme()),s.cls&&!o.useProxyWrapper&&i.cls.push(...s.cls),o.addDragProxyCls&&i.cls&&n.A.add(i.cls,o.dragProxyCls),i.style=i.style||{},Object.assign(i.style,{height:`${e.height}px`,left:`${o.moveHorizontal?e.x:t.x}px`,top:`${o.moveVertical?e.y:t.y}px`,width:`${e.width}px`}),o.dragProxy=Neo.create(i)}destroyDragProxy(){let e=this,o=e.dragProxy.id;e.timeout(e.moveInMainThread?0:30).then((()=>{Neo.currentWorker.promiseMessage("main",{action:"updateDom",appName:e.appName,deltas:[{action:"removeNode",id:o}]})})),e.dragProxy.destroy()}dragEnd(e){let o=this,{owner:r}=o,{cls:t}=r;n.A.remove(t,"neo-is-dragging"),r.cls=t,o.dragProxy&&(o.destroyDragProxy(),o.dragProxy=null),Object.assign(o,{dragElementRect:null,offsetX:0,offsetY:0,scrollContainerId:null}),o.fire("dragEnd",e),o.resetData()}dragMove(e){let o,r=this;!r.moveInMainThread&&r.dragProxy&&(o=r.dragProxy.style,r.moveHorizontal&&(o.left=e.clientX-r.offsetX+"px"),r.moveVertical&&(o.top=e.clientY-r.offsetY+"px"),r.dragProxy.style=o),r.fire("dragMove",e)}dragStart(e){let o,r,t=this,{appName:a,owner:d,windowId:l}=t,{cls:s}=d,i=t.getDragElementRect(e);t.setData(),Neo.main.addon.DragDrop.setConfigs({appName:a,windowId:l,...t.getMainThreadConfigs()}),n.A.add(s,"neo-is-dragging"),d.cls=s,o=e.clientX-i.left,r=e.clientY-i.top,Object.assign(t,{dragElementRect:i,offsetX:o,offsetY:r}),t.createDragProxy(i),t.fire("dragStart",{clientX:e.clientX,clientY:e.clientY,dragElementRect:i,eventData:e,id:t.id,offsetX:o,offsetY:r})}getDragElementRect(e){let o=this.getDragElementRoot().id;for(let r of e.path)if(r.id===o)return r.rect;for(let r of e.targetPath)if(r.id===o)return r.rect;return null}getDragElementRoot(){return this.dragElement}getMainThreadConfigs(){let e=this;return{alwaysFireDragMove:e.alwaysFireDragMove,bodyCursorStyle:e.bodyCursorStyle,boundaryContainerId:e.boundaryContainerId,dragElementRootId:e.getDragElementRoot().id,dragProxyCls:e.dragProxyCls,dragZoneId:e.id,dropZoneIdentifier:e.dropZoneIdentifier,moveHorizontal:e.moveHorizontal,moveVertical:e.moveVertical,scrollContainerId:e.scrollContainerId,scrollFactorLeft:e.scrollFactorLeft,scrollFactorTop:e.scrollFactorTop}}onDrop(e){this.fire("drop",e)}onDropEnter(e){this.fire("drop:enter",e)}onDropLeave(e){this.fire("drop:leave",e)}resetData(){this.timeout(50).then((()=>{this.data=null}))}setData(e={}){let o=this;o.data={dragElement:o.getDragElementRoot(),dragZoneId:o.id,...e}}}const s=Neo.setupClass(l)}}]);