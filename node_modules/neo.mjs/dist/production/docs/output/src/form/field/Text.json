{"classData":[{"comment":"/**\n * @class Neo.form.field.Text\n * @extends Neo.form.field.Base\n */","meta":{"filename":"Text.mjs","lineno":8,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"class","name":"Text","augments":["Neo.form.field.Base"],"memberof":"Neo.form.field","longname":"Neo.form.field.Text","scope":"static","$longname":"Neo.form.field.Text","$kind":"class","id":2363,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Valid values for autoCapitalize\n     * @member {String[]} autoCapitalizeValues=['characters','none','on','off','sentences','words']\n     * @protected\n     * @static\n     */","meta":{"filename":"Text.mjs","lineno":19,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Valid values for autoCapitalize","kind":"member","name":"autoCapitalizeValues","type":{"names":["Array.<String>"]},"defaultvalue":"['characters','none','on','off','sentences','words']","access":"protected","scope":"static","longname":"autoCapitalizeValues","$longname":"autoCapitalizeValues","$kind":"property","id":2364,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Valid values for labelPosition\n     * @member {String[]} labelPositions=['bottom','inline','left','right','top']\n     * @protected\n     * @static\n     */","meta":{"filename":"Text.mjs","lineno":26,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Valid values for labelPosition","kind":"member","name":"labelPositions","type":{"names":["Array.<String>"]},"defaultvalue":"['bottom','inline','left','right','top']","access":"protected","scope":"static","longname":"labelPositions","$longname":"labelPositions","$kind":"property","id":2365,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} className='Neo.form.field.Text'\n         * @protected\n         */","meta":{"filename":"Text.mjs","lineno":33,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.form.field.Text'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":2366,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} ntype='textfield'\n         * @protected\n         */","meta":{"filename":"Text.mjs","lineno":38,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'textfield'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":2367,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * An enumerated attribute that controls whether and how text input is automatically capitalized as it is\n         * entered/edited by the user.\n         * Valid values: 'characters', 'none', 'on', 'off', 'sentences', 'words'\n         * @member {String} autoCapitalize=off'\n         */","meta":{"filename":"Text.mjs","lineno":45,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"An enumerated attribute that controls whether and how text input is automatically capitalized as it is<br />entered/edited by the user.<br />Valid values: 'characters', 'none', 'on', 'off', 'sentences', 'words'","kind":"member","name":"autoCapitalize","type":{"names":["String"]},"defaultvalue":"off'","longname":"autoCapitalize","scope":"global","$longname":"autoCapitalize","$kind":"property","id":2368,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Boolean} autoComplete_=false\n         */","meta":{"filename":"Text.mjs","lineno":49,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"autoComplete_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"autoComplete_","scope":"global","$longname":"autoComplete_","$kind":"property","id":2369,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} baseCls=['neo-textfield']\n         */","meta":{"filename":"Text.mjs","lineno":53,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"baseCls","type":{"names":["Array.<String>"]},"defaultvalue":"['neo-textfield']","longname":"baseCls","scope":"global","$longname":"baseCls","$kind":"property","id":2370,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Internal variable to store the actual width for the label centerBorderEl\n         * (only needed for labelPosition: 'inline')\n         * @member {Number|null} centerBorderElWidth=null\n         * @protected\n         */","meta":{"filename":"Text.mjs","lineno":60,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Internal variable to store the actual width for the label centerBorderEl<br />(only needed for labelPosition: 'inline')","kind":"member","name":"centerBorderElWidth","type":{"names":["Number","null"]},"defaultvalue":null,"access":"protected","longname":"centerBorderElWidth","scope":"global","$longname":"centerBorderElWidth","$kind":"property","id":2371,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * True shows a clear trigger in case the field has a non-empty value.\n         * @member {Boolean} clearable_=true\n         */","meta":{"filename":"Text.mjs","lineno":65,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"True shows a clear trigger in case the field has a non-empty value.","kind":"member","name":"clearable_","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"clearable_","scope":"global","$longname":"clearable_","$kind":"property","id":2372,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * True will reset the field to its initial value config.\n         * Recommended for fields with required: true\n         * @member {Boolean} clearToOriginalValue_=false\n         */","meta":{"filename":"Text.mjs","lineno":71,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"True will reset the field to its initial value config.<br />Recommended for fields with required: true","kind":"member","name":"clearToOriginalValue_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"clearToOriginalValue_","scope":"global","$longname":"clearToOriginalValue_","$kind":"property","id":2373,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Prevent users from typing specific characters.\n         * E.g. disabling +-e for NumberFields\n         * @member {String[]|null} disabledChars_=null\n         */","meta":{"filename":"Text.mjs","lineno":77,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Prevent users from typing specific characters.<br />E.g. disabling +-e for NumberFields","kind":"member","name":"disabledChars_","type":{"names":["Array.<String>","null"]},"defaultvalue":null,"longname":"disabledChars_","scope":"global","$longname":"disabledChars_","$kind":"property","id":2374,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String|null} error_=null\n         */","meta":{"filename":"Text.mjs","lineno":81,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"error_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"error_","scope":"global","$longname":"error_","$kind":"property","id":2375,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Useful for fields inside a css grid where errors should live outside the layout\n         * @member {Boolean} errorPositionAbsolute_=false\n         */","meta":{"filename":"Text.mjs","lineno":86,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Useful for fields inside a css grid where errors should live outside the layout","kind":"member","name":"errorPositionAbsolute_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"errorPositionAbsolute_","scope":"global","$longname":"errorPositionAbsolute_","$kind":"property","id":2376,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * data passes inputPattern, maxLength, minLength & valueLength properties\n         * @member {Function} errorTextInputPattern=data=>`Input pattern violation: ${data.inputPattern}`\n         */","meta":{"filename":"Text.mjs","lineno":91,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"data passes inputPattern, maxLength, minLength & valueLength properties","kind":"member","name":"errorTextInputPattern","type":{"names":["function"]},"defaultvalue":"data=>`Input","longname":"errorTextInputPattern","scope":"global","$longname":"errorTextInputPattern","$kind":"property","id":2377,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * data passes inputPattern, maxLength, minLength & valueLength properties\n         * @member {Function} errorTextMaxLength=data=>`Max length violation: ${valueLength} / ${maxLength}`\n         */","meta":{"filename":"Text.mjs","lineno":96,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"data passes inputPattern, maxLength, minLength & valueLength properties","kind":"member","name":"errorTextMaxLength","type":{"names":["function"]},"defaultvalue":"data=>`Max","longname":"errorTextMaxLength","scope":"global","$longname":"errorTextMaxLength","$kind":"property","id":2378,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * data passes inputPattern, maxLength, minLength & valueLength properties\n         * @member {Function} errorTextMinLength=data=>`Min length violation: ${data.valueLength} / ${data.minLength}`\n         */","meta":{"filename":"Text.mjs","lineno":101,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"data passes inputPattern, maxLength, minLength & valueLength properties","kind":"member","name":"errorTextMinLength","type":{"names":["function"]},"defaultvalue":"data=>`Min","longname":"errorTextMinLength","scope":"global","$longname":"errorTextMinLength","$kind":"property","id":2379,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} errorTextRequired='Required'\n         */","meta":{"filename":"Text.mjs","lineno":105,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"errorTextRequired","type":{"names":["String"]},"defaultvalue":"'Required'","longname":"errorTextRequired","scope":"global","$longname":"errorTextRequired","$kind":"property","id":2380,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Boolean} hideLabel_=false\n         */","meta":{"filename":"Text.mjs","lineno":109,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"hideLabel_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"hideLabel_","scope":"global","$longname":"hideLabel_","$kind":"property","id":2381,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {RegExp|null} inputPattern_=null\n         */","meta":{"filename":"Text.mjs","lineno":113,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"inputPattern_","type":{"names":["RegExp","null"]},"defaultvalue":null,"longname":"inputPattern_","scope":"global","$longname":"inputPattern_","$kind":"property","id":2382,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * If false, the inputPattern will only get validated via JavaScript, but not getting applied on DOM level.\n         * The regex support for input based patterns is not fully there yet, so feel free to disable this feature\n         * if needed (E.g. form.field.Phone).\n         * @member {Boolean} inputPatternDOM_=true\n         */","meta":{"filename":"Text.mjs","lineno":120,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"If false, the inputPattern will only get validated via JavaScript, but not getting applied on DOM level.<br />The regex support for input based patterns is not fully there yet, so feel free to disable this feature<br />if needed (E.g. form.field.Phone).","kind":"member","name":"inputPatternDOM_","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"inputPatternDOM_","scope":"global","$longname":"inputPatternDOM_","$kind":"property","id":2383,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} inputType_='text'\n         */","meta":{"filename":"Text.mjs","lineno":124,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"inputType_","type":{"names":["String"]},"defaultvalue":"'text'","longname":"inputType_","scope":"global","$longname":"inputType_","$kind":"property","id":2384,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} labelBaseCls=['neo-textfield-label']\n         */","meta":{"filename":"Text.mjs","lineno":128,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"labelBaseCls","type":{"names":["Array.<String>"]},"defaultvalue":"['neo-textfield-label']","longname":"labelBaseCls","scope":"global","$longname":"labelBaseCls","$kind":"property","id":2385,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} labelCls_=[]\n         */","meta":{"filename":"Text.mjs","lineno":132,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"labelCls_","type":{"names":["Array.<String>"]},"defaultvalue":"[]","longname":"labelCls_","scope":"global","$longname":"labelCls_","$kind":"property","id":2386,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Edge-case config in case we want to render leading content with their own selectors like:\n         * <span class=\"my-label-id-cls\">E10</span> • Firstname\n         * @member {String|null} labelId_=null\n         */","meta":{"filename":"Text.mjs","lineno":138,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Edge-case config in case we want to render leading content with their own selectors like:<br /><span class=\"my-label-id-cls\">E10</span> • Firstname","kind":"member","name":"labelId_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"labelId_","scope":"global","$longname":"labelId_","$kind":"property","id":2387,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * CSS rules for labelId\n         * @member {String[]} labelIdCls_=[]\n         */","meta":{"filename":"Text.mjs","lineno":143,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"CSS rules for labelId","kind":"member","name":"labelIdCls_","type":{"names":["Array.<String>"]},"defaultvalue":"[]","longname":"labelIdCls_","scope":"global","$longname":"labelIdCls_","$kind":"property","id":2388,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Separator between labelId & labelText\n         * @member {String} labelIdSeparator_=' · '\n         */","meta":{"filename":"Text.mjs","lineno":148,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Separator between labelId & labelText","kind":"member","name":"labelIdSeparator_","type":{"names":["String"]},"defaultvalue":"'","longname":"labelIdSeparator_","scope":"global","$longname":"labelIdSeparator_","$kind":"property","id":2389,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} labelOptionalText_=' (Optional)'\n         */","meta":{"filename":"Text.mjs","lineno":152,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"labelOptionalText_","type":{"names":["String"]},"defaultvalue":"'","description":"(Optional)'","longname":"labelOptionalText_","scope":"global","$longname":"labelOptionalText_","$kind":"property","id":2390,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Valid values: 'bottom', 'inline', 'left', 'right', 'top'\n         * @member {String} labelPosition_='left'\n         */","meta":{"filename":"Text.mjs","lineno":157,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Valid values: 'bottom', 'inline', 'left', 'right', 'top'","kind":"member","name":"labelPosition_","type":{"names":["String"]},"defaultvalue":"'left'","longname":"labelPosition_","scope":"global","$longname":"labelPosition_","$kind":"property","id":2391,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} labelText_='LabelText'\n         */","meta":{"filename":"Text.mjs","lineno":161,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"labelText_","type":{"names":["String"]},"defaultvalue":"'LabelText'","longname":"labelText_","scope":"global","$longname":"labelText_","$kind":"property","id":2392,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * defaults to px\n         * @member {Number|String} labelWidth_=150\n         */","meta":{"filename":"Text.mjs","lineno":166,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"defaults to px","kind":"member","name":"labelWidth_","type":{"names":["Number","String"]},"defaultvalue":150,"longname":"labelWidth_","scope":"global","$longname":"labelWidth_","$kind":"property","id":2393,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * The maximum amount of chars which you can enter into this field\n         * @member {Number|null} maxLength_=null\n         */","meta":{"filename":"Text.mjs","lineno":171,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"The maximum amount of chars which you can enter into this field","kind":"member","name":"maxLength_","type":{"names":["Number","null"]},"defaultvalue":null,"longname":"maxLength_","scope":"global","$longname":"maxLength_","$kind":"property","id":2394,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * The minimum amount of chars which you can enter into this field\n         * @member {Number|null} minLength_=null\n         */","meta":{"filename":"Text.mjs","lineno":176,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"The minimum amount of chars which you can enter into this field","kind":"member","name":"minLength_","type":{"names":["Number","null"]},"defaultvalue":null,"longname":"minLength_","scope":"global","$longname":"minLength_","$kind":"property","id":2395,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String|null} placeholderText_=null\n         */","meta":{"filename":"Text.mjs","lineno":180,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"placeholderText_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"placeholderText_","scope":"global","$longname":"placeholderText_","$kind":"property","id":2396,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Boolean} readOnly_=false\n         */","meta":{"filename":"Text.mjs","lineno":184,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"readOnly_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"readOnly_","scope":"global","$longname":"readOnly_","$kind":"property","id":2397,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Boolean} required_=false\n         */","meta":{"filename":"Text.mjs","lineno":188,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"required_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"required_","scope":"global","$longname":"required_","$kind":"property","id":2398,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Boolean} showOptionalText_=false\n         */","meta":{"filename":"Text.mjs","lineno":192,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"showOptionalText_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"showOptionalText_","scope":"global","$longname":"showOptionalText_","$kind":"property","id":2399,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * null => Follow the element's default behavior for spell checking\n         * @member {Boolean|null} spellCheck_=false\n         */","meta":{"filename":"Text.mjs","lineno":197,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"null => Follow the element's default behavior for spell checking","kind":"member","name":"spellCheck_","type":{"names":["Boolean","null"]},"defaultvalue":false,"longname":"spellCheck_","scope":"global","$longname":"spellCheck_","$kind":"property","id":2400,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} subLabelBaseCls=['neo-textfield-sublabel']\n         */","meta":{"filename":"Text.mjs","lineno":201,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"subLabelBaseCls","type":{"names":["Array.<String>"]},"defaultvalue":"['neo-textfield-sublabel']","longname":"subLabelBaseCls","scope":"global","$longname":"subLabelBaseCls","$kind":"property","id":2401,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} subLabelCls_=[]\n         */","meta":{"filename":"Text.mjs","lineno":205,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"subLabelCls_","type":{"names":["Array.<String>"]},"defaultvalue":"[]","longname":"subLabelCls_","scope":"global","$longname":"subLabelCls_","$kind":"property","id":2402,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} subLabelText_=null\n         */","meta":{"filename":"Text.mjs","lineno":209,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"subLabelText_","type":{"names":["String"]},"defaultvalue":null,"longname":"subLabelText_","scope":"global","$longname":"subLabelText_","$kind":"property","id":2403,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Object|Object[]|null} triggers_=null\n         */","meta":{"filename":"Text.mjs","lineno":213,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"triggers_","type":{"names":["Object","Array.<Object>","null"]},"defaultvalue":null,"longname":"triggers_","scope":"global","$longname":"triggers_","$kind":"property","id":2404,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * A string based value will get resolved into the closest controller which implements it\n         * @member {Function|String|null} validator=null\n         */","meta":{"filename":"Text.mjs","lineno":218,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"A string based value will get resolved into the closest controller which implements it","kind":"member","name":"validator","type":{"names":["function","String","null"]},"defaultvalue":null,"longname":"validator","scope":"global","$longname":"validator","$kind":"property","id":2405,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Object} _vdom\n         */","meta":{"filename":"Text.mjs","lineno":222,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"_vdom","type":{"names":["Object"]},"longname":"_vdom","scope":"global","$longname":"_vdom","$kind":"property","id":2406,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Set this value to false, in case a field should display errors up front.\n     * Otherwise, errors will stay hidden on mounting, unless you trigger validate(false).\n     * @member {Boolean} clean=true\n     */","meta":{"filename":"Text.mjs","lineno":238,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Set this value to false, in case a field should display errors up front.<br />Otherwise, errors will stay hidden on mounting, unless you trigger validate(false).","kind":"member","name":"clean","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"clean","scope":"global","$longname":"clean","$kind":"property","id":2407,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[8320,8623],"filename":"Text.mjs","lineno":243,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100068902","name":"Text#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"Text#construct","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#construct","$kind":"method","id":2408,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the appName config got changed\n     * @param {String} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[8783,8990],"filename":"Text.mjs","lineno":261,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100068944","name":"Text#afterSetAppName","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the appName config got changed","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetAppName","longname":"Text#afterSetAppName","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetAppName","$kind":"method","id":2409,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the autoCapitalize config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[9152,9300],"filename":"Text.mjs","lineno":277,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100068965","name":"Text#afterSetAutoCapitalize","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the autoCapitalize config got changed","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetAutoCapitalize","longname":"Text#afterSetAutoCapitalize","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetAutoCapitalize","$kind":"method","id":2410,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the autoComplete config got changed\n     * Chrome ignores a value of \"off\", so we stick to a different value instead\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[9543,9656],"filename":"Text.mjs","lineno":288,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100068987","name":"Text#afterSetAutoComplete","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the autoComplete config got changed<br />Chrome ignores a value of \"off\", so we stick to a different value instead","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetAutoComplete","longname":"Text#afterSetAutoComplete","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetAutoComplete","$kind":"method","id":2411,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the clearable config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[9815,10112],"filename":"Text.mjs","lineno":298,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069003","name":"Text#afterSetClearable","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the clearable config got changed","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetClearable","longname":"Text#afterSetClearable","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetClearable","$kind":"method","id":2412,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the clearToOriginalValue config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[10282,10436],"filename":"Text.mjs","lineno":317,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069045","name":"Text#afterSetClearToOriginalValue","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the clearToOriginalValue config got changed","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetClearToOriginalValue","longname":"Text#afterSetClearToOriginalValue","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetClearToOriginalValue","$kind":"method","id":2413,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the disabledChars config got changed\n     * @param {String[]|null} value\n     * @param {String[]|null} oldValue\n     * @protected\n     */","meta":{"range":[10611,10904],"filename":"Text.mjs","lineno":330,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069062","name":"Text#afterSetDisabledChars","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the disabledChars config got changed","params":[{"type":{"names":["Array.<String>","null"]},"name":"value"},{"type":{"names":["Array.<String>","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetDisabledChars","longname":"Text#afterSetDisabledChars","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetDisabledChars","$kind":"method","id":2414,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the error config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[11067,11137],"filename":"Text.mjs","lineno":348,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069098","name":"Text#afterSetError","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the error config got changed","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetError","longname":"Text#afterSetError","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetError","$kind":"method","id":2415,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the errorPositionAbsolute config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[11308,11563],"filename":"Text.mjs","lineno":358,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069110","name":"Text#afterSetErrorPositionAbsolute","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the errorPositionAbsolute config got changed","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetErrorPositionAbsolute","longname":"Text#afterSetErrorPositionAbsolute","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetErrorPositionAbsolute","$kind":"method","id":2416,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the hideLabel config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[11722,11943],"filename":"Text.mjs","lineno":373,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069151","name":"Text#afterSetHideLabel","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the hideLabel config got changed","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetHideLabel","longname":"Text#afterSetHideLabel","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetHideLabel","$kind":"method","id":2417,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the id config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[12093,12502],"filename":"Text.mjs","lineno":387,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069191","name":"Text#afterSetId","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the id config got changed","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetId","longname":"Text#afterSetId","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetId","$kind":"method","id":2418,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the inputPattern config got changed\n     * @param {RegExp|null} value\n     * @param {RegExp|null} oldValue\n     * @protected\n     */","meta":{"range":[12672,12959],"filename":"Text.mjs","lineno":407,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069247","name":"Text#afterSetInputPattern","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the inputPattern config got changed","params":[{"type":{"names":["RegExp","null"]},"name":"value"},{"type":{"names":["RegExp","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetInputPattern","longname":"Text#afterSetInputPattern","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetInputPattern","$kind":"method","id":2419,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the inputType config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[13116,13203],"filename":"Text.mjs","lineno":424,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069288","name":"Text#afterSetInputType","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the inputType config got changed","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetInputType","longname":"Text#afterSetInputType","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetInputType","$kind":"method","id":2420,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelCls config got changed\n     * @param {String[]} value\n     * @param {String[]} oldValue\n     * @protected\n     */","meta":{"range":[13363,13563],"filename":"Text.mjs","lineno":434,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069301","name":"Text#afterSetLabelCls","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the labelCls config got changed","params":[{"type":{"names":["Array.<String>"]},"name":"value"},{"type":{"names":["Array.<String>"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelCls","longname":"Text#afterSetLabelCls","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelCls","$kind":"method","id":2421,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelOptionalText config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[13728,13844],"filename":"Text.mjs","lineno":450,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069338","name":"Text#afterSetLabelOptionalText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the labelOptionalText config got changed","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelOptionalText","longname":"Text#afterSetLabelOptionalText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelOptionalText","$kind":"method","id":2422,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelPosition config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[14005,15593],"filename":"Text.mjs","lineno":460,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069352","name":"Text#afterSetLabelPosition","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the labelPosition config got changed","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelPosition","longname":"Text#afterSetLabelPosition","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelPosition","$kind":"method","id":2423,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelText config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[15750,16441],"filename":"Text.mjs","lineno":517,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069567","name":"Text#afterSetLabelText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the labelText config got changed","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelText","longname":"Text#afterSetLabelText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelText","$kind":"method","id":2424,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelWidth config got changed\n     * @param {Number|String} value\n     * @param {Number|String} oldValue\n     * @protected\n     */","meta":{"range":[16613,16897],"filename":"Text.mjs","lineno":548,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069662","name":"Text#afterSetLabelWidth","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the labelWidth config got changed","params":[{"type":{"names":["Number","String"]},"name":"value"},{"type":{"names":["Number","String"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelWidth","longname":"Text#afterSetLabelWidth","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelWidth","$kind":"method","id":2425,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the maxLength config got changed\n     * @param {Number|null} value\n     * @param {Number|null} oldValue\n     * @protected\n     */","meta":{"range":[17064,17191],"filename":"Text.mjs","lineno":565,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069707","name":"Text#afterSetMaxLength","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the maxLength config got changed","params":[{"type":{"names":["Number","null"]},"name":"value"},{"type":{"names":["Number","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetMaxLength","longname":"Text#afterSetMaxLength","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetMaxLength","$kind":"method","id":2426,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the minLength config got changed\n     * @param {Number|null} value\n     * @param {Number|null} oldValue\n     * @protected\n     */","meta":{"range":[17358,17485],"filename":"Text.mjs","lineno":576,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069725","name":"Text#afterSetMinLength","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the minLength config got changed","params":[{"type":{"names":["Number","null"]},"name":"value"},{"type":{"names":["Number","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetMinLength","longname":"Text#afterSetMinLength","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetMinLength","$kind":"method","id":2427,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the mounted config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[17642,18333],"filename":"Text.mjs","lineno":587,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069743","name":"Text#afterSetMounted","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the mounted config got changed","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetMounted","longname":"Text#afterSetMounted","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetMounted","$kind":"method","id":2428,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the placeholderText config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[18506,19033],"filename":"Text.mjs","lineno":619,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069830","name":"Text#afterSetPlaceholderText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the placeholderText config got changed","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetPlaceholderText","longname":"Text#afterSetPlaceholderText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetPlaceholderText","$kind":"method","id":2429,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the readOnly config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[19191,19567],"filename":"Text.mjs","lineno":639,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069897","name":"Text#afterSetReadOnly","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the readOnly config got changed","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetReadOnly","longname":"Text#afterSetReadOnly","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetReadOnly","$kind":"method","id":2430,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the required config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[19725,20058],"filename":"Text.mjs","lineno":659,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069940","name":"Text#afterSetRequired","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the required config got changed","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetRequired","longname":"Text#afterSetRequired","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetRequired","$kind":"method","id":2431,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the showOptionalText config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[20224,20339],"filename":"Text.mjs","lineno":679,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100069991","name":"Text#afterSetShowOptionalText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the showOptionalText config got changed","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetShowOptionalText","longname":"Text#afterSetShowOptionalText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetShowOptionalText","$kind":"method","id":2432,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the spellCheck config got changed\n     * @param {Boolean|null} value\n     * @param {Boolean|null} oldValue\n     * @protected\n     */","meta":{"range":[20509,20633],"filename":"Text.mjs","lineno":689,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070005","name":"Text#afterSetSpellCheck","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the spellCheck config got changed","params":[{"type":{"names":["Boolean","null"]},"name":"value"},{"type":{"names":["Boolean","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetSpellCheck","longname":"Text#afterSetSpellCheck","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetSpellCheck","$kind":"method","id":2433,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the subLabelCls config got changed\n     * @param {String[]} value\n     * @param {String[]} oldValue\n     * @protected\n     */","meta":{"range":[20796,20997],"filename":"Text.mjs","lineno":699,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070025","name":"Text#afterSetSubLabelCls","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the subLabelCls config got changed","params":[{"type":{"names":["Array.<String>"]},"name":"value"},{"type":{"names":["Array.<String>"]},"name":"oldValue"}],"access":"protected","name":"afterSetSubLabelCls","longname":"Text#afterSetSubLabelCls","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetSubLabelCls","$kind":"method","id":2434,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the subLabelText config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[21167,21432],"filename":"Text.mjs","lineno":715,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070065","name":"Text#afterSetSubLabelText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the subLabelText config got changed","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetSubLabelText","longname":"Text#afterSetSubLabelText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetSubLabelText","$kind":"method","id":2435,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the triggers config got changed\n     * @param {Object[]} value\n     * @param {Object[]} oldValue\n     * @protected\n     */","meta":{"range":[21592,23384],"filename":"Text.mjs","lineno":732,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070109","name":"Text#afterSetTriggers","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the triggers config got changed","params":[{"type":{"names":["Array.<Object>"]},"name":"value"},{"type":{"names":["Array.<Object>"]},"name":"oldValue"}],"access":"protected","name":"afterSetTriggers","longname":"Text#afterSetTriggers","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetTriggers","$kind":"method","id":2436,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the value config got changed\n     * todo: add validation logic\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[23571,24311],"filename":"Text.mjs","lineno":795,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070334","name":"Text#afterSetValue","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the value config got changed<br />todo: add validation logic","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetValue","longname":"Text#afterSetValue","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetValue","$kind":"method","id":2437,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the width config got changed\n     * @param {Number|String} value\n     * @param {Number|String} oldValue\n     * @protected\n     */","meta":{"range":[24478,24594],"filename":"Text.mjs","lineno":826,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070452","name":"Text#afterSetWidth","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the width config got changed","params":[{"type":{"names":["Number","String"]},"name":"value"},{"type":{"names":["Number","String"]},"name":"oldValue"}],"access":"protected","name":"afterSetWidth","longname":"Text#afterSetWidth","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetWidth","$kind":"method","id":2438,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Return a shallow copy of the triggers config\n     * @param {Array|null} value\n     * @protected\n     */","meta":{"range":[24719,24850],"filename":"Text.mjs","lineno":836,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070470","name":"Text#beforeGetTriggers","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Return a shallow copy of the triggers config","params":[{"type":{"names":["Array","null"]},"name":"value"}],"access":"protected","name":"beforeGetTriggers","longname":"Text#beforeGetTriggers","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeGetTriggers","$kind":"method","id":2439,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the autoCapitalize config gets changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     * @returns {String}\n     */","meta":{"range":[25039,25185],"filename":"Text.mjs","lineno":851,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070488","name":"Text#beforeSetAutoCapitalize","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered before the autoCapitalize config gets changed","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","returns":[{"type":{"names":["String"]}}],"name":"beforeSetAutoCapitalize","longname":"Text#beforeSetAutoCapitalize","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetAutoCapitalize","$kind":"method","id":2440,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the labelCls config gets changed.\n     * @param {String[]} value\n     * @param {String[]} oldValue\n     * @protected\n     */","meta":{"range":[25348,25452],"filename":"Text.mjs","lineno":861,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070503","name":"Text#beforeSetLabelCls","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered before the labelCls config gets changed.","params":[{"type":{"names":["Array.<String>"]},"name":"value"},{"type":{"names":["Array.<String>"]},"name":"oldValue"}],"access":"protected","name":"beforeSetLabelCls","longname":"Text#beforeSetLabelCls","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetLabelCls","$kind":"method","id":2441,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the labelPosition config gets changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     * @returns {String}\n     */","meta":{"range":[25640,25760],"filename":"Text.mjs","lineno":872,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070520","name":"Text#beforeSetLabelPosition","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered before the labelPosition config gets changed","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","returns":[{"type":{"names":["String"]}}],"name":"beforeSetLabelPosition","longname":"Text#beforeSetLabelPosition","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetLabelPosition","$kind":"method","id":2442,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the labelText config gets changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     * @returns {String}\n     */","meta":{"range":[25954,26439],"filename":"Text.mjs","lineno":883,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070534","name":"Text#beforeSetLabelText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered before the labelText config gets changed","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","returns":[{"type":{"names":["String"]}}],"name":"beforeSetLabelText","longname":"Text#beforeSetLabelText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetLabelText","$kind":"method","id":2443,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the subLabelCls config gets changed\n     * @param {String[]} value\n     * @param {String[]} oldValue\n     * @returns {String[]}\n     * @protected\n     */","meta":{"range":[26631,26741],"filename":"Text.mjs","lineno":906,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070590","name":"Text#beforeSetSubLabelCls","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered before the subLabelCls config gets changed","params":[{"type":{"names":["Array.<String>"]},"name":"value"},{"type":{"names":["Array.<String>"]},"name":"oldValue"}],"returns":[{"type":{"names":["Array.<String>"]}}],"access":"protected","name":"beforeSetSubLabelCls","longname":"Text#beforeSetSubLabelCls","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetSubLabelCls","$kind":"method","id":2444,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the triggers config gets changed\n     * @param {Object|Object[]} value\n     * @param {Object[]} oldValue\n     * @returns {Object[]} the parsed triggers config\n     * @protected\n     * @returns {Object|Object[]}\n     */","meta":{"range":[26998,28097],"filename":"Text.mjs","lineno":918,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070607","name":"Text#beforeSetTriggers","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered before the triggers config gets changed","params":[{"type":{"names":["Object","Array.<Object>"]},"name":"value"},{"type":{"names":["Array.<Object>"]},"name":"oldValue"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"the parsed triggers config"},{"type":{"names":["Object","Array.<Object>"]}}],"access":"protected","name":"beforeSetTriggers","longname":"Text#beforeSetTriggers","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetTriggers","$kind":"method","id":2445,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Resets the field to its original value or null depending on the clearToOriginalValue config\n     */","meta":{"range":[28218,28359],"filename":"Text.mjs","lineno":958,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070760","name":"Text#clear","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Resets the field to its original value or null depending on the clearToOriginalValue config","name":"clear","longname":"Text#clear","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#clear","$kind":"method","id":2446,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     *\n     * @param args\n     */","meta":{"range":[28407,28688],"filename":"Text.mjs","lineno":969,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070789","name":"Text#destroy","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"params":[{"name":"args","variable":true}],"name":"destroy","longname":"Text#destroy","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#destroy","$kind":"method","id":2447,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Calls focus() on the inputEl node instead\n     * @param {String} id\n     * @override\n     */","meta":{"range":[28802,28860],"filename":"Text.mjs","lineno":987,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070832","name":"Text#focus","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Calls focus() on the inputEl node instead","params":[{"type":{"names":["String"]},"name":"id"}],"override":true,"name":"focus","longname":"Text#focus","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#focus","$kind":"method","id":2448,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Object|null}\n     */","meta":{"range":[28912,29030],"filename":"Text.mjs","lineno":994,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070846","name":"Text#getCenterBorderEl","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Object","null"]}}],"name":"getCenterBorderEl","longname":"Text#getCenterBorderEl","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getCenterBorderEl","$kind":"method","id":2449,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Object|null}\n     */","meta":{"range":[29082,29191],"filename":"Text.mjs","lineno":1001,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070854","name":"Text#getInputEl","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Object","null"]}}],"name":"getInputEl","longname":"Text#getInputEl","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getInputEl","$kind":"method","id":2450,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {String}\n     */","meta":{"range":[29238,29295],"filename":"Text.mjs","lineno":1008,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070862","name":"Text#getInputElId","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["String"]}}],"name":"getInputElId","longname":"Text#getInputElId","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getInputElId","$kind":"method","id":2451,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Calculates the new inputWidth based on the labelWidth & total width\n     * @returns {Number|null} null in case this.width is unknown\n     */","meta":{"range":[29457,29921],"filename":"Text.mjs","lineno":1016,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070873","name":"Text#getInputWidth","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Calculates the new inputWidth based on the labelWidth & total width","returns":[{"type":{"names":["Number","null"]},"description":"null in case this.width is unknown"}],"name":"getInputWidth","longname":"Text#getInputWidth","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getInputWidth","$kind":"method","id":2452,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {String}\n     */","meta":{"range":[29968,30038],"filename":"Text.mjs","lineno":1034,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070937","name":"Text#getInputWrapperId","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["String"]}}],"name":"getInputWrapperId","longname":"Text#getInputWrapperId","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getInputWrapperId","$kind":"method","id":2453,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Object|null}\n     */","meta":{"range":[30090,30189],"filename":"Text.mjs","lineno":1041,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070948","name":"Text#getLabelEl","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Object","null"]}}],"name":"getLabelEl","longname":"Text#getLabelEl","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getLabelEl","$kind":"method","id":2454,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {String}\n     */","meta":{"range":[30236,30291],"filename":"Text.mjs","lineno":1048,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070956","name":"Text#getLabelId","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["String"]}}],"name":"getLabelId","longname":"Text#getLabelId","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getLabelId","$kind":"method","id":2455,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {String} type\n     * @returns {Neo.form.field.trigger.Base|null}\n     */","meta":{"range":[30392,30710],"filename":"Text.mjs","lineno":1056,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100070967","name":"Text#getTrigger","type":"MethodDefinition","paramnames":["type"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"type"}],"returns":[{"type":{"names":["Neo.form.field.trigger.Base","null"]}}],"name":"getTrigger","longname":"Text#getTrigger","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#getTrigger","$kind":"method","id":2456,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {String} id\n     * @returns {Neo.form.field.trigger.Base|null}\n     */","meta":{"range":[30809,31125],"filename":"Text.mjs","lineno":1075,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071013","name":"Text#getTriggerById","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"id"}],"returns":[{"type":{"names":["Neo.form.field.trigger.Base","null"]}}],"name":"getTriggerById","longname":"Text#getTriggerById","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#getTriggerById","$kind":"method","id":2457,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {String} type\n     * @protected\n     * @returns {String} The trigger node id\n     */","meta":{"range":[31238,31308],"filename":"Text.mjs","lineno":1095,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071059","name":"Text#getTriggerId","type":"MethodDefinition","paramnames":["type"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"type"}],"access":"protected","returns":[{"type":{"names":["String"]},"description":"The trigger node id"}],"name":"getTriggerId","longname":"Text#getTriggerId","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#getTriggerId","$kind":"method","id":2458,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[31356,31506],"filename":"Text.mjs","lineno":1102,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071072","name":"Text#hasContent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"hasContent","longname":"Text#hasContent","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#hasContent","$kind":"method","id":2459,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Finds a trigger by a given type config\n     * @param {String} type\n     * @returns {Boolean}\n     */","meta":{"range":[31628,31913],"filename":"Text.mjs","lineno":1113,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071099","name":"Text#hasTrigger","type":"MethodDefinition","paramnames":["type"]},"vars":{"":null}},"description":"Finds a trigger by a given type config","params":[{"type":{"names":["String"]},"name":"type"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"hasTrigger","longname":"Text#hasTrigger","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#hasTrigger","$kind":"method","id":2460,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Transform an input node value before applied to this.value.\n     * Override as needed\n     * @param {*} value\n     * @returns {*}\n     */","meta":{"range":[32072,32126],"filename":"Text.mjs","lineno":1133,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071140","name":"Text#inputValueAdjustor","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Transform an input node value before applied to this.value.<br />Override as needed","params":[{"type":{"names":["*"]},"name":"value"}],"returns":[{"type":{"names":["*"]}}],"name":"inputValueAdjustor","longname":"Text#inputValueAdjustor","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#inputValueAdjustor","$kind":"method","id":2461,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Transform a value before getting rendered.\n     * Override as needed\n     * @param {*} value\n     * @returns {*}\n     */","meta":{"range":[32268,32322],"filename":"Text.mjs","lineno":1143,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071147","name":"Text#inputValueRenderer","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Transform a value before getting rendered.<br />Override as needed","params":[{"type":{"names":["*"]},"name":"value"}],"returns":[{"type":{"names":["*"]}}],"name":"inputValueRenderer","longname":"Text#inputValueRenderer","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#inputValueRenderer","$kind":"method","id":2462,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[32370,32439],"filename":"Text.mjs","lineno":1150,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071154","name":"Text#isEmpty","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"isEmpty","longname":"Text#isEmpty","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#isEmpty","$kind":"method","id":2463,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[32487,32596],"filename":"Text.mjs","lineno":1157,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071163","name":"Text#isValid","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"isValid","longname":"Text#isValid","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#isValid","$kind":"method","id":2464,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} config\n     * @param {Boolean} [preventOriginalConfig] True prevents the instance from getting an originalConfig property\n     * @returns {Object} config\n     */","meta":{"range":[32795,33074],"filename":"Text.mjs","lineno":1168,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071183","name":"Text#mergeConfig","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"},{"type":{"names":["Boolean"]},"optional":true,"description":"True prevents the instance from getting an originalConfig property","name":"preventOriginalConfig"}],"returns":[{"type":{"names":["Object"]},"description":"config"}],"name":"mergeConfig","longname":"Text#mergeConfig","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#mergeConfig","$kind":"method","id":2465,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     * @param {Object[]} data.path\n     * @protected\n     */","meta":{"range":[33177,33678],"filename":"Text.mjs","lineno":1184,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071226","name":"Text#onFocusEnter","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Array.<Object>"]},"name":"data.path"}],"access":"protected","name":"onFocusEnter","longname":"Text#onFocusEnter","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onFocusEnter","$kind":"method","id":2466,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     * @param {Object[]} data.oldPath\n     * @protected\n     */","meta":{"range":[33784,34323],"filename":"Text.mjs","lineno":1208,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071294","name":"Text#onFocusLeave","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Array.<Object>"]},"name":"data.oldPath"}],"access":"protected","name":"onFocusLeave","longname":"Text#onFocusLeave","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onFocusLeave","$kind":"method","id":2467,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     * @protected\n     */","meta":{"range":[34391,34756],"filename":"Text.mjs","lineno":1235,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071365","name":"Text#onInputValueChange","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"access":"protected","name":"onInputValueChange","longname":"Text#onInputValueChange","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onInputValueChange","$kind":"method","id":2468,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     */","meta":{"range":[34806,34992],"filename":"Text.mjs","lineno":1251,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071414","name":"Text#onMouseEnter","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onMouseEnter","longname":"Text#onMouseEnter","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onMouseEnter","$kind":"method","id":2469,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     */","meta":{"range":[35042,35231],"filename":"Text.mjs","lineno":1264,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071447","name":"Text#onMouseLeave","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onMouseLeave","longname":"Text#onMouseLeave","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onMouseLeave","$kind":"method","id":2470,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Removes all triggers of a given type\n     * @param {String} type\n     * @param {Boolean} [silent=false] true prevents a vdom update\n     * @param {Array} [triggerSource] pass a shallow copy of this.triggers\n     * @returns {Boolean} true in case a trigger was found & removed\n     */","meta":{"range":[35536,36145],"filename":"Text.mjs","lineno":1281,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071480","name":"Text#removeTrigger","type":"MethodDefinition","paramnames":["type","silent","triggerSource"]},"vars":{"":null}},"description":"Removes all triggers of a given type","params":[{"type":{"names":["String"]},"name":"type"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"true prevents a vdom update","name":"silent"},{"type":{"names":["Array"]},"optional":true,"description":"pass a shallow copy of this.triggers","name":"triggerSource"}],"returns":[{"type":{"names":["Boolean"]},"description":"true in case a trigger was found & removed"}],"name":"removeTrigger","longname":"Text#removeTrigger","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#removeTrigger","$kind":"method","id":2471,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Resets the field to its original value or null depending on the clearToOriginalValue config\n     * You can optionally pass a new value, which will adjust the originalConfig.value if needed.\n     * @param {String|null} [value=null]\n     */","meta":{"range":[36405,36775],"filename":"Text.mjs","lineno":1311,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071563","name":"Text#reset","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Resets the field to its original value or null depending on the clearToOriginalValue config<br />You can optionally pass a new value, which will adjust the originalConfig.value if needed.","params":[{"type":{"names":["String","null"]},"optional":true,"defaultvalue":null,"name":"value"}],"name":"reset","longname":"Text#reset","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#reset","$kind":"method","id":2472,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Used for labelPosition: 'inline' to adjust the top border matching to the length of the label\n     * @param {Boolean} [silent=false] true to get the value, but not apply it to the DOM\n     * @protected\n     */","meta":{"range":[37006,37377],"filename":"Text.mjs","lineno":1334,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071620","name":"Text#updateCenterBorderElWidth","type":"MethodDefinition","paramnames":["silent"]},"vars":{"":null}},"description":"Used for labelPosition: 'inline' to adjust the top border matching to the length of the label","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"true to get the value, but not apply it to the DOM","name":"silent"}],"access":"protected","name":"updateCenterBorderElWidth","longname":"Text#updateCenterBorderElWidth","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#updateCenterBorderElWidth","$kind":"method","id":2473,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     @param {String|null} value\n     @param {Boolean} silent=false\n     */","meta":{"range":[37466,38113],"filename":"Text.mjs","lineno":1351,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071688","name":"Text#updateError","type":"MethodDefinition","paramnames":["value","silent"]},"vars":{"":null}},"params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["Boolean"]},"defaultvalue":false,"name":"silent"}],"name":"updateError","longname":"Text#updateError","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#updateError","$kind":"method","id":2474,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Calculates the new inputWidth based on the labelWidth & total width\n     * @protected\n     */","meta":{"range":[38228,38525],"filename":"Text.mjs","lineno":1379,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071789","name":"Text#updateInputWidth","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Calculates the new inputWidth based on the labelWidth & total width","access":"protected","name":"updateInputWidth","longname":"Text#updateInputWidth","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#updateInputWidth","$kind":"method","id":2475,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Since triggers do not get rendered, assign the relevant props\n     * todo: this could be handled by component.Base\n     */","meta":{"range":[38669,39115],"filename":"Text.mjs","lineno":1396,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071843","name":"Text#updateTriggerVnodes","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Since triggers do not get rendered, assign the relevant props<br />todo: this could be handled by component.Base","name":"updateTriggerVnodes","longname":"Text#updateTriggerVnodes","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#updateTriggerVnodes","$kind":"method","id":2476,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Checks for client-side field errors\n     * @param {Boolean} silent=true\n     * @returns {Boolean} Returns true in case there are no client-side errors\n     */","meta":{"range":[39295,41130],"filename":"Text.mjs","lineno":1418,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100071894","name":"Text#validate","type":"MethodDefinition","paramnames":["silent"]},"vars":{"":null}},"description":"Checks for client-side field errors","params":[{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"silent"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true in case there are no client-side errors"}],"name":"validate","longname":"Text#validate","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#validate","$kind":"method","id":2477,"neoClassName":"Neo.form.field.Text"}]}