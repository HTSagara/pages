{"classData":[{"comment":"/**\n * @class Neo.core.Observable\n * @extends Neo.core.Base\n */","meta":{"filename":"Observable.mjs","lineno":3,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"class","name":"Observable","augments":["Neo.core.Base"],"memberof":"Neo.core","longname":"Neo.core.Observable","scope":"static","$longname":"Neo.core.Observable","$kind":"class","id":1705,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n         * @member {String} className='Neo.core.Observable'\n         * @protected\n         */","meta":{"filename":"Observable.mjs","lineno":13,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.core.Observable'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1706,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n         * @member {String} ntype='mixin-observable'\n         * @protected\n         */","meta":{"filename":"Observable.mjs","lineno":18,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'mixin-observable'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1707,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n         * @member {Boolean} mixin=true\n         * @protected\n         */","meta":{"filename":"Observable.mjs","lineno":23,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"mixin","type":{"names":["Boolean"]},"defaultvalue":true,"access":"protected","longname":"mixin","scope":"global","$longname":"mixin","$kind":"property","id":1708,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * @param {Object|String} name\n     * @param {Object} [opts]\n     * @param {Object} [scope]\n     * @param {String} [eventId]\n     * @param {Object} [data]\n     * @param {Number|String} [order]\n     * @returns {String|null} eventId null in case an object gets passed as the name (multiple ids)\n     */","meta":{"range":[862,3489],"filename":"Observable.mjs","lineno":35,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054021","name":"Observable#addListener","type":"MethodDefinition","paramnames":["name","opts","scope","eventId","data","order"]},"vars":{"":null}},"params":[{"type":{"names":["Object","String"]},"name":"name"},{"type":{"names":["Object"]},"optional":true,"name":"opts"},{"type":{"names":["Object"]},"optional":true,"name":"scope"},{"type":{"names":["String"]},"optional":true,"name":"eventId"},{"type":{"names":["Object"]},"optional":true,"name":"data"},{"type":{"names":["Number","String"]},"optional":true,"name":"order"}],"returns":[{"type":{"names":["String","null"]},"description":"eventId null in case an object gets passed as the name (multiple ids)"}],"name":"addListener","longname":"Observable#addListener","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#addListener","$kind":"method","id":1709,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * Call the passed function, or a function by *name* which exists in the passed scope's\n     * or this component's ownership chain.\n     * @param {Function|String} fn A function, or the name of a function to find in the passed scope object/\n     * @param {Object} scope The scope to find the function in if it is specified as a string.\n     * @param {Array} args Arguments to pass to the callback.\n     */","meta":{"range":[3913,4090],"filename":"Observable.mjs","lineno":121,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054353","name":"Observable#callback","type":"MethodDefinition","paramnames":["fn","scope","args"]},"vars":{"":null}},"description":"<p>Call the passed function, or a function by <em>name</em> which exists in the passed scope&#39;s\nor this component&#39;s ownership chain.</p>\n","params":[{"type":{"names":["function","String"]},"description":"<p>A function, or the name of a function to find in the passed scope object/</p>\n","name":"fn"},{"type":{"names":["Object"]},"description":"<p>The scope to find the function in if it is specified as a string.</p>\n","name":"scope"},{"type":{"names":["Array"]},"description":"<p>Arguments to pass to the callback.</p>\n","name":"args"}],"name":"callback","longname":"Observable#callback","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#callback","$kind":"method","id":1710,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * Internal helper method for events which use the delay option\n     * @param {Object} cb\n     * @param {Array} args\n     * @param {Number} delay\n     */","meta":{"range":[4262,4387],"filename":"Observable.mjs","lineno":134,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054385","name":"Observable#delayedCallback","type":"MethodDefinition","paramnames":["cb","args","delay"]},"vars":{"":null}},"description":"<p>Internal helper method for events which use the delay option</p>\n","params":[{"type":{"names":["Object"]},"name":"cb"},{"type":{"names":["Array"]},"name":"args"},{"type":{"names":["Number"]},"name":"delay"}],"name":"delayedCallback","longname":"Observable#delayedCallback","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#delayedCallback","$kind":"method","id":1711,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * @param name\n     */","meta":{"range":[4428,6105],"filename":"Observable.mjs","lineno":143,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054409","name":"Observable#fire","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"params":[{"name":"name"}],"name":"fire","longname":"Observable#fire","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#fire","$kind":"method","id":1712,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[6157,7207],"filename":"Observable.mjs","lineno":188,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054620","name":"Observable#initObservable","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"initObservable","longname":"Observable#initObservable","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#initObservable","$kind":"method","id":1713,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * Alias for addListener\n     * @param {Object|String} name\n     * @param {Object} [opts]\n     * @param {Object} [scope]\n     * @param {String} [eventId]\n     * @param {Object} [data]\n     * @param {Number} [order]\n     * @returns {String} eventId\n     */","meta":{"range":[7481,7542],"filename":"Observable.mjs","lineno":239,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054747","name":"Observable#on","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"description":"<p>Alias for addListener</p>\n","params":[{"type":{"names":["Object","String"]},"name":"name"},{"type":{"names":["Object"]},"optional":true,"name":"opts"},{"type":{"names":["Object"]},"optional":true,"name":"scope"},{"type":{"names":["String"]},"optional":true,"name":"eventId"},{"type":{"names":["Object"]},"optional":true,"name":"data"},{"type":{"names":["Number"]},"optional":true,"name":"order"}],"returns":[{"type":{"names":["String"]},"description":"eventId"}],"name":"on","longname":"Observable#on","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#on","$kind":"method","id":1714,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * @param {Object|String} name\n     * @param {String} [eventId]\n     */","meta":{"range":[7632,8903],"filename":"Observable.mjs","lineno":247,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054760","name":"Observable#removeListener","type":"MethodDefinition","paramnames":["name","eventId"]},"vars":{"":null}},"params":[{"type":{"names":["Object","String"]},"name":"name"},{"type":{"names":["String"]},"optional":true,"name":"eventId"}],"name":"removeListener","longname":"Observable#removeListener","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#removeListener","$kind":"method","id":1715,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * Locate a callable function by name in the passed scope.\n     *\n     * If the name starts with 'up.', the parent Component chain is searched.\n     *\n     * This is used by Observable.fire and by 'handler' function calls to resolve\n     * string function names in the Component's own hierarchy.\n     * @param {Function|String} fn A function, or the name of a function to find in the passed scope object/\n     * @param {Object} scope The scope to find the function in if it is specified as a string.\n     * @returns {Object}\n     */","meta":{"range":[9613,9923],"filename":"Observable.mjs","lineno":313,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054933","name":"Observable#resolveCallback","type":"MethodDefinition","paramnames":["fn","scope"]},"vars":{"":null}},"description":"<p>Locate a callable function by name in the passed scope.</p>\n<p>If the name starts with &#39;up.&#39;, the parent Component chain is searched.</p>\n<p>This is used by Observable.fire and by &#39;handler&#39; function calls to resolve\nstring function names in the Component&#39;s own hierarchy.</p>\n","params":[{"type":{"names":["function","String"]},"description":"<p>A function, or the name of a function to find in the passed scope object/</p>\n","name":"fn"},{"type":{"names":["Object"]},"description":"<p>The scope to find the function in if it is specified as a string.</p>\n","name":"scope"}],"returns":[{"type":{"names":["Object"]}}],"name":"resolveCallback","longname":"Observable#resolveCallback","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#resolveCallback","$kind":"method","id":1716,"neoClassName":"Neo.core.Observable"},{"comment":"/**\n     * Alias for removeListener\n     * @param {Object|String} name\n     * @param {String} [eventId]\n     */","meta":{"range":[10045,10102],"filename":"Observable.mjs","lineno":329,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054991","name":"Observable#un","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"description":"<p>Alias for removeListener</p>\n","params":[{"type":{"names":["Object","String"]},"name":"name"},{"type":{"names":["String"]},"optional":true,"name":"eventId"}],"name":"un","longname":"Observable#un","kind":"function","memberof":"Observable","scope":"instance","$longname":"Observable#un","$kind":"method","id":1717,"neoClassName":"Neo.core.Observable"}]}