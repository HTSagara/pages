{"classData":[{"comment":"/**\n * Abstract base class for form fields\n * @class Neo.form.field.Base\n * @extends Neo.component.Base\n */","meta":{"filename":"Base.mjs","lineno":4,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Abstract base class for form fields","kind":"class","name":"Base","augments":["Neo.component.Base"],"memberof":"Neo.form.field","longname":"Neo.form.field.Base","scope":"static","$longname":"Neo.form.field.Base","$kind":"class","id":1913,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {String} className='Neo.form.field.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":15,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.form.field.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1914,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {String} ntype='basefield'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":20,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'basefield'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1915,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * Form groups can get set on any parent component level.\n         * An alternative way for using dots in field names.\n         * @member {String|null} formGroup_=null\n         */","meta":{"filename":"Base.mjs","lineno":26,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Form groups can get set on any parent component level.<br />An alternative way for using dots in field names.","kind":"member","name":"formGroup_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"formGroup_","scope":"global","$longname":"formGroup_","$kind":"property","id":1916,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {String|null} name_=null\n         */","meta":{"filename":"Base.mjs","lineno":30,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"name_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"name_","scope":"global","$longname":"name_","$kind":"property","id":1917,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * Neo itself does not need field names to get mapped to the DOM (input nodes),\n         * except for CheckBoxes & Radios to work. It can be useful for testing tools\n         * & accessibility though, so the default got set to true.\n         * Feel free to change it to false to keep the DOM minimal.\n         * @member {Boolean} renderName_=true\n         */","meta":{"filename":"Base.mjs","lineno":38,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Neo itself does not need field names to get mapped to the DOM (input nodes),<br />except for CheckBoxes & Radios to work. It can be useful for testing tools<br />& accessibility though, so the default got set to true.<br />Feel free to change it to false to keep the DOM minimal.","kind":"member","name":"renderName_","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"renderName_","scope":"global","$longname":"renderName_","$kind":"property","id":1918,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * In case renderName is set to true, you can optionally render the combination\n         * of all formGroup(s) & the field name into the DOM => input node\n         * @member {Boolean} renderPath=true\n         */","meta":{"filename":"Base.mjs","lineno":44,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"In case renderName is set to true, you can optionally render the combination<br />of all formGroup(s) & the field name into the DOM => input node","kind":"member","name":"renderPath","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"renderPath","scope":"global","$longname":"renderPath","$kind":"property","id":1919,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {*} value_=null\n         */","meta":{"filename":"Base.mjs","lineno":48,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"value_","type":{"names":["*"]},"defaultvalue":null,"longname":"value_","scope":"global","$longname":"value_","$kind":"property","id":1920,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * An internal cache for formGroups of all parent levels\n     * @member {String|null} formGroupString=null\n     */","meta":{"filename":"Base.mjs","lineno":55,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"An internal cache for formGroups of all parent levels","kind":"member","name":"formGroupString","type":{"names":["String","null"]},"defaultvalue":null,"longname":"formGroupString","scope":"global","$longname":"formGroupString","$kind":"property","id":1921,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * An internal cache for formGroup(s) and the field name\n     * @member {String|null} path=null\n     */","meta":{"filename":"Base.mjs","lineno":60,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"An internal cache for formGroup(s) and the field name","kind":"member","name":"path","type":{"names":["String","null"]},"defaultvalue":null,"longname":"path","scope":"global","$longname":"path","$kind":"property","id":1922,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Triggered after the name config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     */","meta":{"range":[2042,2194],"filename":"Base.mjs","lineno":67,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059017","name":"Base#afterSetName","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the name config got changed","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"name":"afterSetName","longname":"Base#afterSetName","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#afterSetName","$kind":"method","id":1923,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Triggered after the value config got changed\n     * @param {*} value\n     * @param {*} oldValue\n     */","meta":{"range":[2319,2455],"filename":"Base.mjs","lineno":78,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059046","name":"Base#afterSetValue","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the value config got changed","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"name":"afterSetValue","longname":"Base#afterSetValue","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#afterSetValue","$kind":"method","id":1924,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Triggered when accessing the formGroup config\n     * @param {String|null} value\n     * @returns {String|null} parents\n     * @protected\n     */","meta":{"range":[2620,3097],"filename":"Base.mjs","lineno":90,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059064","name":"Base#beforeGetFormGroup","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Triggered when accessing the formGroup config","params":[{"type":{"names":["String","null"]},"name":"value"}],"returns":[{"type":{"names":["String","null"]},"description":"parents"}],"access":"protected","name":"beforeGetFormGroup","longname":"Base#beforeGetFormGroup","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#beforeGetFormGroup","$kind":"method","id":1925,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Changes the value of a inputEl vdom object attribute or removes it in case it has no value\n     * @param {String} key\n     * @param {Array|Number|Object|String|null} value\n     * @param {Boolean} silent=false\n     */","meta":{"range":[3335,3611],"filename":"Base.mjs","lineno":118,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059135","name":"Base#changeInputElKey","type":"MethodDefinition","paramnames":["key","value","silent"]},"vars":{"":null}},"description":"Changes the value of a inputEl vdom object attribute or removes it in case it has no value","params":[{"type":{"names":["String"]},"name":"key"},{"type":{"names":["Array","Number","Object","String","null"]},"name":"value"},{"type":{"names":["Boolean"]},"defaultvalue":false,"name":"silent"}],"name":"changeInputElKey","longname":"Base#changeInputElKey","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#changeInputElKey","$kind":"method","id":1926,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Override this method as needed\n     * @param {*} value\n     * @param {*} oldValue\n     */","meta":{"range":[3722,4341],"filename":"Base.mjs","lineno":135,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059187","name":"Base#fireChangeEvent","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Override this method as needed","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"name":"fireChangeEvent","longname":"Base#fireChangeEvent","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#fireChangeEvent","$kind":"method","id":1927,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Override this method as needed\n     * @returns {Object|null}\n     */","meta":{"range":[4431,4476],"filename":"Base.mjs","lineno":162,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059251","name":"Base#getInputEl","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Override this method as needed","returns":[{"type":{"names":["Object","null"]}}],"name":"getInputEl","longname":"Base#getInputEl","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#getInputEl","$kind":"method","id":1928,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Returns the combination of the field formGroup(s) & name\n     * @returns {String|null}\n     */","meta":{"range":[4592,5025],"filename":"Base.mjs","lineno":170,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059259","name":"Base#getPath","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the combination of the field formGroup(s) & name","returns":[{"type":{"names":["String","null"]}}],"name":"getPath","longname":"Base#getPath","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#getPath","$kind":"method","id":1929,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * @returns {*}\n     */","meta":{"range":[5067,5112],"filename":"Base.mjs","lineno":196,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059344","name":"Base#getValue","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["*"]}}],"name":"getValue","longname":"Base#getValue","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#getValue","$kind":"method","id":1930,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[5160,5198],"filename":"Base.mjs","lineno":203,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059352","name":"Base#isValid","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"isValid","longname":"Base#isValid","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#isValid","$kind":"method","id":1931,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * @param {Object} data\n     * @param {Object[]} data.oldPath\n     * @protected\n     */","meta":{"range":[5304,5810],"filename":"Base.mjs","lineno":212,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059358","name":"Base#onFocusLeave","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Array.<Object>"]},"name":"data.oldPath"}],"access":"protected","name":"onFocusLeave","longname":"Base#onFocusLeave","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#onFocusLeave","$kind":"method","id":1932,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Resets the field to a new value or null\n     * @param {*} value=null\n     */","meta":{"range":[5908,5961],"filename":"Base.mjs","lineno":234,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059408","name":"Base#reset","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Resets the field to a new value or null","params":[{"type":{"names":["*"]},"defaultvalue":null,"name":"value"}],"name":"reset","longname":"Base#reset","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#reset","$kind":"method","id":1933,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Checks for client-side field errors\n     * @param {Boolean} silent=true\n     * @returns {Boolean} Returns true in case there are no client-side errors\n     */","meta":{"range":[6141,6191],"filename":"Base.mjs","lineno":243,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100059421","name":"Base#validate","type":"MethodDefinition","paramnames":["silent"]},"vars":{"":null}},"description":"Checks for client-side field errors","params":[{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"silent"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true in case there are no client-side errors"}],"name":"validate","longname":"Base#validate","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#validate","$kind":"method","id":1934,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n * The change event fires after the value config gets changed\n * @event change\n * @param {*} value\n * @param {*} oldValue\n * @returns {Object}\n */","meta":{"filename":"Base.mjs","lineno":248,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"The change event fires after the value config gets changed","kind":"event","name":"change","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"returns":[{"type":{"names":["Object"]}}],"longname":"event:change","scope":"global","$longname":"event:change","$kind":"event","id":1935,"neoClassName":"Neo.form.field.Base"}]}