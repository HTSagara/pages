"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_fieldWithPrefix_app_mjs"],{

/***/ "./examples/fieldWithPrefix/MainContainer.mjs":
/*!****************************************************!*\
  !*** ./examples/fieldWithPrefix/MainContainer.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_form_field_ComboBox_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/form/field/ComboBox.mjs */ "./src/form/field/ComboBox.mjs");
/* harmony import */ var _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ConfigurationViewport.mjs */ "./examples/ConfigurationViewport.mjs");
/* harmony import */ var _src_plugin_PrefixField_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/plugin/PrefixField.mjs */ "./src/plugin/PrefixField.mjs");
/* harmony import */ var _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../src/form/field/Text.mjs */ "./src/form/field/Text.mjs");





/**
 * @class Neo.examples.fieldWithPrefix.MainContainer
 * @extends Neo.examples.ConfigurationViewport
 */
class MainContainer extends _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        className           : 'Neo.examples.fieldWithPrefix.MainContainer',
        autoMount           : true,
        configItemLabelWidth: 100,
        configItemWidth     : 230,
        layout              : {ntype: 'hbox', align: 'stretch'},
        cls                 : ['examples-container-accordion']
    }

    onPluginConfigChange(config, opts) {
        const textfield = this.exampleComponent.items[0],
              plugin    = textfield.getPlugin('prefixfield');

        if (config === 'accept') {
            plugin.accept = opts.record.value
        } else {
            plugin[config] = opts.value;
            textfield.value = ''
        }
    }

    createConfigurationComponents() {
        let me        = this,
            textfield = me.exampleComponent.items[0],
            plugin    = textfield.plugins[0];

        return [{
            module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            clearable: true,
            labelText: 'pattern',
            listeners: {change: me.onPluginConfigChange.bind(me, 'pattern')},
            value    : plugin.pattern,
            style    : {marginTop: '10px'}
        }, {
            module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            clearable: true,
            labelText: 'slots',
            listeners: {change: me.onPluginConfigChange.bind(me, 'slots')},
            value    : '_',
            style    : {marginTop: '10px'}
        }, {
            module: _src_form_field_ComboBox_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
            store : {
                model: {fields: [{name: 'id'}, {name: 'name'}, {name: 'value'}]},
                data : [
                    {id: '0', name: 'empty=/\\d/', value: null},
                    {id: '1', name: '[0-9]', value: '[0-9]'},
                    {id: '2', name: '[A-H]', value: '[A-H]'},
                    {id: '3', name: '/\\w/', value: /\w/},
                    {id: '4', name: '/\\d/', value: /\d/},
                    {id: '5', name: '[0-9a-f]', value: '[0-9a-f]'}
                ]
            },

            value       : '4',
            displayField: 'name',
            valueField  : 'value',

            clearable: true,
            labelText: 'accept',
            listeners: {change: me.onPluginConfigChange.bind(me, 'accept')},
            style    : {marginTop: '10px'}
        }]
    }

    /**
     * @returns {*}
     */
    createExampleComponent() {
        return Neo.ntype({
            ntype : 'container',
            width : 350,
            cls   : ['example-fieldWithPrefix'],
            layout: {ntype: 'vbox', align: 'stretch'},
            items : [{
                module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                labelText: 'Phone Number',
                plugins  : [
                    {
                        module : _src_plugin_PrefixField_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                        pattern: '+1 (___) ___-___-____',
                        slots  : '_'
                    }
                ]
            }, {
                module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                labelText: '[0-9] Date',
                plugins  : [
                    {
                        module : _src_plugin_PrefixField_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                        pattern: 'dd/mm/yyyy hh:mm',
                        slots  : 'dmyh'
                    }
                ]
            }, {
                module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                labelText: '[A-H] MAC Adress',
                plugins  : [
                    {
                        module : _src_plugin_PrefixField_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                        pattern: 'XX:XX:XX:XX:XX:XX',
                        slots  : 'X',
                        accept : '[A-H]'
                    }
                ]
            }, {
                module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                labelText: '/\\w/ Alphanumeric',
                plugins  : [
                    {
                        module : _src_plugin_PrefixField_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                        pattern: '__-__-__-____',
                        slots  : '_',
                        accept : /\w/
                    }
                ]
            }, {
                module   : _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
                labelText: '/\\d/ Credit Card',
                plugins  : [
                    {
                        module : _src_plugin_PrefixField_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
                        pattern: '.... .... .... ....',
                        slots  : '.',
                        accept : /\d/
                    }
                ]
            }]
        })
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainer));


/***/ }),

/***/ "./examples/fieldWithPrefix/app.mjs":
/*!******************************************!*\
  !*** ./examples/fieldWithPrefix/app.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/fieldWithPrefix/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.fieldWithPrefix'
});


/***/ }),

/***/ "./src/plugin/Base.mjs":
/*!*****************************!*\
  !*** ./src/plugin/Base.mjs ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Base.mjs */ "./src/core/Base.mjs");


/**
 * Abstract base class for plugin implementations.
 * Plugins are intended to get put into the plugins config of component.Base
 * to enhance them or add additional features
 * @class Neo.plugin.Base
 * @extends Neo.core.Base
 */
class Base extends _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.plugin.Base'
         * @protected
         */
        className: 'Neo.plugin.Base',
        /**
         * All plugin ntypes need to start with 'plugin-' to ensure that component.Base: getPlugin() can find them
         * @member {String} ntype='plugin'
         * @protected
         */
        ntype: 'plugin',
        /**
         * @member {Neo.component.Base} owner=null
         * @protected
         */
        owner: null
    }

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        let me = this;

        if (me.owner.mounted) {
            me.onOwnerMounted();
        } else {
            me.owner.on('mounted', me.onOwnerMounted, me);
        }
    }

    /**
     * Override this method to apply changes to the owner Component when it does get mounted
     */
    onOwnerMounted() {

    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Base));


/***/ }),

/***/ "./src/plugin/PrefixField.mjs":
/*!************************************!*\
  !*** ./src/plugin/PrefixField.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/plugin/Base.mjs");


/**
 * @class Neo.plugin.PrefixField
 * @extends Neo.plugin.Base
 *
 * @example
 *
 *     {
 *         module   : TextField,
 *         labelText: 'Credit Card',
 *         plugins  : [{
 *             module : PrefixPlugin, // import PrefixPlugin from '../../src/plugin/PrefixField.mjs';
 *             pattern: 'dd/mm/yyyy',
 *             slots  : 'dmy',        // characters allowed to replace
 *             accept : /\d/          // either '[A-Z]' or regex or undefined
 *         }]
 *     }
 */
class PrefixField extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.plugin.PrefixField'
         * @protected
         */
        className: 'Neo.plugin.PrefixField',
        /**
         * @member {String} ntype='plugin-prefixfield'
         * @protected
         */
        ntype: 'plugin-prefixfield',
        /**
         * Custom cls added to the inputEl
         * @member {String} inputCls='neo-prefixfield-input'
         */
        inputCls: 'neo-prefixfield-input',
        /**
         * Custom cls added to the inputEl
         * @member {String} inputCls='neo-prefixfield-input'
         */
        labelCls: 'neo-prefixfield-label',
        /**
         * Custom cls to add to the owner component
         * @member {String} ownerCls='neo-prefixfield'
         */
        ownerCls: 'neo-prefixfield',
        /**
         * regex to calculate if entered value is acceptable
         * Preset to numbers only
         *
         * @member {regex|null} accept
         */
        accept_: null,
        /**
         * @member {String} pattern=null
         */
        pattern_: null,
        /**
         * Only add a String. A Set will be automatically created
         * @member {String|Set|null} slots=null
         */
        slots_: null
    }

    /**
     * First accepted place to enter a value
     * @member {Number} first
     * @protected
     */
    first = null
    /**
     * Array of numbers, which shows the previous entry point
     * @member {Array[]} prev
     * @protected
     */
    prev = null
    /**
     * Position of the cursor inside input element
     * @member {Object} selection
     * @protected
     */
    selection = null

    /**
     * State if selection should be updated
     * @member {Boolean} ignoreSelection
     * @protected
     */
    ignoreSelection = false
    /**
     * State if last entry was the back button
     * @member {Boolean} back
     * @protected
     */
    back = false

    /**
     * @param {Object} config
     */
    construct(config) {
        let me = this;

        super.construct(config);

        me.addListeners();
        me.addCss();
    }

    /**
     * Add a custom cls to the owner component
     */
    addCss() {
        const me      = this,
              {owner} = me,
              inputEl = owner.getInputEl(),
              labelEl = owner.getLabelEl();

        owner    .addCls(me.ownerCls);
        inputEl.cls.push(me.inputCls);
        labelEl.cls.push(me.labelCls)
    }

    /**
     * Add listeners
     * @protected
     */
    addListeners() {
        let me      = this,
            {owner} = me;

        owner.addDomListeners([
            {keydown        : me.onFieldKeyDown        , scope: me},
            {focusin        : me.onFieldFocus          , scope: me},
            {focusout       : me.onFieldBlur           , scope: me},
            {selectionchange: me.onFieldSelectionChange, scope: me}
        ]);

        me.owner.on('mounted', () => {
            Neo.currentWorker.insertThemeFiles(owner.windowId, me.__proto__)
        }, me, {once: true})
    }


    /**
     * After setting accept format output
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetAccept(value, oldValue) {
        this.owner.value && this.format()
    }

    /**
     * After setting pattern recalc other values and set placeholder
     * @param {Set} value
     * @param {Set} oldValue
     * @protected
     */
    afterSetPattern(value, oldValue) {
        this.owner.placeholderText = value;
        this.recalcFirstAndPref()
    }

    /**
     * After setting slots recalc other values
     * @param {Set} value
     * @param {Set} oldValue
     * @protected
     */
    afterSetSlots(value, oldValue) {
        this.recalcFirstAndPref()
    }

    /**
     * Before the new value for slots will be set we create a Set from the string
     * @param {String} value
     * @return {Set}
     * @protected
     */
    beforeSetSlots(value) {
        return new Set(value || "_")
    }

    /**
     * Remove unwanted entries and limit length
     * @param {String} input
     * @returns {any[]}
     * @protected
     */
    clean(input) {
        const me     = this,
              accept = new RegExp(this.accept || "\\d", "g");

        input = input.match(accept) || [];
        input = Array.from(me.pattern, c =>
            input[0] === c || me.slots.has(c) ? input.shift() || c : c
        );

        return input.slice(0, me.pattern.length)
    }

    /**
     * Calculate position and output correct String to Field
     * @protected
     */
    format() {
        let me                = this,
            el                = me.owner,
            {prev, selection} = me,
            clean             = me.clean.bind(me),
            value             = el.value || '';

        const [i, j] = [selection.start, selection.end].map(i => {
            i = me.clean(value.slice(0, i)).findIndex(c => me.slots.has(c));
            return i < 0 ? prev[prev.length - 1] : me.back ? prev[i - 1] || me.first : i
        });

        el.value = clean(value).join``;
        me.ignoreSelection = true;

        Neo.main.DomAccess.selectNode({id: el.getInputElId(), start: i, end: j});
        me.ignoreSelection = false;

        me.back = false
    }

    /**
     * Event
     * @param {Object} data
     * @returns {false|string}
     * @protected
     */
    onFieldBlur(data) {
        let {owner, pattern} = this;

        return owner.value === pattern && (owner.value = '')
    }

    /**
     * Event
     * @param {Object} data
     * @protected
     */
    onFieldFocus(data) {
        this.format()
    }

    /**
     * Event
     * @param {Object} data
     * @protected
     */
    onFieldKeyDown(data) {
        this.back = data.key === "Backspace"
    }

    /**
     * Event
     * @param {Object} data
     * @protected
     */
    onFieldSelectionChange(data) {
        let sel  = this.selection,
            dSel = data.selection;

        // Do not run, if ignore state or same start and end data
        if (this.ignoreSelection || (dSel.start === sel.start && dSel.end === sel.end)) {
            return
        }

        this.selection = dSel;
        this.format()
    }

    /**
     * Calc values for first and prev
     * @protected
     */
    recalcFirstAndPref() {
        let me               = this,
            {pattern, slots} = me;

        me.prev = (j => Array.from(pattern, (c, i) => slots.has(c) ? j = i + 1 : j))(0);
        me.first = [...pattern].findIndex(c => slots.has(c));

        me.selection = {start: me.first, end: me.first};

        me.owner.value && me.format()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(PrefixField));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,