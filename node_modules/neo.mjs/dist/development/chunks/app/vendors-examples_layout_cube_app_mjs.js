"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_layout_cube_app_mjs"],{

/***/ "./examples/layout/cube/MainContainer.mjs":
/*!************************************************!*\
  !*** ./examples/layout/cube/MainContainer.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../ConfigurationViewport.mjs */ "./examples/ConfigurationViewport.mjs");
/* harmony import */ var _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _src_layout_Cube_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/layout/Cube.mjs */ "./src/layout/Cube.mjs");
/* harmony import */ var _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/form/field/Number.mjs */ "./src/form/field/Number.mjs");
/* harmony import */ var _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../src/form/field/Radio.mjs */ "./src/form/field/Radio.mjs");
/* harmony import */ var _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../src/form/field/Range.mjs */ "./src/form/field/Range.mjs");
/* harmony import */ var _src_toolbar_Base_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../src/toolbar/Base.mjs */ "./src/toolbar/Base.mjs");








/**
 * @class Neo.examples.layout.cube.MainContainer
 * @extends Neo.examples.ConfigurationViewport
 */
class MainContainer extends _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        className           : 'Neo.examples.layout.cube.MainContainer',
        cls                 : ['examples-layout-cube-maincontainer'],
        configItemLabelWidth: 160,
        configItemWidth     : 280,
        layout              : {ntype: 'hbox', align: 'stretch'}
    }

    createConfigurationComponents() {
        let me       = this,
            {layout} = me.exampleComponent.getItem('container');

        return [{
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_4__["default"],
            checked       : layout.ntype === 'layout-cube',
            hideValueLabel: false,
            labelText     : 'layout',
            listeners     : {change: me.onRadioLayoutChange.bind(me, 'cube')},
            name          : 'layout',
            valueLabelText: 'Cube'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_4__["default"],
            checked       : layout.ntype === 'layout-vbox',
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onRadioLayoutChange.bind(me, 'vbox')},
            name          : 'layout',
            valueLabelText: 'VBox'
        }, {
            module   : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'perspective',
            listeners: {change: me.onLayoutConfigChange.bind(me, 'perspective')},
            maxValue : 2000,
            minValue : 400,
            stepSize : 10,
            style    : {marginTop: '20px'},
            value    : layout.perspective
        }, {
            module   : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'rotateX',
            listeners: {change: me.onLayoutConfigChange.bind(me, 'rotateX')},
            maxValue : 360,
            minValue : 0,
            stepSize : 1,
            style    : {marginTop: '20px'},
            value    : layout.rotateX
        }, {
            module   : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'rotateY',
            listeners: {change: me.onLayoutConfigChange.bind(me, 'rotateY')},
            maxValue : 360,
            minValue : 0,
            stepSize : 1,
            value    : layout.rotateY
        }, {
            module   : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'rotateZ',
            listeners: {change: me.onLayoutConfigChange.bind(me, 'rotateZ')},
            maxValue : 360,
            minValue : 0,
            stepSize : 1,
            value    : layout.rotateZ
        }, {
            module   : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'sideX',
            listeners: {change: me.onLayoutConfigChange.bind(me, 'sideX')},
            maxValue : 400,
            minValue : 100,
            stepSize : 10,
            style    : {marginTop: '20px'},
            value    : layout.sideX
        }, {
            module   : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'sideY',
            listeners: {change: me.onLayoutConfigChange.bind(me, 'sideY')},
            maxValue : 400,
            minValue : 100,
            stepSize : 10,
            value    : layout.sideY
        }, {
            module   : _src_form_field_Range_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'sideZ',
            listeners: {change: me.onLayoutConfigChange.bind(me, 'sideZ')},
            maxValue : 400,
            minValue : 100,
            stepSize : 10,
            value    : layout.sideZ
        }, {
            module   : _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            clearable: true,
            labelText: 'height',
            listeners: {change: me.onConfigChange.bind(me, 'height')},
            maxValue : 1000,
            minValue : 300,
            stepSize : 10,
            style    : {marginTop: '20px'},
            value    : me.exampleComponent.height
        }, {
            module   : _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            clearable: true,
            labelText: 'width',
            listeners: {change: me.onConfigChange.bind(me, 'width')},
            maxValue : 1000,
            minValue : 300,
            stepSize : 10,
            style    : {marginTop: '10px'},
            value    : me.exampleComponent.width
        }];
    }

    /**
     * @returns {Neo.component.Base}
     */
    createExampleComponent() {
        return Neo.create({
            module: _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
            height: 550,
            layout: {ntype: 'vbox', align: 'center', pack: 'center'},
            width : 550,

            items: [{
                module   : _src_container_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                reference: 'container',
                style    : {color: 'white', fontSize: '50px', margin: '50px', textAlign: 'center'},

                layout: {
                    ntype  : 'cube',
                    rotateX: 194,
                    rotateY: 213,
                    rotateZ: 162
                },

                items: [
                    {style: {backgroundColor: 'rgba(255,   0,   0, 0.5)'}, html: 'Front'},
                    {style: {backgroundColor: 'rgba(  0, 255,   0, 0.5)'}, html: 'Back'},
                    {style: {backgroundColor: 'rgba(  0,   0, 255, 0.5)'}, html: 'Left'},
                    {style: {backgroundColor: 'rgba(  0, 255, 255, 0.5)'}, html: 'Right'},
                    {style: {backgroundColor: 'rgba(255,   0, 255, 0.5)'}, html: 'Top'},
                    {style: {backgroundColor: 'rgba(255, 255,   0, 0.5)'}, html: 'Bottom'}
                ]
            }, {
                module: _src_toolbar_Base_mjs__WEBPACK_IMPORTED_MODULE_6__["default"],
                flex  : 'none',
                style : {marginTop: '1em'},

                itemDefaults: {
                    ntype  : 'button',
                    handler: 'up.onFaceButtonClick',
                    style  : {marginRight: '.3em'}
                },

                items: [
                    {text: 'Front'},
                    {text: 'Back'},
                    {text: 'Left'},
                    {text: 'Right'},
                    {text: 'Top'},
                    {text: 'Bottom'}
                ]
            }]
        })
    }

    /**
     * @param {Object} data
     */
    onFaceButtonClick(data) {
        this.getItem('container').layout['activeFace'] = data.component.text.toLowerCase()
    }


        /**
     * @param {String} config
     * @param {Object} opts
     */
    onLayoutConfigChange(config, opts) {
        this.getItem('container').layout[config] = opts.value
    }

    /**
     * @param {String} name
     * @param {Object} opts
     */
    onRadioLayoutChange(name, opts) {
        if (opts.value === true) { // we only want to listen to check events, not uncheck
            let layout = name;

            if (name === 'cube') {
                layout = {
                    ntype  : 'cube',
                    rotateX: 194,
                    rotateY: 213,
                    rotateZ: 162
                }
            }

            this.getItem('container').layout = layout;
        }
    }
}

Neo.setupClass(MainContainer);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MainContainer);


/***/ }),

/***/ "./examples/layout/cube/app.mjs":
/*!**************************************!*\
  !*** ./examples/layout/cube/app.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/layout/cube/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.layout.cube'
});


/***/ }),

/***/ "./src/form/field/Radio.mjs":
/*!**********************************!*\
  !*** ./src/form/field/Radio.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CheckBox.mjs */ "./src/form/field/CheckBox.mjs");
/* harmony import */ var _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../manager/Component.mjs */ "./src/manager/Component.mjs");



/**
 * @class Neo.form.field.Radio
 * @extends Neo.form.field.CheckBox
 */
class Radio extends _CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Radio'
         * @protected
         */
        className: 'Neo.form.field.Radio',
        /**
         * @member {String} ntype='radiofield'
         * @protected
         */
        ntype: 'radiofield',
        /**
         * @member {String[]} baseCls=['neo-radiofield','neo-checkboxfield']
         */
        baseCls: ['neo-radiofield', 'neo-checkboxfield'],
        /**
         * @member {String[]} iconCls=['far','fa-circle']
         */
        iconCls: ['far', 'fa-circle'],
        /**
         * @member {String} inputType='radio'
         */
        inputType: 'radio'
    }

    /**
     * Triggered after the checked config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetChecked(value, oldValue) {
        super.afterSetChecked(value, oldValue);

        // update radios with the same name to be unchecked
        value && this.uncheckGroupItems()
    }

    /**
     * Radios should only fire change & fieldChange events if checked.
     * If there was just 1 radio, you can not uncheck it.
     * @param {*} value
     * @param {*} oldValue
     */
    fireChangeEvent(value, oldValue) {
        this.checked && super.fireChangeEvent(value, oldValue)
    }

    /**
     * @returns {String[]}
     */
    getGroupValue() {
        let value = super.getGroupValue();

        return value.length > 0 ? value[0] : []
    }

    /**
     * Radios do not fire a change event for "uncheck", so we need to iterate over other radios with the same name.
     */
    uncheckGroupItems() {
        let me = this,
            radios;

        // discuss: we could limit this to radios inside the same form, IF a top level form is used
        radios = _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].find({
            ntype: 'radiofield',
            name : me.name
        });

        radios.forEach(item => {
            if (item.id !== me.id && item._checked) {
                item.checked = false
            }
        })
    }
}

Neo.setupClass(Radio);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Radio);


/***/ }),

/***/ "./src/form/field/Range.mjs":
/*!**********************************!*\
  !*** ./src/form/field/Range.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Number_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Number.mjs */ "./src/form/field/Number.mjs");


/**
 * @class Neo.form.field.Range
 * @extends Neo.form.field.Number
 */
class Range extends _Number_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * Removing the debounce for range fields
     * @member {Object} delayable
     * @protected
     * @static
     */
    static delayable = {}

    static config = {
        /**
         * @member {String} className='Neo.form.field.Range'
         * @protected
         */
        className: 'Neo.form.field.Range',
        /**
         * @member {String} ntype='rangefield'
         * @protected
         */
        ntype: 'rangefield',
        /**
         * @member {String[]} baseCls=['neo-rangefield','neo-textfield']
         */
        baseCls: ['neo-rangefield', 'neo-textfield'],
        /**
         * True shows a clear trigger in case the field has a non empty value.
         * @member {Boolean} clearable=false
         */
        clearable: false,
        /**
         * Value for the inputType_ textfield config
         * @member {String} inputType='range'
         */
        inputType: 'range',
        /**
         * If true, shows the result of the slider in the label
         * @member {Boolean} showResultInLabel=false
         */
        showResultInLabel: false,
        /**
         * @member {Array} tickmarks_=[]
         */
        tickmarks_: [],
        /**
         * @member {Boolean} useInputEvent=false
         */
        useInputEvent: false,
        /**
         * Disables the field.Number buttons
         * @member {Boolean} useInputEvent=false
         */
        useSpinButtons: false
    }

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        let me      = this,
            inputEl = me.vdom.cn[2];

        if (me.useInputEvent) {
            me.addDomListeners({
                input: {
                    fn   : me.onInputValueChange,
                    id   : me.vdom.cn[2].id,
                    scope: me
                }
            });
        }

        inputEl.cls = ['neo-rangefield-input']; // replace neo-textfield-input

        me.addValueToLabel()
    }

    /**
     * Triggered after the tickmarks config got changed
     * @param {Array} value
     * @param {Array} oldValue
     * @protected
     */
    afterSetTickmarks(value, oldValue) {
        // todo
    }

    /**
     * Triggered after the value config got changed
     * @param {Number} value
     * @param {Number} oldValue
     */
    afterSetValue(value, oldValue) {
        this.addValueToLabel();
        super.afterSetValue(value, oldValue)
    }

    /**
     * Update label with value
     */
    addValueToLabel() {
        let me = this;

        if (me.showResultInLabel) {
            me.getLabelEl().innerHTML = `[${me.value}] ` + me.labelText
        }
    }
}

Neo.setupClass(Range);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Range);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,