"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_fields_app_mjs"],{

/***/ "./examples/fields/MainContainer.mjs":
/*!*******************************************!*\
  !*** ./examples/fields/MainContainer.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _src_tab_Container_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/tab/Container.mjs */ "./src/tab/Container.mjs");
/* harmony import */ var _src_form_export_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/form/_export.mjs */ "./src/form/_export.mjs");




/**
 * @class Neo.examples.fields.MainContainer
 * @extends Neo.tab.Container
 */
class MainContainer extends _src_tab_Container_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        className  : 'Neo.examples.fields.MainContainer',
        activeIndex: 0,
        autoMount  : true,
        height     : 500,

        layout: {
            ntype: 'vbox',
            align: 'stretch'
        },

        itemDefaults: {
            ntype: 'component',
            style: {
                padding: '10px'
            }
        },

        style: {
            margin: '20px'
        },

        items: [
            {
                ntype: 'container',

                itemDefaults: {
                    flex      : '0 1 auto',
                    labelWidth: '70px'
                },

                layout: {
                    ntype: 'vbox'
                },

                items: [
                    {
                        ntype    : 'pickerfield',
                        id       : 'myPickerfield',
                        labelText: 'Picker',
                        width    : 220
                    },
                    {
                        module : _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                        iconCls: 'fa fa-minus',
                        style  : {marginTop: '20px'},
                        text   : 'Remove Triggers',
                        width  : 120,
                        handler: function() {
                            let field = Neo.getComponent('myPickerfield');
                            field.triggers = [];
                        }
                    },
                    {
                        module : _src_button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
                        iconCls: 'fa fa-plus',
                        text   : 'Add Trigger',
                        width  : 120,
                        handler: function() {
                            let field         = Neo.getComponent('myPickerfield'),
                                fieldTriggers = field.triggers || [],
                                triggers      = [...fieldTriggers]; // ensure to clone the array to not edit the internal oldValue by reference

                            triggers.push({
                                id     : Neo.getId('picker'),
                                cls    : 'fa fa-caret-down',
                                handler: 'onPickerTriggerClick'
                            });

                            field.triggers = triggers;
                        }
                    }
                ],

                tabButtonConfig: {
                    iconCls: 'fas fa-list',
                    text   : 'Picker'
                }
            },
            {
                ntype: 'container',

                itemDefaults: {
                    flex      : '0 1 auto',
                    labelWidth: '70px'
                },

                layout: {
                    ntype: 'vbox'
                },

                items: [
                    {
                        ntype    : 'checkboxfield',
                        checked  : true,
                        labelText: 'Option 1',
                        name     : 'group1'
                    },
                    {
                        ntype    : 'checkboxfield',
                        labelText: 'Option 2',
                        name     : 'group1'
                    },
                    {
                        ntype    : 'checkboxfield',
                        labelText: 'Option 3',
                        name     : 'group1'
                    },
                    {
                        ntype         : 'checkboxfield',
                        checked       : true,
                        hideValueLabel: false,
                        labelText     : 'Group 2',
                        name          : 'group2',
                        style         : {marginTop: '20px'},
                        valueLabelText: 'Option 1'
                    },
                    {
                        ntype         : 'checkboxfield',
                        hideValueLabel: false,
                        labelText     : '',
                        name          : 'group2',
                        valueLabelText: 'Option 2'
                    },
                    {
                        ntype         : 'checkboxfield',
                        hideValueLabel: false,
                        labelText     : '',
                        name          : 'group2',
                        valueLabelText: 'Option 3'
                    }
                ],

                tabButtonConfig: {
                    iconCls: 'fas fa-check-square',
                    text   : 'CheckBox'
                }
            },
            {
                ntype: 'container',

                itemDefaults: {
                    flex      : '0 1 auto',
                    labelWidth: '70px'
                },

                layout: {
                    ntype: 'vbox'
                },

                items: [
                    {
                        ntype    : 'radiofield',
                        checked  : true,
                        labelText: 'Option 1',
                        name     : 'group1'
                    },
                    {
                        ntype    : 'radiofield',
                        labelText: 'Option 2',
                        name     : 'group1'
                    },
                    {
                        ntype    : 'radiofield',
                        labelText: 'Option 3',
                        name     : 'group1'
                    },
                    {
                        ntype         : 'radiofield',
                        checked       : true,
                        hideValueLabel: false,
                        labelText     : 'Group 2',
                        name          : 'group2',
                        style         : {marginTop: '20px'},
                        valueLabelText: 'Option 1'
                    },
                    {
                        ntype         : 'radiofield',
                        hideValueLabel: false,
                        labelText     : '',
                        name          : 'group2',
                        valueLabelText: 'Option 2'
                    },
                    {
                        ntype         : 'radiofield',
                        hideValueLabel: false,
                        labelText     : '',
                        name          : 'group2',
                        valueLabelText: 'Option 3'
                    }
                ],

                tabButtonConfig: {
                    iconCls: 'far fa-circle',
                    text   : 'Radio'
                }
            },
            {
                ntype: 'container',

                itemDefaults: {
                    flex      : '0 1 auto',
                    labelWidth: '120px'
                },

                layout: {
                    ntype: 'vbox'
                },

                items: [
                    {
                        ntype    : 'rangefield',
                        labelText: '0-20, Step 1',
                        maxValue : 20,
                        minValue : 0,
                        value    : 10
                    },
                    {
                        ntype    : 'rangefield',
                        labelText: '0-20, Step 5',
                        maxValue : 20,
                        minValue : 0,
                        stepSize : 5,
                        value    : 10
                    }
                ],

                tabButtonConfig: {
                    iconCls: 'fa fa-exchange-alt',
                    text   : 'Range'
                }
            },
            {
                ntype: 'container',

                itemDefaults: {
                    flex      : '0 1 auto',
                    labelWidth: '120px'
                },

                layout: {
                    ntype: 'vbox'
                },

                items: [
                    {
                        ntype    : 'numberfield',
                        labelText: '0-20, Step 1',
                        maxValue : 20,
                        minValue : 0,
                        value    : 10
                    },
                    {
                        ntype    : 'numberfield',
                        labelText: '0-20, Step 5',
                        maxValue : 20,
                        minValue : 0,
                        stepSize : 5,
                        value    : 10
                    }
                ],
                tabButtonConfig: {
                    iconCls: 'fa fa-sort-numeric-up',
                    text   : 'Number'
                }
            },
            {
                tabButtonConfig: {
                    iconCls: 'fa fa-calendar',
                    text   : 'Date'
                },
                vdom: {
                    innerHTML: 'todo'
                }
            }
        ]
    }
}



Neo.applyClassConfig(MainContainer);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MainContainer);


/***/ }),

/***/ "./examples/fields/app.mjs":
/*!*********************************!*\
  !*** ./examples/fields/app.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onStart": () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/fields/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.fields',
    parentId: 'main-container'
});


/***/ }),

/***/ "./src/component/Legend.mjs":
/*!**********************************!*\
  !*** ./src/component/Legend.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/component/Base.mjs");


/**
 * Convenience class to render a legend with a text.
 * Used inside form.Fieldset
 * @class Neo.component.Legend
 * @extends Neo.component.Base
 */
class Legend extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.component.Legend'
         * @protected
         */
        className: 'Neo.component.Legend',
        /**
         * @member {String} ntype='legend'
         * @protected
         */
        ntype: 'legend',
        /**
         * @member {String[]} baseCls=['neo-legend']
         */
        baseCls: ['neo-legend'],
        /**
         * @member {String} iconCls_='far fa-check'
         */
        iconCls_: 'far fa-check',
        /**
         * @member {String} text_=''
         */
        text_: '',
        /**
         * @member {Boolean} useIcon_=true
         */
        useIcon_: true,
        /**
         * @member {Object} _vdom
         */
        _vdom:
        {tag: 'legend', cn:[
            {vtype: 'text'},
            {vtype: 'text'}
        ]}
    }

    /**
     * Triggered after the iconCls config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetIconCls(value, oldValue) {
        this.vdom.cn[0].html = `<i class="neo-legend-icon ${value}"></i>`;
        this.update();
    }

    /**
     * Triggered after the text config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetText(value, oldValue) {
        this.vdom.cn[1].html = value;
        this.update();
    }

    /**
     * Triggered after the useIcon config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetUseIcon(value, oldValue) {
        this.vdom.cn[0].removeDom = !value;
        this.update();
    }
}

Neo.applyClassConfig(Legend);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Legend);


/***/ }),

/***/ "./src/form/Container.mjs":
/*!********************************!*\
  !*** ./src/form/Container.mjs ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _container_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _form_field_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../form/field/Base.mjs */ "./src/form/field/Base.mjs");
/* harmony import */ var _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../manager/Component.mjs */ "./src/manager/Component.mjs");




/**
 * @class Neo.form.Container
 * @extends Neo.container.Base
 */
class Container extends _container_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.Container'
         * @protected
         */
        className: 'Neo.form.Container',
        /**
         * @member {String} ntype='form-container'
         * @protected
         */
        ntype: 'form-container',
        /**
         * @member {String[]} baseCls=['neo-form-container'],
         * @protected
         */
        baseCls: ['neo-form-container'],
        /**
         * @member {Object} vdom={tag: 'form',cn:[],onsubmit:'return false;'}
         */
        vdom:
        {tag: 'form', cn: [], onsubmit: 'return false;'}
    }

    /**
     * @param {Neo.container.Base} parent
     * @param {Object[]} modules
     * @returns {Object[]}
     */
    findNotLoadedModules(parent=this, modules=[]) {
        parent.items.forEach(item => {
            if (Neo.typeOf(item.module) === 'Function' && !item.isLoading) {
                modules.push({item, parent});
            } else {
                item.items && this.findNotLoadedModules(item, modules);
            }
        });

        return modules;
    }

    /**
     * Either pass a field name or id
     * @param {String} name
     * @returns {Promise<Neo.form.field.Base|null>} fields
     */
    async getField(name) {
        await this.loadModules();

        let fields = _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_2__["default"].getChildComponents(this),
            field;

        for (field of fields) {
            if (field instanceof _form_field_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                if (field.name === name || field.id === name) {
                    return field;
                }
            }
        }

        return null;
    }

    /**
     * @param {Neo.form.field.Base} field
     * @returns {String}
     */
    getFieldPath(field) {
        let path = field.formGroup ? field.formGroup.split('.') : [];

        path.push(field.name || field.id);

        return path.join('.');
    }

    /**
     * @returns {Promise<Neo.form.field.Base[]>} fields
     */
    async getFields() {
        let fields = [];

        await this.loadModules();

        _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_2__["default"].getChildComponents(this).forEach(item => {
            item instanceof _form_field_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] && fields.push(item);
        });

        return fields;
    }

    /**
     * @returns {Promise<Object>}
     */
    async getValues() {
        let fields = await this.getFields(),
            values = {},
            itemName, key, ns, nsArray, value;

        fields.forEach(item => {
            value = item.getValue();

            if (item.name) {
                itemName = item.name;

                if (item.formGroup) {
                    itemName = item.formGroup + '.' + itemName;
                }

                nsArray = itemName.split('.');
                key     = nsArray.pop();
                ns      = Neo.nsWithArrays(nsArray, true, values);
            } else {
                key = item.id;
                ns  = values;
            }

            /*
             * CheckBoxes need custom logic
             * => we only want to pass the uncheckedValue in case the field does not belong to a group
             * (multiple fields using the same name)
             */
            if (Object.hasOwn(ns, key) && value !== undefined) {
                if (ns[key] === item.uncheckedValue) {
                    ns[key] = []
                } else if (!Array.isArray(ns[key])) {
                    ns[key] = [ns[key]]
                }

                value !== item.uncheckedValue && ns[key].unshift(value)
            } else if (value !== undefined) {
                ns[key] = value
            }
        });

        return values;
    }

    /**
     * Returns true in case no form field isValid() call returns false
     * @returns {Promise<Boolean>}
     */
    async isValid() {
        let fields = await this.getFields(),
            i      = 0,
            len    = fields.length;

        for (; i < len; i++) {
            if (!fields[i].isValid()) {
                return false;
            }
        }

        return true;
    }

    /**
     * Loads all not loaded items inside card layouts
     * @returns {Promise<Neo.component.Base[]>}
     */
    async loadModules() {
        let me       = this,
            modules  = me.findNotLoadedModules(),
            promises = [];

        modules.forEach(module => {
            promises.push(module.parent.layout.loadModule(module.item));
        });

        modules = await Promise.all(promises);

        return modules;
    }

    /**
     * Resets field values by field name or field id.
     * Fields not included with a value will get reset to null.
     * @param {Object} [values]
     */
    async reset(values={}) {
        let me     = this,
            fields = await me.getFields(),
            path, value;

        fields.forEach(item => {
            path  = me.getFieldPath(item);
            value = Neo.nsWithArrays(path, false, values);

            item.reset(path ? value : null);
        })
    }

    /**
     * Set field values by field name or field id
     * @param {Object} values={}
     * @param {Boolean} suspendEvents=false
     */
    async setValues(values={}, suspendEvents=false) {
        let me     = this,
            fields = await me.getFields(),
            isCheckBox, isRadio, path, value;

        fields.forEach(item => {
            if (suspendEvents) {
                item.suspendEvents = true;
            }

            isCheckBox = Neo.form.field?.CheckBox && item instanceof Neo.form.field.CheckBox;
            path       = me.getFieldPath(item);
            value      = Neo.nsWithArrays(path, false, values);

            if (isCheckBox) {
                if (Neo.typeOf(value) === 'Array') {
                    if (value.includes(item.value)) {
                        item.checked = true
                    }
                } else {
                    item.checked = item.value === value
                }
            } else if (value !== undefined) {
                isRadio = Neo.form.field?.Radio && item instanceof Neo.form.field.Radio;

                if (isRadio) {
                    item.checked = item.value === value
                } else {
                    item.value = value
                }
            }

            if (suspendEvents) {
                delete item.suspendEvents;
            }
        })
    }

    /**
     * Updates the invalid state for all fields which have validate() implemented.
     * This can be useful for create-entity forms which show up "clean" until pressing a submit button.
     * @returns {Promise<Boolean>}
     */
    async validate() {
        let isValid = true,
            fields  = await this.getFields(),
            validField;

        fields.forEach(item => {
            validField = item.validate?.(false);

            if (!validField) {
                isValid = false;
            }
        });

        return isValid;
    }
}

Neo.applyClassConfig(Container);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Container);


/***/ }),

/***/ "./src/form/Fieldset.mjs":
/*!*******************************!*\
  !*** ./src/form/Fieldset.mjs ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _form_Container_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../form/Container.mjs */ "./src/form/Container.mjs");
/* harmony import */ var _component_Legend_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/Legend.mjs */ "./src/component/Legend.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");




/**
 * @class Neo.form.Fieldset
 * @extends Neo.form.Container
 */
class Fieldset extends _form_Container_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.Fieldset'
         * @protected
         */
        className: 'Neo.form.Fieldset',
        /**
         * @member {String} ntype='fieldset'
         * @protected
         */
        ntype: 'fieldset',
        /**
         * @member {String[]} baseCls=['neo-fieldset'],
         */
        baseCls: ['neo-fieldset'],
        /**
         * @member {Boolean} collapsed_=false,
         */
        collapsed_: false,
        /**
         * @member {Boolean} collapsible_=true,
         */
        collapsible_: true,
        /**
         * @member {Boolean} disableItemsOnCollapse_=true,
         */
        disableItemsOnCollapse_: true,
        /**
         * @member {Boolean} hasLabelClickListener=false,
         * @protected
         */
        hasLabelClickListener: false,
        /**
         * @member {String} iconClsChecked_='far fa-check'
         */
        iconClsChecked_: 'far fa-check',
        /**
         * @member {String} iconClsUnchecked_='far fa-square'
         */
        iconClsUnchecked_: 'far fa-square',
        /**
         * Internally stores the ids of disabled items when collapsing the fieldset
         * and re-applies keeps the disabled state when expanding.
         * @member {String[]|null} itemsDisabledMap=null
         * @protected
         */
        itemsDisabledMap: null,
        /**
         * @member {Neo.component.Legend|null} legend=null
         */
        legend: null,
        /**
         * @member {Object|null} legendConfig=null
         */
        legendConfig: null,
        /**
         * @member {String} title_=''
         */
        title_: '',
        /**
         * @member {Object} vdom={tag:'fieldset',cn:[]}
         */
        vdom:
        {tag: 'fieldset', cn: []}
    }

    /**
     * Triggered after the collapsed config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetCollapsed(value, oldValue) {
        let me = this;

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__["default"][value ? 'add' : 'remove'](me._cls, 'neo-collapsed');

        if (oldValue !== undefined) {
            me.items.forEach((item, index) => {
                if (index === 0 && item instanceof _component_Legend_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]) {
                    item.iconCls = value ? me.iconClsUnchecked : me.iconClsChecked
                } else {
                    if (me.disableItemsOnCollapse) {
                        me.itemsDisabledMap = me.itemsDisabledMap || [];

                        if (value) {
                            if (item.disabled) {
                                me.itemsDisabledMap.push(item.id);
                            } else {
                                item._disabled = true; // silent update
                            }
                        } else {
                            if (!me.itemsDisabledMap.includes(item.id)) {
                                item._disabled = false; // silent update
                            }
                        }
                    }

                    item.vdom.removeDom = value;
                }
            });

            if (!value) {
                // reset the disabled items map when expanding
                me.itemsDisabledMap = [];
            }
        }

        me.update();
    }

    /**
     * Triggered after the collapsible config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetCollapsible(value, oldValue) {
        let me  = this,
            cls = me.cls;

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__["default"][value ? 'add' : 'remove'](cls, 'neo-collapsible');
        me.cls = cls;

        if (me.legend) {
            me.legend.useIcon = value;
        }

        if (value && !me.hasLabelClickListener) {
            me.hasLabelClickListener = true;

            me.addDomListeners({
                click   : me.onLegendClick,
                delegate: 'neo-legend'
            });
        }
    }

    /**
     * Triggered after the iconClsChecked config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetIconClsChecked(value, oldValue) {
        if (oldValue !== undefined) {
            this.updateLegend();
        }
    }

    /**
     * Triggered after the iconClsUnchecked config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetIconClsUnchecked(value, oldValue) {
        if (oldValue !== undefined) {
            this.updateLegend();
        }
    }

    /**
     * Triggered after the title config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetTitle(value, oldValue) {
        this.updateLegend();
    }

    /**
     *
     */
    onConstructed() {
        super.onConstructed();

        this.collapsed && this.afterSetCollapsed(true, false);
    }

    /**
     * @param {Object} data
     */
    onLegendClick(data) {
        let me = this;

        if (me.collapsible) {
            me.collapsed = !me.collapsed;
        }
    }

    /**
     *
     */
    updateLegend() {
        let me      = this,
            iconCls = me.collapsed ? me.iconClsUnchecked : me.iconClsChecked,
            title   = me.title;

        if (iconCls === '' && title === '') {
            if (me.legend) {
                me.legend.vdom.reomveDom = true;
            }
        } else {
            if (me.legend) {
                me.legend.setSilent({
                    iconCls,
                    text: title
                });

                delete me.legend.vdom.reomveDom;
            } else {
                me.legend = me.insert(0, {
                    module: _component_Legend_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                    iconCls,
                    text  : title,
                    ...me.legendConfig
                });
            }
        }

        me.update();
    }
}

Neo.applyClassConfig(Fieldset);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Fieldset);


/***/ }),

/***/ "./src/form/_export.mjs":
/*!******************************!*\
  !*** ./src/form/_export.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Container": () => (/* reexport safe */ _Container_mjs__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "Fieldset": () => (/* reexport safe */ _Fieldset_mjs__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "field": () => (/* reexport module object */ _field_trigger_export_mjs__WEBPACK_IMPORTED_MODULE_0__),
/* harmony export */   "trigger": () => (/* reexport module object */ _field_export_mjs__WEBPACK_IMPORTED_MODULE_1__)
/* harmony export */ });
/* harmony import */ var _field_trigger_export_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./field/trigger/_export.mjs */ "./src/form/field/trigger/_export.mjs");
/* harmony import */ var _field_export_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./field/_export.mjs */ "./src/form/field/_export.mjs");
/* harmony import */ var _Container_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Container.mjs */ "./src/form/Container.mjs");
/* harmony import */ var _Fieldset_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Fieldset.mjs */ "./src/form/Fieldset.mjs");







/***/ }),

/***/ "./src/form/field/Chip.mjs":
/*!*********************************!*\
  !*** ./src/form/field/Chip.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Select_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Select.mjs */ "./src/form/field/Select.mjs");


/**
 * @class Neo.form.field.Chip
 * @extends Neo.form.field.Select
 */
class Chip extends _Select_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Chip'
         * @protected
         */
        className: 'Neo.form.field.Chip',
        /**
         * @member {String} ntype='chipfield'
         * @protected
         */
        ntype: 'chipfield',
        /**
         * @member {Object|null} listConfig={useCheckBoxes: true}
         */
        listConfig: {
            useCheckBoxes: true
        }
    }
}

Neo.applyClassConfig(Chip);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Chip);


/***/ }),

/***/ "./src/form/field/Date.mjs":
/*!*********************************!*\
  !*** ./src/form/field/Date.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _component_DateSelector_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../component/DateSelector.mjs */ "./src/component/DateSelector.mjs");
/* harmony import */ var _trigger_Date_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trigger/Date.mjs */ "./src/form/field/trigger/Date.mjs");
/* harmony import */ var _util_Date_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/Date.mjs */ "./src/util/Date.mjs");
/* harmony import */ var _Picker_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Picker.mjs */ "./src/form/field/Picker.mjs");
/* harmony import */ var _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util/VDom.mjs */ "./src/util/VDom.mjs");






/**
 * @class Neo.form.field.Date
 * @extends Neo.form.field.Picker
 */
class DateField extends _Picker_mjs__WEBPACK_IMPORTED_MODULE_3__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Date'
         * @protected
         */
        className: 'Neo.form.field.Date',
        /**
         * @member {String} ntype='datefield'
         * @protected
         */
        ntype: 'datefield',
        /**
         * @member {String[]} baseCls=['neo-datefield','neo-pickerfield','neo-textfield']
         */
        baseCls: ['neo-datefield', 'neo-pickerfield', 'neo-textfield'],
        /**
         * @member {Neo.component.DateSelector|null} dateSelector=null
         * @protected
         */
        dateSelector: null,
        /**
         * @member {Object|null} dateSelectorConfig=null
         */
        dateSelectorConfig: null,
        /**
         * True to hide the DatePicker when selecting a day
         * @member {Boolean} hidePickerOnSelect=false
         */
        hidePickerOnSelect: false,
        /**
         * @member {String} inputType='date'
         */
        inputType: 'date',
        /**
         * @member {Number} pickerHeight=225
         */
        pickerHeight: 225,
        /**
         * @member {Number} pickerWidth=200
         */
        pickerWidth: 200,
        /**
         * @member {Object|Object[]} triggers=[{module: DateTrigger}]
         * @protected
         */
        triggers: [{
            module: _trigger_Date_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]
        }]
    }

    /**
     * Setting the value to true will return a Date object when calling getValue()
     * @member {Boolean} submitDateObject=false
     */
    submitDateObject = false

    /**
     * @param config
     */
    construct(config) {
        super.construct(config);

        let me = this;

        me.dateSelector = Neo.create(_component_DateSelector_mjs__WEBPACK_IMPORTED_MODULE_0__["default"], {
            dayNameFormat: 'short',
            value        : me.value || _util_Date_mjs__WEBPACK_IMPORTED_MODULE_2__["default"].convertToyyyymmdd(new Date()),
            ...me.dateSelectorConfig
        });

        me.dateSelector.keys._keys.push(
            {fn: 'onContainerKeyDownEscape', key: 'Escape', scope: me.id}
        );

        me.dateSelector.on({
            change: me.onDatePickerChange,
            scope : me
        });
    }

    /**
     * Triggered after the value config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetValue(value, oldValue) {
        super.afterSetValue(value, oldValue);

        if (oldValue !== undefined) {
            this.dateSelector.value = value
        }
    }

    /**
     * @returns {Neo.component.DateSelector}
     */
    createPickerComponent() {
        return this.dateSelector;
    }

    /**
     * @returns {Date|String|null}
     */
    getValue() {
        let value = this.value;

        return this.submitDateObject && value ? new Date(value) : value
    }

    /**
     * @returns {Boolean}
     */
    hasContent() {
        if (this.labelPosition === 'inline') {
            return true;
        }

        return super.hasContent()
    }

    /**
     * @param {Object} data
     * @protected
     */
    onContainerKeyDownEscape(data) {
        let me = this;

        me.hidePicker();
        me.focus(me.getInputElId());
    }

    /**
     * @param {Object} opts
     */
    onDatePickerChange(opts) {
        let me   = this,
            vdom = me.vdom;

        if (me.hidePickerOnSelect) {
            _util_VDom_mjs__WEBPACK_IMPORTED_MODULE_4__["default"].removeVdomChild(vdom, me.getPickerId());

            me.promiseVdomUpdate().then(data => {
                me.value = opts.value;
            });
        } else {
            me.value = opts.value;
        }
    }

    /**
     * @param {Object} data
     * @protected
     */
    onInputValueChange(data) {
        if (data.valid === true) {
            super.onInputValueChange(data)
        }
    }

    /**
     * @param {Object} data
     * @protected
     */
    onKeyDownEnter(data) {
        let me = this;

        if (me.pickerIsMounted) {
            me.dateSelector.focusCurrentItem();
            super.onKeyDownEnter(data);
        } else {
            super.onKeyDownEnter(data, me.dateSelector.focusCurrentItem, me.dateSelector);
        }
    }
}

Neo.applyClassConfig(DateField);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DateField);


/***/ }),

/***/ "./src/form/field/Display.mjs":
/*!************************************!*\
  !*** ./src/form/field/Display.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Text_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Text.mjs */ "./src/form/field/Text.mjs");


/**
 * An extended form.field.Text, which is read-only.
 * @class Neo.form.field.Display
 * @extends Neo.form.field.Text
 */
class Display extends _Text_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Display'
         * @protected
         */
        className: 'Neo.form.field.Display',
        /**
         * @member {String} ntype='displayfield'
         * @protected
         */
        ntype: 'displayfield',
        /**
         * @member {String[]} baseCls=['neo-displayfield','neo-textfield']
         */
        baseCls: ['neo-displayfield', 'neo-textfield'],
        /**
         * @member {Boolean} clearable=false
         * @protected
         */
        clearable: false
    }

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        let me      = this,
            inputEl = me.getInputEl();

        inputEl.readonly = 'readonly';
        inputEl.tabindex = '-1';

        me.update();
    }
}

Neo.applyClassConfig(Display);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Display);


/***/ }),

/***/ "./src/form/field/Email.mjs":
/*!**********************************!*\
  !*** ./src/form/field/Email.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Text_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Text.mjs */ "./src/form/field/Text.mjs");


/**
 * @class Neo.form.field.Email
 * @extends Neo.form.field.Text
 */
class Email extends _Text_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * See: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address
     * @member {RegExp} emailRegex
     * @protected
     * @static
     */
    static emailRegex = /^[a-z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i

    static config = {
        /**
         * @member {String} className='Neo.form.field.Email'
         * @protected
         */
        className: 'Neo.form.field.Email',
        /**
         * @member {String} ntype='emailfield'
         * @protected
         */
        ntype: 'emailfield',
        /**
         * @member {String} errorTextValidEmail='Not a valid email address'
         */
        errorTextValidEmail: 'Not a valid email address',
        /**
         * @member {String} inputType='email'
         */
        inputType: 'email'
    }

    /**
     * Checks for client-side field errors
     * @param {Boolean} silent=true
     * @returns {Boolean} Returns true in case there are no client-side errors
     */
    validate(silent=true) {
        let me          = this,
            returnValue = super.validate(silent),
            value       = me.value;

        if (returnValue) {
            if (value && !Email.emailRegex.test(value)) {
                me._error = me.errorTextValidEmail;
                returnValue = false;
            }
        }

        !returnValue && !me.clean && me.updateError(me._error, silent);

        return returnValue
    }
}

Neo.applyClassConfig(Email);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Email);


/***/ }),

/***/ "./src/form/field/Radio.mjs":
/*!**********************************!*\
  !*** ./src/form/field/Radio.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CheckBox.mjs */ "./src/form/field/CheckBox.mjs");
/* harmony import */ var _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../manager/Component.mjs */ "./src/manager/Component.mjs");



/**
 * @class Neo.form.field.Radio
 * @extends Neo.form.field.CheckBox
 */
class Radio extends _CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Radio'
         * @protected
         */
        className: 'Neo.form.field.Radio',
        /**
         * @member {String} ntype='radiofield'
         * @protected
         */
        ntype: 'radiofield',
        /**
         * @member {String[]} baseCls=['neo-radiofield','neo-checkboxfield']
         */
        baseCls: ['neo-radiofield', 'neo-checkboxfield'],
        /**
         * @member {String[]} iconCls=['far','fa-circle']
         */
        iconCls: ['far', 'fa-circle'],
        /**
         * @member {String} inputType='radio'
         */
        inputType: 'radio'
    }

    /**
     * Triggered after the checked config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetChecked(value, oldValue) {
        super.afterSetChecked(value, oldValue);

        // update radios with the same name to be unchecked
        value && this.uncheckGroupItems()
    }

    /**
     * @returns {String|null}
     */
    getValue() {
        return this.checked ? this.value : undefined
    }

    /**
     * Radios do not fire a change event for "uncheck", so we need to iterate over other radios with the same name.
     */
    uncheckGroupItems() {
        let me = this,
            radios;

        // discuss: we could limit this to radios inside the same form, IF a top level form is used
        radios = _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].find({
            ntype: 'radiofield',
            name : me.name
        });

        radios.forEach(item => {
            if (item.id !== me.id && item._checked) {
                item.checked = false;
            }
        })
    }
}

Neo.applyClassConfig(Radio);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Radio);


/***/ }),

/***/ "./src/form/field/Range.mjs":
/*!**********************************!*\
  !*** ./src/form/field/Range.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Number_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Number.mjs */ "./src/form/field/Number.mjs");


/**
 * @class Neo.form.field.Range
 * @extends Neo.form.field.Number
 */
class Range extends _Number_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Range'
         * @protected
         */
        className: 'Neo.form.field.Range',
        /**
         * @member {String} ntype='rangefield'
         * @protected
         */
        ntype: 'rangefield',
        /**
         * @member {String[]} baseCls=['neo-rangefield','neo-textfield']
         */
        baseCls: ['neo-rangefield', 'neo-textfield'],
        /**
         * True shows a clear trigger in case the field has a non empty value.
         * @member {Boolean} clearable=false
         */
        clearable: false,
        /**
         * Value for the inputType_ textfield config
         * @member {String} inputType='range'
         */
        inputType: 'range',
        /**
         * @member {Array} tickmarks_=[]
         */
        tickmarks_: [],
        /**
         * @member {Boolean} useInputEvent=false
         */
        useInputEvent : false,
        /**
         * Disables the field.Number buttons
         * @member {Boolean} useInputEvent=false
         */
        useSpinButtons: false
    }

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        let me      = this,
            inputEl = me.vdom.cn[2];

        if (me.useInputEvent) {
            me.addDomListeners({
                input: {
                    fn    : me.onInputValueChange,
                    id    : me.vdom.cn[2].id,
                    scope : me
                }
            });
        }

        inputEl.cls = ['neo-rangefield-input']; // replace neo-textfield-input
    }

    /**
     * Triggered after the tickmarks config got changed
     * @param {Array} value
     * @param {Array} oldValue
     * @protected
     */
    afterSetTickmarks(value, oldValue) {
        // todo
    }
}

Neo.applyClassConfig(Range);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Range);


/***/ }),

/***/ "./src/form/field/Search.mjs":
/*!***********************************!*\
  !*** ./src/form/field/Search.mjs ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Text_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Text.mjs */ "./src/form/field/Text.mjs");


/**
 * @class Neo.form.field.Search
 * @extends Neo.form.field.Text
 */
class Search extends _Text_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Search'
         * @protected
         */
        className: 'Neo.form.field.Search',
        /**
         * @member {String} ntype='searchfield'
         * @protected
         */
        ntype: 'searchfield',
        /**
         * @member {String[]} baseCls=['neo-searchfield','neo-textfield']
         */
        baseCls: ['neo-searchfield', 'neo-textfield'],
        /**
         * Value for the hideLabel_ textfield config
         * @member {Boolean} hideLabel=true
         */
        hideLabel: true,
        /**
         * Value for the placeholderText_ textfield config
         * @member {String} placeholderText='Search'
         */
        placeholderText: 'Search'
    }
}

Neo.applyClassConfig(Search);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Search);


/***/ }),

/***/ "./src/form/field/TextArea.mjs":
/*!*************************************!*\
  !*** ./src/form/field/TextArea.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Text_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Text.mjs */ "./src/form/field/Text.mjs");


/**
 *
 * @class Neo.form.field.TextArea
 * @extends Neo.form.field.Text
 * @abstract
 */
class TextArea extends _Text_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * Valid values for wrap
     * @member {String[]} wrapValues=['hard', 'off', 'soft', null]
     * @protected
     * @static
     */
    static wrapValues = ['hard', 'off', 'soft', null]

    static config = {
        /**
         * @member {String} className='Neo.form.field.TextArea'
         * @protected
         */
        className: 'Neo.form.field.TextArea',
        /**
         * @member {String} ntype='textarea'
         * @protected
         */
        ntype: 'textarea',
        /**
         * @member {String[]} baseCls=['neo-textarea','neo-textfield']
         */
        baseCls: ['neo-textarea', 'neo-textfield'],
        /**
         * The visible width of the text control, in average character widths.
         * If it is specified, it must be a positive integer.
         * If it is not specified, the default value is 20.
         * @member {Number|null} cols_=null
         */
        cols_: null,
        /**
         * @member {String} inputTag_='textarea'
         */
        inputTag_: 'textarea',
        /**
         * Disabling to set a type for the textarea tag
         * See: inputTag_
         * @member {String|null} inputType=null
         * @protected
         */
        inputType: null,
        /**
         * Use false to disable the browsers default resizing feature
         * @member {Boolean} resizable_=false
         */
        resizable_: false,
        /**
         * An integer > 0 or null
         * @member {Number|null} rows_=3
         */
        rows_: 3,
        /**
         * Indicates how the control wraps text. Possible values are: hard, soft, off
         * If this attribute is not specified, soft is its default value.
         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea
         * @member {String|null} wrap_=null
         */
        wrap_: null
    }

    /**
     * Triggered after the cols config got changed
     * @param {Number|null} value
     * @param {Number|null} oldValue
     * @protected
     */
    afterSetCols(value, oldValue) {
        this.changeInputElKey('cols', value);
    }

    /**
     * Triggered after the inputTag config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetInputTag(value, oldValue) {
        this.changeInputElKey('tag', value);
    }

    /**
     * Triggered after the resizable config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetResizable(value, oldValue) {
        let me    = this,
            style = this.getInputEl().style;

        style.resize = value ? null : 'none';
        me.update();
    }

    /**
     * Triggered after the rows config got changed
     * @param {Number|null} value
     * @param {Number|null} oldValue
     * @protected
     */
    afterSetRows(value, oldValue) {
        this.changeInputElKey('rows', value);
    }

    /**
     * Triggered after the value config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetValue(value, oldValue) {
        let inputEl = this.getInputEl();

        if (inputEl) {
            inputEl.html = value;
        }

        super.afterSetValue(value, oldValue);
    }

    /**
     * Triggered after the wrap config got changed
     * @param {Number|null} value
     * @param {Number|null} oldValue
     * @protected
     */
    afterSetWrap(value, oldValue) {
        this.changeInputElKey('wrap', value);
    }

    /**
     * Checks if the new wrap value matches a value of the static wrapValues config
     * @param {String} value
     * @param {String} oldValue
     * @returns {String} value
     * @protected
     */
    beforeSetWrap(value, oldValue) {
        return this.beforeSetEnumValue(value, oldValue, 'wrap', 'wrapValues');
    }
}

Neo.applyClassConfig(TextArea);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TextArea);


/***/ }),

/***/ "./src/form/field/Url.mjs":
/*!********************************!*\
  !*** ./src/form/field/Url.mjs ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Text_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Text.mjs */ "./src/form/field/Text.mjs");


/**
 * An extended form.field.Text which creates an HTML5 url input. Most browsers will show a specialized
 * virtual keyboard for web address input.
 * @class Neo.form.field.Url
 * @extends Neo.form.field.Text
 */
class Url extends _Text_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Url'
         * @protected
         */
        className: 'Neo.form.field.Url',
        /**
         * @member {String} ntype='urlfield'
         * @protected
         */
        ntype: 'urlfield',
        /**
         * Value for the inputType_ textfield config
         * @member {String} inputType='url'
         */
        inputType: 'url'
    }
}

Neo.applyClassConfig(Url);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Url);


/***/ }),

/***/ "./src/form/field/_export.mjs":
/*!************************************!*\
  !*** ./src/form/field/_export.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Base": () => (/* reexport safe */ _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "CheckBox": () => (/* reexport safe */ _CheckBox_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "Chip": () => (/* reexport safe */ _Chip_mjs__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "Date": () => (/* reexport safe */ _Date_mjs__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "Display": () => (/* reexport safe */ _Display_mjs__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "Email": () => (/* reexport safe */ _Email_mjs__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "Number": () => (/* reexport safe */ _Number_mjs__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "Password": () => (/* reexport safe */ _Password_mjs__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   "Picker": () => (/* reexport safe */ _Picker_mjs__WEBPACK_IMPORTED_MODULE_8__["default"]),
/* harmony export */   "Radio": () => (/* reexport safe */ _Radio_mjs__WEBPACK_IMPORTED_MODULE_9__["default"]),
/* harmony export */   "Range": () => (/* reexport safe */ _Range_mjs__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   "Search": () => (/* reexport safe */ _Search_mjs__WEBPACK_IMPORTED_MODULE_11__["default"]),
/* harmony export */   "Select": () => (/* reexport safe */ _Select_mjs__WEBPACK_IMPORTED_MODULE_12__["default"]),
/* harmony export */   "Text": () => (/* reexport safe */ _Text_mjs__WEBPACK_IMPORTED_MODULE_13__["default"]),
/* harmony export */   "TextArea": () => (/* reexport safe */ _TextArea_mjs__WEBPACK_IMPORTED_MODULE_14__["default"]),
/* harmony export */   "Time": () => (/* reexport safe */ _Time_mjs__WEBPACK_IMPORTED_MODULE_15__["default"]),
/* harmony export */   "Url": () => (/* reexport safe */ _Url_mjs__WEBPACK_IMPORTED_MODULE_16__["default"])
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/form/field/Base.mjs");
/* harmony import */ var _CheckBox_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CheckBox.mjs */ "./src/form/field/CheckBox.mjs");
/* harmony import */ var _Chip_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Chip.mjs */ "./src/form/field/Chip.mjs");
/* harmony import */ var _Date_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Date.mjs */ "./src/form/field/Date.mjs");
/* harmony import */ var _Display_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Display.mjs */ "./src/form/field/Display.mjs");
/* harmony import */ var _Email_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Email.mjs */ "./src/form/field/Email.mjs");
/* harmony import */ var _Number_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Number.mjs */ "./src/form/field/Number.mjs");
/* harmony import */ var _Password_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Password.mjs */ "./src/form/field/Password.mjs");
/* harmony import */ var _Picker_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Picker.mjs */ "./src/form/field/Picker.mjs");
/* harmony import */ var _Radio_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Radio.mjs */ "./src/form/field/Radio.mjs");
/* harmony import */ var _Range_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Range.mjs */ "./src/form/field/Range.mjs");
/* harmony import */ var _Search_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Search.mjs */ "./src/form/field/Search.mjs");
/* harmony import */ var _Select_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Select.mjs */ "./src/form/field/Select.mjs");
/* harmony import */ var _Text_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Text.mjs */ "./src/form/field/Text.mjs");
/* harmony import */ var _TextArea_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./TextArea.mjs */ "./src/form/field/TextArea.mjs");
/* harmony import */ var _Time_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Time.mjs */ "./src/form/field/Time.mjs");
/* harmony import */ var _Url_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Url.mjs */ "./src/form/field/Url.mjs");




















/***/ }),

/***/ "./src/form/field/trigger/CopyToClipboard.mjs":
/*!****************************************************!*\
  !*** ./src/form/field/trigger/CopyToClipboard.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/form/field/trigger/Base.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../util/Array.mjs */ "./src/util/Array.mjs");



/**
 * Copy to clipboard Trigger to copy the input value of TextFields or subclasses to clipboard.
 * @class Neo.form.field.trigger.CopyToClipboard
 * @extends Neo.form.field.trigger.Base
 */
class CopyToClipboard extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.trigger.CopyToClipboard'
         * @protected
         */
        className: 'Neo.form.field.trigger.CopyToClipboard',
        /**
         * @member {String} ntype='trigger-copytoclipboard'
         * @protected
         */
        ntype: 'trigger-copytoclipboard',
        /**
         * @member {String[]} baseCls=['neo-field-trigger','neo-trigger-clipboard']
         */
        baseCls: ['neo-field-trigger', 'neo-trigger-clipboard'],
        /**
         * @member {String|null} iconCls='fa fa-clipboard'
         */
        iconCls: 'fa fa-clipboard',
        /**
         * @member {Boolean} showOnHover=true
         */
        showOnHover: true,
        /**
         * Internal flag used by field.getTrigger()
         * @member {String} type='copyToClipboard'
         * @protected
         */
        type: 'copyToClipboard',
        /**
         * @member {Number} weight_=21
         */
        weight: 21
    }

    /**
     * Triggered after the hidden config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetHidden(value, oldValue) {
        let cls = this.cls;
        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"][value? 'add' : 'remove'](cls, 'neo-is-hidden');
        this.cls = cls;
    }

    /**
     * @returns {Boolean} true in case the trigger should be hidden
     */
    getHiddenState() {
        return !this.field.value || this.field.value.length === 0;
    }

    /**
     *
     */
    onConstructed() {
        super.onConstructed();

        let me = this;

        me.field.on({
            change     : me.onFieldChange,
            constructed: me.onFieldChange,
            scope      : me
        });

        me.hidden = me.getHiddenState();
    }

    /**
     * @param {Object} opts
     */
    onFieldChange(opts) {
        this.hidden = this.getHiddenState();
    }

    /**
     * @param {Object} data
     */
    onTriggerClick(data) {
        Neo.main.DomAccess.selectNode({
            id: this.field.getInputEl().id
        }).then(data => {
            Neo.main.DomAccess.execCommand({
                command: 'copy'
            });
        });
    }
}

Neo.applyClassConfig(CopyToClipboard);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CopyToClipboard);


/***/ }),

/***/ "./src/form/field/trigger/Date.mjs":
/*!*****************************************!*\
  !*** ./src/form/field/trigger/Date.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Picker_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Picker.mjs */ "./src/form/field/trigger/Picker.mjs");


/**
 * used by form.field.Date
 * @class Neo.form.field.trigger.Date
 * @extends Neo.form.field.trigger.Picker
 */
class DateTrigger extends _Picker_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.trigger.Date'
         * @protected
         */
        className: 'Neo.form.field.trigger.Date',
        /**
         * @member {String} ntype='trigger-date'
         * @protected
         */
        ntype: 'trigger-date',
        /**
         * @member {String|null} iconCls='fa fa-calendar-alt'
         */
        iconCls: 'fa fa-calendar-alt'
    }
}

Neo.applyClassConfig(DateTrigger);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DateTrigger);


/***/ }),

/***/ "./src/form/field/trigger/_export.mjs":
/*!********************************************!*\
  !*** ./src/form/field/trigger/_export.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Base": () => (/* reexport safe */ _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "Clear": () => (/* reexport safe */ _Clear_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "CopyToClipboard": () => (/* reexport safe */ _CopyToClipboard_mjs__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "Date": () => (/* reexport safe */ _Date_mjs__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "Picker": () => (/* reexport safe */ _Picker_mjs__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "SpinDown": () => (/* reexport safe */ _SpinDown_mjs__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "SpinUp": () => (/* reexport safe */ _SpinUp_mjs__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "SpinUpDown": () => (/* reexport safe */ _SpinUpDown_mjs__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   "Time": () => (/* reexport safe */ _Time_mjs__WEBPACK_IMPORTED_MODULE_8__["default"])
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/form/field/trigger/Base.mjs");
/* harmony import */ var _Clear_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Clear.mjs */ "./src/form/field/trigger/Clear.mjs");
/* harmony import */ var _CopyToClipboard_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CopyToClipboard.mjs */ "./src/form/field/trigger/CopyToClipboard.mjs");
/* harmony import */ var _Date_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Date.mjs */ "./src/form/field/trigger/Date.mjs");
/* harmony import */ var _Picker_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Picker.mjs */ "./src/form/field/trigger/Picker.mjs");
/* harmony import */ var _SpinDown_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SpinDown.mjs */ "./src/form/field/trigger/SpinDown.mjs");
/* harmony import */ var _SpinUp_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SpinUp.mjs */ "./src/form/field/trigger/SpinUp.mjs");
/* harmony import */ var _SpinUpDown_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SpinUpDown.mjs */ "./src/form/field/trigger/SpinUpDown.mjs");
/* harmony import */ var _Time_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Time.mjs */ "./src/form/field/trigger/Time.mjs");












/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,