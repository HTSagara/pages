"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_toolbar_paging_app_mjs"],{

/***/ "./examples/toolbar/paging/app.mjs":
/*!*****************************************!*\
  !*** ./examples/toolbar/paging/app.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _view_MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view/MainContainer.mjs */ "./examples/toolbar/paging/view/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _view_MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.toolbar.paging'
});


/***/ }),

/***/ "./examples/toolbar/paging/model/User.mjs":
/*!************************************************!*\
  !*** ./examples/toolbar/paging/model/User.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/data/Model.mjs */ "./src/data/Model.mjs");


/**
 * @class Neo.examples.toolbar.paging.model.User
 * @extends Neo.data.Model
 */
class User extends _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.toolbar.paging.model.User'
         * @protected
         */
        className: 'Neo.examples.toolbar.paging.model.User',
        /**
         * @member {Object[]} fields
         */
        fields: [{
            name: 'firstname',
            type: 'String'
        }, {
            name: 'id',
            type: 'Integer'
        }, {
            name: 'image',
            type: 'String'
        }, {
            name: 'isOnline',
            type: 'Boolean'
        }, {
            name: 'lastname',
            type: 'String'
        }]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(User));


/***/ }),

/***/ "./examples/toolbar/paging/store/Users.mjs":
/*!*************************************************!*\
  !*** ./examples/toolbar/paging/store/Users.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/data/Store.mjs */ "./src/data/Store.mjs");
/* harmony import */ var _model_User_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../model/User.mjs */ "./examples/toolbar/paging/model/User.mjs");



/**
 * @class Neo.examples.toolbar.paging.store.Users
 * @extends Neo.data.Store
 */
class Users extends _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.toolbar.paging.store.Users'
         * @protected
         */
        className: 'Neo.examples.toolbar.paging.store.Users',
        /**
         * @member {Object|String|null} api
         */
        api: 'MyApp.backend.UserService',
        /**
         * @member {Boolean} autoLoad=true
         */
        autoLoad: true,
        /**
         * True to sort the collection items when adding / inserting new ones
         * @member {Boolean} autoSort=false
         */
        autoSort: false,
        /**
         * @member {Neo.data.Model} model=UserModel
         */
        model: _model_User_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
        /**
         * @member {Boolean} remoteFilter=true
         */
        remoteFilter: true,
        /**
         * @member {Boolean} remoteSort=true
         */
        remoteSort: true,
        /**
         * @member {Object[]} sorters
         */
        sorters: [{
            direction: 'ASC',
            property : 'id'
        }]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Users));


/***/ }),

/***/ "./examples/toolbar/paging/view/MainContainer.mjs":
/*!********************************************************!*\
  !*** ./examples/toolbar/paging/view/MainContainer.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _MainContainerController_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainerController.mjs */ "./examples/toolbar/paging/view/MainContainerController.mjs");
/* harmony import */ var _MainContainerModel_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MainContainerModel.mjs */ "./examples/toolbar/paging/view/MainContainerModel.mjs");
/* harmony import */ var _src_toolbar_Paging_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/toolbar/Paging.mjs */ "./src/toolbar/Paging.mjs");
/* harmony import */ var _UserTableContainer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./UserTableContainer.mjs */ "./examples/toolbar/paging/view/UserTableContainer.mjs");
/* harmony import */ var _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/container/Viewport.mjs */ "./src/container/Viewport.mjs");






/**
 * @class Neo.examples.toolbar.paging.view.MainContainer
 * @extends Neo.container.Viewport
 */
class MainContainer extends _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_4__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.toolbar.paging.view.MainContainer'
         * @protected
         */
        className: 'Neo.examples.toolbar.paging.view.MainContainer',
        /**
         * @member {Neo.controller.Component} controller=MainContainerController
         */
        controller: _MainContainerController_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
        /**
         * @member {Object[]} items
         */
        items: [{
            ntype: 'toolbar',
            flex : 'none',
            items: ['->', {
                handler: 'onAddUserButtonClick',
                iconCls: 'fa fa-circle-plus',
                text   : 'Add User',
                tooltip: 'Open a dialog and edit a new user'
            }, {
                handler: 'onShowFiltersButtonClick',
                iconCls: 'fa fa-filter',
                style  : {marginLeft: '2px'},
                text   : 'Show Filters',
                tooltip: 'Show filters for the user'
            }]
        }, {
            module      : _UserTableContainer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            bind        : {store: 'stores.users'},
            flex        : 1,
            reference   : 'user-table',
            wrapperStyle: {maxHeight: '300px'}
        }, {
            module: _src_toolbar_Paging_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
            bind  : {store: 'stores.users'},
            flex  : 'none',

            // We want to apply custom configs to the provided item references
            items: {
                'nav-button-first': {
                    tooltip: 'Go to first page'
                },
                'nav-button-prev' : {
                    tooltip: 'Go to previous page'
                },
                'nav-button-next' : {
                    tooltip: 'Go to next page'
                },
                'nav-button-last' : {
                    tooltip: {
                        text  : 'Go to last page',
                        align : {
                            edgeAlign : 'b-t'
                        }
                    }
                },

                // These two have been moved to the start of the Toolbar by their weights
                label: {
                    style : {marginLeft: 0},
                    weight: -10000,

                    // Embed a tooltip request into the DOM
                    vdom: {
                        data: {
                            neoTooltip: 'The Label'
                        }
                    }
                },
                rowsPerPage: {
                    style  : {margin: '0 .5em'},
                    tooltip: 'Set the number of rows to display in a page',
                    weight : -999
                }
            }
        }],
        /**
         * @member {Object} layout={ntype:'vbox',align:'stretch'}
         */
        layout: {ntype: 'vbox', align: 'stretch'},
        /**
         * @member {Neo.model.Component} model=MainContainerModel
         */
        model: _MainContainerModel_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
        /**
         * @member {Object} style={padding:'20px'}
         */
        style: {padding: '20px'}
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainer));


/***/ }),

/***/ "./examples/toolbar/paging/view/MainContainerController.mjs":
/*!******************************************************************!*\
  !*** ./examples/toolbar/paging/view/MainContainerController.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_controller_Component_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/controller/Component.mjs */ "./src/controller/Component.mjs");


/**
 * @class Neo.examples.toolbar.paging.view.MainContainerController
 * @extends Neo.controller.Component
 */
class MainContainerController extends _src_controller_Component_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * @member {Neo.examples.toolbar.paging.view.AddUserDialog|null} addUserDialog=null
     */
    addUserDialog = null

    static config = {
        /**
         * @member {String} className='Neo.examples.toolbar.paging.view.MainContainerController'
         * @protected
         */
        className: 'Neo.examples.toolbar.paging.view.MainContainerController'
    }

    /**
     * @param {Object} data
     */
    onAddUserButtonClick(data) {
        let me = this;

        if (!me.addUserDialog) {
            Promise.all(/*! import() */[__webpack_require__.e("vendors-src_dialog_Base_mjs"), __webpack_require__.e("examples_toolbar_paging_view_AddUserDialog_mjs-src_container_Panel_mjs")]).then(__webpack_require__.bind(__webpack_require__, /*! ./AddUserDialog.mjs */ "./examples/toolbar/paging/view/AddUserDialog.mjs")).then(module => {
                me.addUserDialog = Neo.create(module.default, {
                    animateTargetId: data.component.id,
                    appName        : me.component.appName,
                    closeAction    : 'hide'
                })
            })
        } else {
            me.addUserDialog.show()
        }
    }

    /**
     * @param {Object} data
     */
    onShowFiltersButtonClick(data) {
        let userTable = this.getReference('user-table');

        userTable.showHeaderFilters = !userTable.showHeaderFilters
    }

    /**
     * Sending messages through a WebSocket inside the data worker
     * @param {Object} data
     */
    onUserServiceReadButtonClick(data) {
        MyApp.backend.UserService.read().then(response => {
            console.log(response)
        })
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainerController));


/***/ }),

/***/ "./examples/toolbar/paging/view/MainContainerModel.mjs":
/*!*************************************************************!*\
  !*** ./examples/toolbar/paging/view/MainContainerModel.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_model_Component_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/model/Component.mjs */ "./src/model/Component.mjs");
/* harmony import */ var _store_Users_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/Users.mjs */ "./examples/toolbar/paging/store/Users.mjs");



/**
 * @class Neo.examples.toolbar.paging.view.MainContainerModel
 * @extends Neo.model.Component
 */
class MainContainerModel extends _src_model_Component_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.toolbar.paging.view.MainContainerModel'
         * @protected
         */
        className: 'Neo.examples.toolbar.paging.view.MainContainerModel',
        /**
         * @member {Object} stores
         */
        stores: {
            users: {
                module  : _store_Users_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                pageSize: 30
            }
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(MainContainerModel));


/***/ }),

/***/ "./examples/toolbar/paging/view/UserTableContainer.mjs":
/*!*************************************************************!*\
  !*** ./examples/toolbar/paging/view/UserTableContainer.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_table_Container_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/table/Container.mjs */ "./src/table/Container.mjs");


/**
 * @class Neo.examples.toolbar.paging.view.UserTableContainer
 * @extends Neo.table.Container
 */
class UserTableContainer extends _src_table_Container_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.examples.toolbar.paging.view.UserTableContainer'
         * @protected
         */
        className: 'Neo.examples.toolbar.paging.view.UserTableContainer',
        /**
         * @member {Object[]} columns
         */
        columns: [{
            dataField: 'id',
            text     : 'Id'
        }, {
            dataField: 'firstname',
            text     : 'Firstname'
        }, {
            dataField: 'lastname',
            text     : 'Lastname'
        },  {
            dataField: 'isOnline',
            text     : 'Is Online'
        }, {
            dataField: 'image',
            flex     : 1,
            text     : 'Image'
        }]
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(UserTableContainer));


/***/ }),

/***/ "./src/component/Label.mjs":
/*!*********************************!*\
  !*** ./src/component/Label.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/component/Base.mjs");


/**
 * Convenience class to render a label with a text
 * @class Neo.component.Label
 * @extends Neo.component.Base
 */
class Label extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.component.Label'
         * @protected
         */
        className: 'Neo.component.Label',
        /**
         * @member {String} ntype='label'
         * @protected
         */
        ntype: 'label',
        /**
         * @member {String[]} baseCls=['neo-label']
         */
        baseCls: ['neo-label'],
        /**
         * @member {String} text_=''
         */
        text_: '',
        /**
         * @member {Object} _vdom={tag: 'label'}
         */
        _vdom:
        {tag: 'label', draggable: false}
    }

    /**
     * Triggered after the text config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetText(value, oldValue) {
        this.vdom.html = value;
        this.update()
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Label));


/***/ }),

/***/ "./src/container/Viewport.mjs":
/*!************************************!*\
  !*** ./src/container/Viewport.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/container/Base.mjs");


/**
 * @class Neo.container.Viewport
 * @extends Neo.container.Base
 */
class Viewport extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.container.Viewport'
         * @protected
         */
        className: 'Neo.container.Viewport',
        /**
         * @member {String} ntype='viewport'
         * @protected
         */
        ntype: 'viewport',
        /**
         * true applies 'neo-body-viewport' to the document.body
         * @member {Boolean} applyBodyCls=true
         */
        applyBodyCls: true,
        /**
         * Assuming that a Viewport is the top level view of your app, and you want to mount it right away.
         * Could be without any items. Use false otherwise.
         * @member {Boolean} autoMount=true
         */
        autoMount: true,
        /**
         * @member {String[]} baseCls=['neo-viewport']
         */
        baseCls: ['neo-viewport'],
        /**
         * true applies a main.addon.ResizeObserver and fires a custom resize event
         * which other instances can subscribe to.
         * @member {Boolean} monitorSize_=false
         */
        monitorSize_: false
    }

    /**
     * Triggered after the mounted config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetMounted(value, oldValue) {
        super.afterSetMounted(value, oldValue);

        let me = this;

        if (value && me.monitorSize) {
            me.addDomListeners([{resize: me.onDomResize, scope: me}])
        }
    }

    /**
     *
     */
    onConstructed() {
        super.onConstructed();

        let {appName, windowId} = this;

        this.applyBodyCls && Neo.main.DomAccess.applyBodyCls({
            appName,
            cls: ['neo-body-viewport'],
            windowId
        })
    }

    /**
     * @param {Object} data
     */
    onDomResize(data) {
        this.fire('resize', data)
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Viewport));


/***/ }),

/***/ "./src/controller/Component.mjs":
/*!**************************************!*\
  !*** ./src/controller/Component.mjs ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/controller/Base.mjs");
/* harmony import */ var _util_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Logger.mjs */ "./src/util/Logger.mjs");



/**
 * @class Neo.controller.Component
 * @extends Neo.controller.Base
 */
class Component extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.controller.Component'
         * @protected
         */
        className: 'Neo.controller.Component',
        /**
         * @member {String} ntype='component-controller'
         * @protected
         */
        ntype: 'component-controller',
        /**
         * @member {Neo.component.Base|null} component=null
         * @protected
         */
        component: null,
        /**
         * @member {Neo.controller.Component|null} parent_=null
         */
        parent_: null,
        /**
         * @member {Object} references=null
         * @protected
         */
        references: null,
        /**
         * @member {Number|null} windowId=null
         */
        windowId: null
    }

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        let me          = this,
            {component} = me,
            listenerId;

        me.references = {};

        if (component.isConstructed) {
            me.onComponentConstructed()
        } else {
            listenerId = component.on('constructed', () => {
                component.un('constructed', listenerId);
                me.onComponentConstructed()
            })
        }
    }

    /**
     * Triggered before the parent config gets changed
     * @param {Neo.controller.Component|null} value
     * @param {Neo.controller.Component|null} oldValue
     * @protected
     */
    beforeSetParent(value, oldValue) {
        return value || this.getParent()
    }

    /**
     * @param {String} handlerName
     * @param {Neo.component.Base} component
     * @returns {Neo.controller.Component|Boolean|null}
     */
    getHandlerScope(handlerName, component) {
        let me       = this,
            {parent} = me;

        if (component) {
            // Look for ths function *name* first in the Component itself.
            // If we find it, return true so calling code knows not to continue to search.
            const handlerCb = component.resolveCallback(handlerName, component);

            // Handler fn is resolved in the Component or its own parent chain.
            // Return a status indicating that we do not need an early binding
            if (handlerCb.fn) {
                return true
            }
        }

        return Neo.isFunction(me[handlerName]) ?
            me : parent ?
            parent.getHandlerScope(handlerName) : null
    }

    /**
     * sameLevelOnly=false will return the closest VM inside the component parent tree,
     * in case there is none on the same level.
     * @param {Boolean} [sameLevelOnly=false]
     */
    getModel(sameLevelOnly=false) {
        let {component} = this;
        return sameLevelOnly ? component.model : component.getModel()
    }

    /**
     * Get the closest controller inside the components parent tree
     * @returns {Neo.controller.Component|null}
     */
    getParent() {
        let me       = this,
            {parent} = me;

        if (parent) {
            return parent;
        }

        return me.component.parent?.getController() || null
    }

    /**
     * todo: update changed references (e.g. container.remove() then container.add() using the same key)
     * @param {String} name
     * @returns {*}
     */
    getReference(name) {
        let me        = this,
            component = me.references[name];

        if (!component) {
            component = me.component.down({reference: name});

            if (component) {
                me.references[name] = component
            }
        }

        return component || null
    }

    /**
     * Convenience shortcut for accessing model.Component based data.Stores
     * @param {String} key
     * @returns {Neo.data.Store}
     */
    getStore(key) {
        return this.getModel().getStore(key)
    }

    /**
     * Override this method inside your view controllers as a starting point in case you need references
     * (instead of using onConstructed() inside your controller)
     */
    onComponentConstructed() {}

    /**
     * @param {Neo.component.Base} component=this.component
     */
    parseConfig(component=this.component) {
        let me = this,
            {handler, listeners, reference, validator} = component,
            eventHandler, handlerScope;

        if (handler && typeof handler === 'string') {
            handlerScope = me.getHandlerScope(handler, component);

            // If the handler name was not resolved in the Component itself, bind it
            if (handlerScope !== true) {
                component.handler = handlerScope[handler].bind(component.handlerScope || handlerScope);
            }
        }

        listeners && Object.entries(listeners).forEach(([key, value]) => {
            if (key !== 'scope' && key !== 'delegate') {
                if (Neo.isString(value)) {
                    eventHandler = value;
                    handlerScope = me.getHandlerScope(eventHandler, component);

                    if (!handlerScope) {
                        _util_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].logError('Unknown event handler for', eventHandler, component)
                    } else if (handlerScope !== true) {
                        listeners[key] = {};
                        listeners[key].fn = handlerScope[eventHandler].bind(handlerScope)
                    }
                } else {
                    value.forEach(listener => {
                        if (Neo.isObject(listener) && listener.hasOwnProperty('fn') && Neo.isString(listener.fn)) {
                            eventHandler = listener.fn;
                            handlerScope = me.getHandlerScope(eventHandler, component);

                            if (!handlerScope) {
                                console.error('Unknown event handler for', eventHandler, component)
                            } else if (handlerScope !== true) {
                                listener.fn = handlerScope[eventHandler].bind(handlerScope)
                            }
                        }
                    })
                }
            }
        });

        if (Neo.isString(validator)) {
            handlerScope = me.getHandlerScope(validator);

            if (!handlerScope) {
                _util_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].logError('Unknown validator for', component.id, component)
            } else {
                component.validator = handlerScope[validator].bind(handlerScope)
            }
        }

        if (reference) {
            me.references[reference] = component
        }
    }

    /**
     * @param {Neo.component.Base} component=this.component
     */
    parseDomListeners(component=this.component) {
        let me             = this,
            {domListeners} = component,
            eventHandler, scope;

        domListeners?.forEach(domListener => {
            Object.entries(domListener).forEach(([key, value]) => {
                eventHandler = null;

                if (key !== 'scope' && key !== 'delegate') {
                    if (Neo.isString(value)) {
                        eventHandler = value;
                    } else if (Neo.isObject(value) && value.hasOwnProperty('fn') && Neo.isString(value.fn)) {
                        eventHandler = value.fn;
                    }

                    if (eventHandler) {
                        scope = me.getHandlerScope(eventHandler);

                        if (!scope) {
                            _util_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].logError('Unknown domEvent handler for', eventHandler, component)
                        } else {
                            domListener[key] = scope[eventHandler].bind(scope)
                        }
                    }
                }
            })
        })
    }

    /**
     * Will get called by component.Base: destroy() in case the component has a reference config
     * @param {Neo.component.Base} component
     */
    removeReference(component) {
        let me           = this,
            {references} = me,
            key;

        for (key in references) {
            if (component === references[key]) {
                delete references[key];
                break
            }
        }

        me.getParent()?.removeReference(component)
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Component));


/***/ }),

/***/ "./src/toolbar/Base.mjs":
/*!******************************!*\
  !*** ./src/toolbar/Base.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/Base.mjs */ "./src/component/Base.mjs");
/* harmony import */ var _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _component_Label_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../component/Label.mjs */ "./src/component/Label.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");






/**
 * @class Neo.toolbar.Base
 * @extends Neo.container.Base
 */
class Base extends _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    /**
     * Valid values for dock
     * @member {String[]} dockPositions=['top','right','bottom','left', null]
     * @static
     */
    static dockPositions = ['top', 'right', 'bottom', 'left', null]

    static config = {
        /**
         * @member {String} className='Neo.toolbar.Base'
         * @protected
         */
        className: 'Neo.toolbar.Base',
        /**
         * @member {String} ntype='toolbar'
         * @protected
         */
        ntype: 'toolbar',
        /**
         * @member {String[]} baseCls=['neo-toolbar']
         */
        baseCls: ['neo-toolbar'],
        /**
         * @member {String|null} dock_=null
         */
        dock_: null,
        /**
         * @member {Object} itemDefaults={ntype:'button'}
         */
        itemDefaults: {
            ntype: 'button'
        },
        /**
         * @member {Object} layout={ntype: 'hbox', align: 'center', pack : 'start'}
         */
        layout: {
            ntype: 'hbox',
            align: 'center',
            pack : 'start'
        },
        /**
         * @member {Boolean} sortable_=false
         */
        sortable_: false,
        /**
         * @member {Neo.draggable.toolbar.SortZone|null} sortZone=null
         */
        sortZone: null,
        /**
         * @member {Object} sortZoneConfig=null
         */
        sortZoneConfig: null
    }

    /**
     * Triggered after the appName config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetAppName(value, oldValue) {
        super.afterSetAppName(value, oldValue);

        if (this.sortZone) {
            this.sortZone.appName = value
        }
    }

    /**
     * Triggered after the dock config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetDock(value, oldValue) {
        let me            = this,
            {cls}         = me,
            dockPositions = me.getStaticConfig('dockPositions');

        dockPositions.forEach(key => {
            key !== null && _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__["default"][key === value ? 'add' : 'remove'](cls, 'neo-dock-' + key)
        });

        me.cls    = cls;
        me.layout = me.getLayoutConfig()
    }

    /**
     * Triggered after the sortable config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetSortable(value, oldValue) {
        let me = this;

        if (value && !me.sortZone) {
            Promise.all(/*! import() */[__webpack_require__.e("vendors-src_draggable_DragZone_mjs"), __webpack_require__.e("vendors-src_draggable_toolbar_SortZone_mjs")]).then(__webpack_require__.bind(__webpack_require__, /*! ../draggable/toolbar/SortZone.mjs */ "./src/draggable/toolbar/SortZone.mjs")).then(module => {
                me.sortZone = Neo.create({
                    module             : module.default,
                    appName            : me.appName,
                    boundaryContainerId: me.id,
                    owner              : me,
                    ...me.sortZoneConfig
                })
            })
        }
    }

    /**
     * Checks if the new dock position matches a value of the static dockPositions config
     * @param {String} value
     * @param {String} oldValue
     * @returns {String} value
     * @protected
     */
    beforeSetDock(value, oldValue) {
        return this.beforeSetEnumValue(value, oldValue, 'dock', 'dockPositions')
    }

    /**
     *
     */
    createItems() {
        let items = this._items;

        if (Array.isArray(items)) {
            items.forEach((item, index) => {
                if (item === '->') {
                    items[index] = Neo.create({
                        module: _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                        flex  : 1
                    })
                }
            })
        }

        return super.createItems()
    }

    /**
     * Creates a layout config depending on this.dock
     * @returns {Object} layoutConfig
     */
    getLayoutConfig() {
        let me = this,
            layoutConfig;

        if (me.dock) {
            switch(me.dock) {
                case 'bottom':
                case 'top':
                    layoutConfig = {
                        ntype: 'hbox',
                        align: 'center',
                        pack : 'start'
                    };
                    break
                case 'left':
                    layoutConfig = {
                        ntype    : 'vbox',
                        align    : 'center',
                        direction: 'column-reverse',
                        pack     : 'start'
                    };
                    break
                case 'right':
                    layoutConfig = {
                        ntype    : 'vbox',
                        align    : 'center',
                        direction: 'column',
                        pack     : 'start'
                    };
                    break
            }
        }

        return layoutConfig || me.layout
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Base));


/***/ }),

/***/ "./src/toolbar/Paging.mjs":
/*!********************************!*\
  !*** ./src/toolbar/Paging.mjs ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_ClassSystem_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/ClassSystem.mjs */ "./src/util/ClassSystem.mjs");
/* harmony import */ var _form_field_ComboBox_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../form/field/ComboBox.mjs */ "./src/form/field/ComboBox.mjs");
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Base.mjs */ "./src/toolbar/Base.mjs");




/**
 * @class Neo.toolbar.Paging
 * @extends Neo.toolbar.Base
 */
class Paging extends _Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.toolbar.Paging'
         * @protected
         */
        className: 'Neo.toolbar.Paging',
        /**
         * @member {String} ntype='paging-toolbar'
         * @protected
         */
        ntype: 'paging-toolbar',
        /**
         * @member {String[]} baseCls=['neo-paging-toolbar','neo-toolbar']
         */
        baseCls: ['neo-paging-toolbar', 'neo-toolbar'],
        /**
         * @member {Number} currentPage_=1
         */
        currentPage_: 1,
        /**
         * @member {Number} pageSize_=30
         */
        pageSize_: 30,
        /**
         * @member {Function} pagesText_=me=>`Page: ${me.page} / ${me.getMaxPages()}`
         */
        pagesText_: me => `Page ${me.currentPage} / ${me.getMaxPages()}`,
        /**
         * @member {Neo.data.Store|null} store_=null
         */
        store_: null,
        /**
         * @member {Function} totalText_=count=>`Total: ${count} records`
         */
        totalText_: count => `Total: ${count} rows`,
        /**
         * @member {Object|Object[]} items
         */
        items: {
            'nav-button-first': {
                handler  : 'up.onFirstPageButtonClick',
                iconCls  : 'fa fa-angles-left'
            },
            'nav-button-prev': {
                handler  : 'up.onPrevPageButtonClick',
                iconCls  : 'fa fa-angle-left',
                style    : {marginLeft: '2px'}
            },
            'pages-text': {
                ntype    : 'label',
                style    : {marginLeft: '10px'}
            },
            'nav-button-next': {
                handler  : 'up.onNextPageButtonClick',
                iconCls  : 'fa fa-angle-right',
                style    : {marginLeft: '10px'}
            },
            'nav-button-last': {
                handler  : 'up.onLastPageButtonClick',
                iconCls  : 'fa fa-angles-right',
                style    : {marginLeft: '2px'}
            },
            label: {
                ntype: 'label',
                style: {marginLeft: '50px'},
                text : 'Rows per page:'
            },
            rowsPerPage: {
                module       : _form_field_ComboBox_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                clearable    : false,
                hideLabel    : true,
                listConfig   : {highlightFilterValue: false},
                listeners    : {change: 'up.onPageSizeFieldChange'},
                style        : {margin: 0},
                triggerAction: 'all',
                useFilter    : false,
                value        : 30,
                width        : 70,

                store: {
                    model: {
                        fields: [
                            {name: 'id',   type: 'Integer'},
                            {name: 'name', type: 'Integer'}
                        ]
                    },
                    data: [
                        {id: 1, name:  10},
                        {id: 2, name:  20},
                        {id: 3, name:  30},
                        {id: 4, name:  50},
                        {id: 5, name: 100}
                    ]
                }
            },
            spacer: {
                ntype: 'component',
                flex : 1
            },
            'total-text': {
                ntype: 'label'
            }
        }
    }

    /**
     * Triggered after the currentPage config got changed
     * @param {Number} value
     * @param {Number} oldValue
     * @protected
     */
    afterSetCurrentPage(value, oldValue) {
        if (oldValue) {
            this.store.currentPage = value
        }
    }

    /**
     * Triggered after the pageSize config got changed
     * @param {Number} value
     * @param {Number} oldValue
     * @protected
     */
    afterSetPageSize(value, oldValue) {
        if (oldValue) {
            this._currentPage = 1; // silent update
            this.store.pageSize = value
        }
    }

    /**
     * Triggered after the pagesText config got changed
     * @param {Function} value
     * @param {Function} oldValue
     * @protected
     */
    afterSetPagesText(value, oldValue) {
        oldValue && this.updatePagesText()
    }

    /**
     * Triggered after the totalText config got changed
     * @param {Function} value
     * @param {Function} oldValue
     * @protected
     */
    afterSetTotalText(value, oldValue) {
        oldValue && this.updateTotalText()
    }

    /**
     * Triggered before the store config gets changed.
     * @param {Neo.data.Store|Object|null} value
     * @param {Neo.data.Store|null} oldValue
     * @returns {Neo.data.Store}
     * @protected
     */
    beforeSetStore(value, oldValue) {
        let listeners = {
            load : this.onStoreLoad,
            scope: this
        };

        oldValue?.un(listeners);

        return _util_ClassSystem_mjs__WEBPACK_IMPORTED_MODULE_0__["default"].beforeSetInstance(value, null, {listeners})
    }

    /**
     * @returns {Number}
     */
    getMaxPages() {
        return Math.ceil(this.store.totalCount / this.pageSize)
    }

    /**
     *
     */
    onFirstPageButtonClick() {
        this.currentPage = 1
    }

    /**
     *
     */
    onLastPageButtonClick() {
        this.currentPage = this.getMaxPages()
    }

    /**
     *
     */
    onNextPageButtonClick() {
        let me = this;

        if (me.currentPage < me.getMaxPages()) {
            me.currentPage++
        }
    }

    /**
     * @param {Object} data
     */
    onPageSizeFieldChange(data) {
        this.pageSize = data.value
    }

    /**
     *
     */
    onPrevPageButtonClick() {
        if (this.currentPage > 1) {
            this.currentPage--
        }
    }

    /**
     *
     */
    onStoreLoad() {
        let me = this;

        me.currentPage = me.store.currentPage;

        me.updateNavigationButtons();
        me.updatePagesText();
        me.updateTotalText()
    }

    /**
     *
     */
    updateNavigationButtons() {
        let me            = this,
            {currentPage} = me,
            maxPages      = me.getMaxPages();

        me.down({reference: 'nav-button-first'}).disabled = currentPage === 1;
        me.down({reference: 'nav-button-prev'}) .disabled = currentPage === 1;
        me.down({reference: 'nav-button-next'}) .disabled = currentPage === maxPages;
        me.down({reference: 'nav-button-last'}) .disabled = currentPage === maxPages
    }

    /**
     *
     */
    updatePagesText() {
        let me = this;

        me.down({reference: 'pages-text'}).text = me.pagesText(me)
    }

    /**
     *
     */
    updateTotalText() {
        let me = this;

        me.down({reference: 'total-text'}).text = me.totalText(me.store.totalCount)
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Neo.setupClass(Paging));


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,