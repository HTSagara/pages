"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_component_statusbadge_app_mjs-src_form_field_Base_mjs"],{

/***/ "./examples/component/statusbadge/MainContainer.mjs":
/*!**********************************************************!*\
  !*** ./examples/component/statusbadge/MainContainer.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/form/field/CheckBox.mjs */ "./src/form/field/CheckBox.mjs");
/* harmony import */ var _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ConfigurationViewport.mjs */ "./examples/ConfigurationViewport.mjs");
/* harmony import */ var _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/form/field/Number.mjs */ "./src/form/field/Number.mjs");
/* harmony import */ var _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/form/field/Radio.mjs */ "./src/form/field/Radio.mjs");
/* harmony import */ var _src_component_StatusBadge_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../src/component/StatusBadge.mjs */ "./src/component/StatusBadge.mjs");
/* harmony import */ var _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../src/form/field/Text.mjs */ "./src/form/field/Text.mjs");







/**
 * @class Neo.examples.component.statusbadge.MainContainer
 * @extends Neo.examples.ConfigurationViewport
 */
class MainContainer extends _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static config = {
        className: 'Neo.examples.component.statusbadge.MainContainer',
        autoMount: true,
        configItemLabelWidth: 110,
        configItemWidth: 230,
        layout: { ntype: 'hbox', align: 'stretch' }
    }

    createConfigurationComponents() {
        let me = this;

        return [{
            module: _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
            checked: me.exampleComponent.closable,
            labelText: 'closable',
            listeners: { change: me.onConfigChange.bind(me, 'closable') }
        }, {
            module: _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
            clearable: true,
            labelText: 'height',
            listeners: { change: me.onConfigChange.bind(me, 'height') },
            maxValue: 100,
            minValue: 20,
            stepSize: 2,
            style: { marginTop: '10px' },
            value: me.exampleComponent.height
        }, {
            module: _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
            clearable: true,
            labelText: 'width',
            listeners: { change: me.onConfigChange.bind(me, 'width') },
            maxValue: 300,
            minValue: 100,
            stepSize: 5,
            style: { marginTop: '10px' },
            value: me.exampleComponent.width
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'label Alert',
            listeners: { change: me.onConfigChange.bind(me, 'labelAlert') },
            style: { marginTop: '20px' },
            value: me.exampleComponent.labelAlert
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'icon Alert',
            listeners: { change: me.onConfigChange.bind(me, 'iconAlert') },
            value: me.exampleComponent.iconAlert
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'side-icon Alert',
            listeners: { change: me.onConfigChange.bind(me, 'sideIconAlert') },
            value: me.exampleComponent.sideIconAlert
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'label Error',
            listeners: { change: me.onConfigChange.bind(me, 'labelError') },
            style: { marginTop: '10px' },
            value: me.exampleComponent.labelError
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'icon Error',
            listeners: { change: me.onConfigChange.bind(me, 'iconError') },
            value: me.exampleComponent.iconError
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'side-icon Error',
            listeners: { change: me.onConfigChange.bind(me, 'sideIconError') },
            value: me.exampleComponent.sideIconError
        },{
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'label Info',
            listeners: { change: me.onConfigChange.bind(me, 'labelInfo') },
            style: { marginTop: '10px' },
            value: me.exampleComponent.labelInfo
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'icon Info',
            listeners: { change: me.onConfigChange.bind(me, 'iconInfo') },
            value: me.exampleComponent.iconInfo
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'side-icon Info',
            listeners: { change: me.onConfigChange.bind(me, 'sideIconInfo') },
            value: me.exampleComponent.sideIconInfo 
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'label Neutral',
            listeners: { change: me.onConfigChange.bind(me, 'labelNeutral') },
            style: { marginTop: '10px' },
            value: me.exampleComponent.labelNeutral
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'icon Neutral',
            listeners: { change: me.onConfigChange.bind(me, 'iconNeutral') },
            value: me.exampleComponent.iconNeutral
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'side-icon Neutral',
            listeners: { change: me.onConfigChange.bind(me, 'sideIconNeutral') },
            value: me.exampleComponent.sideIconNeutral
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'label Success',
            listeners: { change: me.onConfigChange.bind(me, 'labelSuccess') },
            style: { marginTop: '10px' },
            value: me.exampleComponent.labelSuccess
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'icon Success',
            listeners: { change: me.onConfigChange.bind(me, 'iconSuccess') },
            value: me.exampleComponent.iconSuccess
        }, {
            module: _src_form_field_Text_mjs__WEBPACK_IMPORTED_MODULE_5__["default"],
            labelText: 'side-icon Success',
            listeners: { change: me.onConfigChange.bind(me, 'sideIconSuccess') },
            value: me.exampleComponent.sideIconSuccess
        }, {
            module: _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
            checked: me.exampleComponent.deactivateStateIcons,
            labelText: 'deactivate State Icons',
            style: { marginTop: '20px' },
            listeners: { change: me.onConfigChange.bind(me, 'deactivateStateIcons') },
        }, {
            module: _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
            checked: me.exampleComponent.deactivateSideIcons,
            labelText: 'deactivate Side Icons',
            listeners: { change: me.onConfigChange.bind(me, 'deactivateSideIcons') },
        }, {
            module: _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            checked: me.exampleComponent.state === 'alert',
            hideValueLabel: false,
            labelText: 'state',
            listeners: { change: me.onRadioChange.bind(me, 'state', 'alert') },
            name: 'state',
            style: { marginTop: '20px' },
            valueLabelText: 'alert'
        }, {
            module: _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            checked: me.exampleComponent.state === 'error',
            hideValueLabel: false,
            labelText: '',
            listeners: { change: me.onRadioChange.bind(me, 'state', 'error') },
            name: 'state',
            valueLabelText: 'error'
        }, {
            module: _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            checked: me.exampleComponent.state === 'info',
            hideValueLabel: false,
            labelText: '',
            listeners: { change: me.onRadioChange.bind(me, 'state', 'info') },
            name: 'state',
            valueLabelText: 'info'
        }, {
            module: _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            checked: me.exampleComponent.state === 'neutral',
            hideValueLabel: false,
            labelText: '',
            listeners: { change: me.onRadioChange.bind(me, 'state', 'neutral') },
            name: 'state',
            valueLabelText: 'neutral'
        }, {
            module: _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
            checked: me.exampleComponent.state === 'success',
            hideValueLabel: false,
            labelText: '',
            listeners: { change: me.onRadioChange.bind(me, 'state', 'success') },
            name: 'state',
            valueLabelText: 'success'
        }]
    }

    createExampleComponent() {
        return Neo.create({
            module: _src_component_StatusBadge_mjs__WEBPACK_IMPORTED_MODULE_4__["default"],
            height: 30,
            state: 'info'
        })
    }
}

Neo.applyClassConfig(MainContainer);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MainContainer);


/***/ }),

/***/ "./examples/component/statusbadge/app.mjs":
/*!************************************************!*\
  !*** ./examples/component/statusbadge/app.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   onStart: () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/component/statusbadge/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.component.statusbadge'
});


/***/ }),

/***/ "./src/component/StatusBadge.mjs":
/*!***************************************!*\
  !*** ./src/component/StatusBadge.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/Base.mjs */ "./src/component/Base.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");



/**
 * @class Neo.component.StatusBadge
 * @extends Neo.component.Base
 */
class StatusBadge extends _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    /**
     * Valid values for state
     * @member {String[]} states=['alert','error','info','neutral','success']
     * @protected
     * @static
     */
    static states = ['alert', 'error', 'info', 'neutral', 'success']

    static config = {
        /**
         * @member {String} className='Neo.component.StatusBadge'
         * @protected
         */
        className: 'Neo.component.StatusBadge',
        /**
         * @member {String} ntype='status-badge'
         * @protected
         */
        ntype: 'status-badge',
        /**
         * @member {String[]} baseCls=['neo-status-badge']
         * @protected
         */
        baseCls: ['neo-status-badge'],
        /**
        * @member {String[]} currentStateIcon=null
        */
        _currentStateIcon: null,
        /**
        * @member {String[]} currentSideIcon=null
        */
        _currentSideIcon: null,
        /**
         * false calls Neo.Main.setRoute()
         * @member {Boolean} deactivateStateIcons=false
         */
        deactivateStateIcons_: false,
        /**
         * false calls Neo.Main.setRoute()
         * @member {Boolean} deactivateSideIcons=false
         */
        deactivateSideIcons_: false,

        /**
        * @member {String} iconAlert='fa-triangle-exclamation'
        */
        iconAlert_: 'fa fa-triangle-exclamation',
        /**
        * @member {String} iconError='fa-xmark'
        */
        iconError_: 'fa fa-xmark',
        /**
        * @member {String} iconInfo='fa-info'
        */
        iconInfo_: 'fa fa-info',
        /**
        * @member {String} iconNeutral='fa-circle'
        */
        iconNeutral_: 'fa fa-circle',
        /**
        * @member {String} iconSuccess='fa-check'
        */
        iconSuccess_: 'fa fa-check',

        /**
        * @member {String} sideIconAlert='fa fa-registered'
        */
        sideIconAlert_: 'fa fa-registered',
        /**
        * @member {String} sideIconError='fa fa-registered'
        */
        sideIconError_: 'fa fa-registered',
        /**
        * @member {String} sideIconInfo='fa fa-registered'
        */
        sideIconInfo_: 'fa fa-registered',
        /**
        * @member {String} sideIconNeutral='fa fa-registered'
        */
        sideIconNeutral_: 'fa fa-registered',
        /**
        * @member {String} sideIconSuccess='fa fa-registered'
        */
        sideIconSuccess_: 'fa fa-registered',



        /**
         * @member {String} labelAlert_='Alert'
        */
        labelAlert_: 'Alert',
        /**
         * @member {String} labelError_='Error'
        */
        labelError_: 'Error',
        /**
         * @member {String} labelInfo_='Info'
        */
        labelInfo_: 'Info',
        /**
         * @member {String} labelNeutral_='Neutral'
        */
        labelNeutral_: 'Neutral',
        /**
         * @member {String} labelSuccess_='Success'
        */
        labelSuccess_: 'Success',


        /**
         * @member {String} state_='neutral'
         */
        state_: 'neutral',
        /**
         * @member {Object} _vdom
         */
        _vdom:
        {
            tag: 'div', type: 'div', cn: [
                { tag: 'span', cls: ['neo-state-glyph'] },
                { tag: 'span', cls: ['neo-state-text'] },
                { tag: 'span', cls: ['neo-state-glyph'] }
            ]
        }
    }

    /**
    * Triggered after the deactivateStateIcons config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetDeactivateStateIcons(value, oldValue) {
        this.updateStateIconNode(this._currentStateIcon);
    }

    /**
    * Triggered after the deactivateSideIcons config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetDeactivateSideIcons(value, oldValue) {
        this.updateSideIconNode(this._currentSideIcon);
    }

    /**
     * Triggered after the labelAlert config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetLabelAlert(value, oldValue) {
        if (this.state === 'alert') {
            this.updateLabelNode(value);
        }
    }
    /**
     * Triggered after the iconAlert config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetIconAlert(value, oldValue) {
        if (this.state === 'alert') {
            this.updateStateIconNode(value);
        }
    }
    /**
     * Triggered after the sideIconAlert config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetSideIconAlert(value, oldValue) {
        if (this.state === 'alert') {
            this.updateSideIconNode(value);
        }
    }

    /**
     * Triggered after the labelError config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetLabelError(value, oldValue) {
        if (this.state === 'error') {
            this.updateLabelNode(value);
        }
    }
    /**
    * Triggered after the iconError config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetIconError(value, oldValue) {
        if (this.state === 'error') {
            this.updateStateIconNode(value);
        }
    }
    /**
     * Triggered after the sideIconError config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetSideIconError(value, oldValue) {
        if (this.state === 'error') {
            this.updateSideIconNode(value);
        }
    }


    /**
     * Triggered after the labelInfo config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetLabelInfo(value, oldValue) {
        if (this.state === 'info') {
            this.updateLabelNode(value);
        }
    }
    /**
    * Triggered after the iconInfo config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetIconInfo(value, oldValue) {
        if (this.state === 'info') {
            this.updateStateIconNode(value);
        }
    }
    /**
     * Triggered after the sideIconInfo config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetSideIconInfo(value, oldValue) {
        if (this.state === 'info') {
            this.updateSideIconNode(value);
        }
    }

    /**
     * Triggered after the labelNeutral config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetLabelNeutral(value, oldValue) {
        if (this.state === 'neutral') {
            this.updateLabelNode(value);
        }
    }
    /**
    * Triggered after the iconNeutral config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetIconNeutral(value, oldValue) {
        if (this.state === 'neutral') {
            this.updateStateIconNode(value);
        }
    }
    /**
     * Triggered after the sideIconNeutral config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetSideIconNeutral(value, oldValue) {
        if (this.state === 'neutral') {
            this.updateSideIconNode(value);
        }
    }

    /**
     * Triggered after the labelSuccess config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetLabelSuccess(value, oldValue) {
        if (this.state === 'success') {
            this.updateLabelNode(value);
        }
    }
    /**
    * Triggered after the iconSuccess config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetIconSuccess(value, oldValue) {
        if (this.state === 'success') {
            this.updateStateIconNode(value);
        }
    }
    /**
     * Triggered after the sideIconSuccess config got changed
    * @param {String|null} value
    * @param {String|null} oldValue
    * @protected
    */
    afterSetSideIconSuccess(value, oldValue) {
        if (this.state === 'success') {
            this.updateSideIconNode(value);
        }
    }

    /**
     * Triggered after the state config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetState(value, oldValue) {

        let cls = this.cls,
            me = this,
            isEmpty = !value || value === '',
            vdomRoot = me.getVdomRoot(),
            labelNode = vdomRoot.cn[1];

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].remove(cls, 'neo-state-' + oldValue);
        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].add(cls, 'neo-state-' + value);

        this.cls = cls

        labelNode.removeDom = isEmpty;

        if (!isEmpty) {
            let showLabel = '';
            let showStateIcon = '';
            let showSideIcon = '';

            switch (value) {
                case 'alert':
                    showLabel = me.labelAlert;
                    showStateIcon = me.iconAlert;
                    showSideIcon = me.sideIconAlert;
                    break;
                case 'error':
                    showLabel = me.labelError;
                    showStateIcon = me.iconError;
                    showSideIcon = me.sideIconError;
                    break;
                case 'info':
                    showLabel = me.labelInfo;
                    showStateIcon = me.iconInfo;
                    showSideIcon = me.sideIconInfo;
                    break;
                case 'neutral':
                    showLabel = me.labelNeutral;
                    showStateIcon = me.iconNeutral;
                    showSideIcon = me.sideIconNeutral;
                    break;
                case 'success':
                    showLabel = me.labelSuccess;
                    showStateIcon = me.iconSuccess;
                    showSideIcon = me.sideIconSuccess;
                    break;
            }
            labelNode.innerHTML = showLabel;
            this.updateStateIconNode(showStateIcon);
            this.updateSideIconNode(showSideIcon);
        }

        me.update();
    }

    /**
     * Triggered before the state config gets changed
     * @param {String} value
     * @param {String} oldValue
     * @returns {String}
     * @protected
     */
    beforeSetState(value, oldValue) {
        return this.beforeSetEnumValue(value, oldValue, 'state')
    }

    /**
     * Convenience shortcut
    * @returns {Object}
    */
    updateLabelNode(value) {
        let labelNode = this.getVdomRoot().cn[1];

        labelNode.innerHTML = value;
        labelNode.removeDom = !Boolean(value);

        this.update();
    }

    /**
     * Convenience shortcut
    * @returns {Object}
    */
    updateStateIconNode(value) {
        let iconNode = this.getStateIconNode();
        let currentValue = this._currentStateIcon;

        if (value && !Array.isArray(value)) {
            value = value.split(' ').filter(Boolean);
        }
        if (currentValue && !Array.isArray(currentValue)) {
            currentValue = value.split(' ').filter(Boolean);
        }

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].remove(iconNode.cls, currentValue);
        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].add(iconNode.cls, value);

        iconNode.removeDom = !value || value === '' || this.deactivateStateIcons;

        this._currentStateIcon = value;
        this.update();
    }

    /**
     * Convenience shortcut
     * @returns {Object}
     */
    getStateIconNode() {
        return this.getVdomRoot().cn[0]
    }


    /**
     * Triggered after the StateIcon config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetStateIcon(value, oldValue) {
        this.updateStateIconNode(value, oldValue);
    }

    /**
     * Convenience shortcut
    * @returns {Object}
    */
    updateSideIconNode(value) {
        let iconNode = this.getSideIconNode();
        let currentValue = this._currentSideIcon;

        if (value && !Array.isArray(value)) {
            value = value.split(' ').filter(Boolean);
        }
        if (currentValue && !Array.isArray(currentValue)) {
            currentValue = value.split(' ').filter(Boolean);
        }

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].remove(iconNode.cls, currentValue);
        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].add(iconNode.cls, value);

        iconNode.removeDom = !value || value === '' || this.deactivateSideIcons;

        this._currentSideIcon = value;
        this.update();
    }

    /**
     * Convenience shortcut
     * @returns {Object}
     */
    getSideIconNode() {
        return this.getVdomRoot().cn[2]
    }


    /**
     * Triggered after the StateIcon config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetSideIcon(value, oldValue) {
        this.updateSideIconNode(value, oldValue);
    }
}

Neo.applyClassConfig(StatusBadge);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StatusBadge);


/***/ }),

/***/ "./src/form/field/Base.mjs":
/*!*********************************!*\
  !*** ./src/form/field/Base.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../component/Base.mjs */ "./src/component/Base.mjs");
/* harmony import */ var _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../manager/Component.mjs */ "./src/manager/Component.mjs");



/**
 * Abstract base class for form fields
 * @class Neo.form.field.Base
 * @extends Neo.component.Base
 */
class Base extends _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Base'
         * @protected
         */
        className: 'Neo.form.field.Base',
        /**
         * @member {String} ntype='basefield'
         * @protected
         */
        ntype: 'basefield',
        /**
         * Form groups can get set on any parent component level.
         * An alternative way for using dots in field names.
         * @member {String|null} formGroup_=null
         */
        formGroup_: null,
        /**
         * @member {String|null} name_=null
         */
        name_: null,
        /**
         * Neo itself does not need field names to get mapped to the DOM (input nodes),
         * except for CheckBoxes & Radios to work. It can be useful for testing tools
         * & accessibility though, so the default got set to true.
         * Feel free to change it to false to keep the DOM minimal.
         * @member {Boolean} renderName_=true
         */
        renderName_: true,
        /**
         * In case renderName is set to true, you can optionally render the combination
         * of all formGroup(s) & the field name into the DOM => input node
         * @member {Boolean} renderPath=true
         */
        renderPath: true,
        /**
         * @member {*} value_=null
         */
        value_: null
    }

    /**
     * An internal cache for formGroups of all parent levels
     * @member {String|null} formGroupString=null
     */
    formGroupString = null
    /**
     * An internal cache for formGroup(s) and the field name
     * @member {String|null} path=null
     */
    path = null

    /**
     * Triggered after the name config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     */
    afterSetName(value, oldValue) {
        let me = this;

        me.renderName && me.changeInputElKey('name', me.renderPath ? me.getPath() : value)
    }

    /**
     * Triggered after the value config got changed
     * @param {*} value
     * @param {*} oldValue
     */
    afterSetValue(value, oldValue) {
        if (oldValue !== undefined) {
            this.fireChangeEvent(value, oldValue)
        }
    }

    /**
     * Triggered when accessing the formGroup config
     * @param {String|null} value
     * @returns {String|null} parents
     * @protected
     */
    beforeGetFormGroup(value) {
        let me    = this,
            group = [],
            returnValue;

        if (me.formGroupString) {
            return me.formGroupString;
        }

        value && group.push(value);

        _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getParents(me).forEach(parent => {
            parent.formGroup && group.unshift(parent.formGroup)
        });

        returnValue = group.join('.');

        me.formGroupString = returnValue;

        return returnValue
    }

    /**
     * Changes the value of a inputEl vdom object attribute or removes it in case it has no value
     * @param {String} key
     * @param {Array|Number|Object|String|null} value
     * @param {Boolean} silent=false
     */
    changeInputElKey(key, value, silent=false) {
        let me = this;

        if (value || Neo.isBoolean(value) || value === 0) {
            me.getInputEl()[key] = value;
        } else {
            delete me.getInputEl()[key];
        }

        !silent && me.update()
    }

    /**
     * Override this method as needed
     * @param {*} value
     * @param {*} oldValue
     */
    fireChangeEvent(value, oldValue) {
        let me            = this,
            FormContainer = Neo.form?.Container;

        me.fire('change', {
            component: me,
            oldValue,
            value
        });

        if (!me.suspendEvents) {
            _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getParents(me).forEach(parent => {
                if (FormContainer && parent instanceof FormContainer) {
                    parent.fire('fieldChange', {
                        component: me,
                        oldValue,
                        value
                    })
                }
            })
        }
    }

    /**
     * Override this method as needed
     * @returns {Object|null}
     */
    getInputEl() {
        return this.vdom
    }

    /**
     * Returns the combination of the field formGroup(s) & name
     * @returns {String|null}
     */
    getPath() {
        let me = this,
            path;

        if (!me.path) {
            path = me.formGroup ? me.formGroup.split('.') : [];

            me.name && path.push(me.name);

            if (path.length < 1) {
                return null
            }

            me.path = path.join('.');
        }

        if (!me.path) {
            me.path = 'none'
        }

        return me.path === 'none' ? null: me.path
    }

    /**
     * @returns {*}
     */
    getValue() {
        return this.value;
    }

    /**
     * @returns {Boolean}
     */
    isValid() {
        return true;
    }

    /**
     * @param {Object} data
     * @param {Object[]} data.oldPath
     * @protected
     */
    onFocusLeave(data) {
        super.onFocusLeave?.(data);

        let me            = this,
            FormContainer = Neo.form?.Container;

        if (!me.suspendEvents) {
            _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].getParents(me).forEach(parent => {
                if (FormContainer && parent instanceof FormContainer) {
                    parent.fire('fieldFocusLeave', {
                        ...data,
                        component: me
                    })
                }
            })
        }
    }

    /**
     * Resets the field to a new value or null
     * @param {*} value=null
     */
    reset(value=null) {
        this.value = value;
    }

    /**
     * Checks for client-side field errors
     * @param {Boolean} silent=true
     * @returns {Boolean} Returns true in case there are no client-side errors
     */
    validate(silent=true) {
        return true;
    }
}

/**
 * The change event fires after the value config gets changed
 * @event change
 * @param {*} value
 * @param {*} oldValue
 * @returns {Object}
 */

Neo.applyClassConfig(Base);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Base);


/***/ }),

/***/ "./src/form/field/Radio.mjs":
/*!**********************************!*\
  !*** ./src/form/field/Radio.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CheckBox.mjs */ "./src/form/field/CheckBox.mjs");
/* harmony import */ var _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../manager/Component.mjs */ "./src/manager/Component.mjs");



/**
 * @class Neo.form.field.Radio
 * @extends Neo.form.field.CheckBox
 */
class Radio extends _CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Radio'
         * @protected
         */
        className: 'Neo.form.field.Radio',
        /**
         * @member {String} ntype='radiofield'
         * @protected
         */
        ntype: 'radiofield',
        /**
         * @member {String[]} baseCls=['neo-radiofield','neo-checkboxfield']
         */
        baseCls: ['neo-radiofield', 'neo-checkboxfield'],
        /**
         * @member {String[]} iconCls=['far','fa-circle']
         */
        iconCls: ['far', 'fa-circle'],
        /**
         * @member {String} inputType='radio'
         */
        inputType: 'radio'
    }

    /**
     * Triggered after the checked config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetChecked(value, oldValue) {
        super.afterSetChecked(value, oldValue);

        // update radios with the same name to be unchecked
        value && this.uncheckGroupItems()
    }

    /**
     * @returns {String|null}
     */
    getValue() {
        return this.checked ? this.value : undefined
    }

    /**
     * Radios do not fire a change event for "uncheck", so we need to iterate over other radios with the same name.
     */
    uncheckGroupItems() {
        let me = this,
            radios;

        // discuss: we could limit this to radios inside the same form, IF a top level form is used
        radios = _manager_Component_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].find({
            ntype: 'radiofield',
            name : me.name
        });

        radios.forEach(item => {
            if (item.id !== me.id && item._checked) {
                item.checked = false;
            }
        })
    }
}

Neo.applyClassConfig(Radio);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Radio);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,