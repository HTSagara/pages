"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_tableStore_app_mjs-src_form_field_Base_mjs-src_toolbar_Base_mjs"],{

/***/ "./examples/tableStore/MainContainer.mjs":
/*!***********************************************!*\
  !*** ./examples/tableStore/MainContainer.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_selection_table_CellColumnModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/selection/table/CellColumnModel.mjs */ "./src/selection/table/CellColumnModel.mjs");
/* harmony import */ var _src_selection_table_CellModel_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/selection/table/CellModel.mjs */ "./src/selection/table/CellModel.mjs");
/* harmony import */ var _src_selection_table_CellRowModel_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/selection/table/CellRowModel.mjs */ "./src/selection/table/CellRowModel.mjs");
/* harmony import */ var _src_selection_table_ColumnModel_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../src/selection/table/ColumnModel.mjs */ "./src/selection/table/ColumnModel.mjs");
/* harmony import */ var _MainStore_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MainStore.mjs */ "./examples/tableStore/MainStore.mjs");
/* harmony import */ var _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../src/form/field/Radio.mjs */ "./src/form/field/Radio.mjs");
/* harmony import */ var _src_selection_table_RowModel_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../src/selection/table/RowModel.mjs */ "./src/selection/table/RowModel.mjs");
/* harmony import */ var _src_table_Container_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../src/table/Container.mjs */ "./src/table/Container.mjs");
/* harmony import */ var _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../src/container/Viewport.mjs */ "./src/container/Viewport.mjs");










/**
 * @class Neo.examples.tableStore.MainContainer
 * @extends Neo.container.Viewport
 */
class MainContainer extends _src_container_Viewport_mjs__WEBPACK_IMPORTED_MODULE_8__["default"] {
    static config = {
        className: 'Neo.examples.tableStore.MainContainer',
        layout   : {ntype: 'vbox', align: 'stretch'},
        style    : {padding: '20px'},

        items: [{
            ntype: 'toolbar',
            flex : '0 1 auto',
            style: {marginBottom: '5px', padding: 0},

            items: [{
                ntype: 'label',
                style: {margin: '4px 10px 0 5px'},
                text : 'Table & Store (Click or Drag Table Headers)'
            }, {
                ntype: 'component',
                flex : 1
            }, {
                ntype  : 'button',
                iconCls: 'fa fa-edit',
                style  : {marginRight: '10px'},
                text   : 'Change Cell Value',
                handler: function () {
                    let tabContainer = Neo.getComponent('myTableStoreContainer'),
                        store        = tabContainer.store,
                        record       = store.items[0];

                    record.firstname = record.firstname + '<span style="color:red;"> Foo</span>';
                }
            }, {
                ntype  : 'button',
                iconCls: 'fa fa-edit',
                style  : {marginRight: '10px'},
                text   : 'Update all cells 100x',
                handler: function () {
                    let tabContainer = Neo.getComponent('myTableStoreContainer'),
                        store        = tabContainer.store,
                        countRecords = store.getCount(),
                        j            = 0,
                        repeats      = 100,
                        string1      = '<span style="color:red;">Foo</span> ',
                        string2      = '<span style="color:blue;">Bar</span> ',
                        i, newValue, record;

                    for (; j < repeats; j++) {
                        for (i=0; i < countRecords; i++) {
                            record = store.items[i];
                            Object.entries(record).forEach(([field, value]) => {
                                if (field !== 'githubId') {
                                    if (value.includes(string1)) {
                                        newValue = value.replace(string1, string2);
                                    } else if (value.includes(string2)) {
                                        newValue = value.replace(string2, string1);
                                    } else {
                                        newValue = string1 + value;
                                    }

                                    record[field] = newValue; // triggers the change
                                }
                            });
                        }
                    }
                }
            }, {
                ntype  : 'button',
                iconCls: 'fa fa-sync-alt',
                text   : 'Reset Sorting',
                handler: function () {
                    Neo.getComponent('myTableStoreContainer').store.sort();
                }
            }]
        }, {
            ntype: 'toolbar',
            flex : '0 1 auto',

            style: {
                marginBottom: '10px',
                padding     : 0
            },

            items: [{
                ntype: 'label',
                text : 'Selection Model:',
                style: {
                    margin: '0 10px 0 5px'
                }
            }, {
                ntype         : 'radiofield',
                checked       : true,
                hideLabel     : true,
                hideValueLabel: false,
                name          : 'selectionModel',
                value         : 'selection-table-cellmodel',
                valueLabelText: 'Cell',
                listeners: {
                    change: function(data) {
                        if (data.value) {
                            Neo.getComponent('myTableStoreContainer').selectionModel = {
                                ntype: this.value
                            };
                        }
                    }
                }
            }, {
                ntype         : 'radiofield',
                hideLabel     : true,
                hideValueLabel: false,
                name          : 'selectionModel',
                style         : {marginLeft: '20px'},
                value         : 'selection-table-columnmodel',
                valueLabelText: 'Column',
                listeners: {
                    change: function(data) {
                        if (data.value) {
                            Neo.getComponent('myTableStoreContainer').selectionModel = {
                                ntype: this.value
                            };
                        }
                    }
                }
            }, {
                ntype         : 'radiofield',
                hideLabel     : true,
                hideValueLabel: false,
                name          : 'selectionModel',
                style         : {marginLeft: '20px'},
                value         : 'selection-table-rowmodel',
                valueLabelText: 'Row',
                listeners: {
                    change: function(data) {
                        if (data.value) {
                            Neo.getComponent('myTableStoreContainer').selectionModel = {
                                ntype: this.value
                            };
                        }
                    }
                }
            }, {
                ntype         : 'radiofield',
                hideLabel     : true,
                hideValueLabel: false,
                name          : 'selectionModel',
                style         : {marginLeft: '20px'},
                value         : 'selection-table-cellcolumnmodel',
                valueLabelText: 'Cell & Column',
                listeners: {
                    change: function(data) {
                        if (data.value) {
                            Neo.getComponent('myTableStoreContainer').selectionModel = {
                                ntype: this.value
                            };
                        }
                    }
                }
            }, {
                ntype         : 'radiofield',
                hideLabel     : true,
                hideValueLabel: false,
                name          : 'selectionModel',
                style         : {marginLeft: '20px'},
                value         : 'selection-table-cellrowmodel',
                valueLabelText: 'Cell & Row',
                listeners: {
                    change: function(data) {
                        if (data.value) {
                            Neo.getComponent('myTableStoreContainer').selectionModel = {
                                ntype: this.value
                            };
                        }
                    }
                }
            }]
        }, {
            module        : _src_table_Container_mjs__WEBPACK_IMPORTED_MODULE_7__["default"],
            id            : 'myTableStoreContainer',
            selectionModel: _src_selection_table_CellModel_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
            store         : _MainStore_mjs__WEBPACK_IMPORTED_MODULE_4__["default"],
            width         : '100%',
            wrapperStyle  : {height: '300px'},

            columns: [{
                dataField: 'firstname',
                text     : 'Firstname'
            }, {
                dataField: 'lastname',
                text     : 'Lastname'
            }, {
                dataField: 'githubId',
                text     : 'Github Id'
            }, {
                dataField: 'country',
                text     : 'Country'
            }]
        }]
    }
}

Neo.applyClassConfig(MainContainer);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MainContainer);


/***/ }),

/***/ "./examples/tableStore/MainModel.mjs":
/*!*******************************************!*\
  !*** ./examples/tableStore/MainModel.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/data/Model.mjs */ "./src/data/Model.mjs");


/**
 * @class Neo.examples.tableStore.MainModel
 * @extends Neo.data.Model
 */
class MainModel extends _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        className: 'Neo.examples.tableStore.MainModel',

        fields: [{
            name: 'country',
            type: 'string'
        }, {
            name: 'firstname',
            type: 'string'
        }, {
            name: 'githubId',
            type: 'string'
        }, {
            name: 'lastname',
            type: 'string'
        }]
    }
}

Neo.applyClassConfig(MainModel);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MainModel);


/***/ }),

/***/ "./examples/tableStore/MainStore.mjs":
/*!*******************************************!*\
  !*** ./examples/tableStore/MainStore.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/data/Store.mjs */ "./src/data/Store.mjs");
/* harmony import */ var _MainModel_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MainModel.mjs */ "./examples/tableStore/MainModel.mjs");



/**
 * @class Neo.examples.tableStore.MainStore
 * @extends Neo.data.Store
 */
class MainStore extends _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        className  : 'Neo.examples.tableStore.MainStore',
        keyProperty: 'githubId',
        model      : _MainModel_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],

        data: [{
            country  : 'Germany',
            firstname: 'Tobias',
            githubId : 'tobiu',
            lastname : 'Uhlig'
        }, {
            country  : 'USA',
            firstname: 'Rich',
            githubId : 'rwaters',
            lastname : 'Waters'
        }, {
            country  : 'Germany',
            firstname: 'Nils',
            githubId : 'mrsunshine',
            lastname : 'Dehl'
        }, {
            country  : 'USA',
            firstname: 'Gerard',
            githubId : 'camtnbikerrwc',
            lastname : 'Horan'
        }, {
            country  : 'Slovakia',
            firstname: 'Jozef',
            githubId : 'jsakalos',
            lastname : 'Sakalos'
        }, {
            country  : 'Germany',
            firstname: 'Bastian',
            githubId : 'bhaustein',
            lastname : 'Haustein'
        }]
    }
}

Neo.applyClassConfig(MainStore);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MainStore);


/***/ }),

/***/ "./examples/tableStore/app.mjs":
/*!*************************************!*\
  !*** ./examples/tableStore/app.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onStart": () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/tableStore/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
    name    : 'Neo.examples.tableStore'
});


/***/ }),

/***/ "./src/component/Label.mjs":
/*!*********************************!*\
  !*** ./src/component/Label.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/component/Base.mjs");


/**
 * Convenience class to render a label with a text
 * @class Neo.component.Label
 * @extends Neo.component.Base
 */
class Label extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.component.Label'
         * @protected
         */
        className: 'Neo.component.Label',
        /**
         * @member {String} ntype='label'
         * @protected
         */
        ntype: 'label',
        /**
         * @member {String[]} baseCls=['neo-label']
         */
        baseCls: ['neo-label'],
        /**
         * @member {String} text_=''
         */
        text_: '',
        /**
         * @member {Object} _vdom={tag: 'label'}
         */
        _vdom:
        {tag: 'label', draggable: false}
    }

    /**
     * Triggered after the text config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetText(value, oldValue) {
        this.vdom.html = value;
        this.update();
    }
}

Neo.applyClassConfig(Label);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Label);


/***/ }),

/***/ "./src/container/Viewport.mjs":
/*!************************************!*\
  !*** ./src/container/Viewport.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Base.mjs */ "./src/container/Base.mjs");


/**
 * @class Neo.container.Viewport
 * @extends Neo.container.Base
 */
class Viewport extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.container.Viewport'
         * @protected
         */
        className: 'Neo.container.Viewport',
        /**
         * @member {String} ntype='viewport'
         * @protected
         */
        ntype: 'viewport',
        /**
         * true applies 'neo-body-viewport' to the document.body
         * @member {Boolean} applyBodyCls=true
         */
        applyBodyCls: true,
        /**
         * Assuming that a Viewport is the top level view of your app, and you want to mount it right away.
         * Could be without any items. Use false otherwise.
         * @member {Boolean} autoMount=true
         */
        autoMount: true,
        /**
         * @member {String[]} baseCls=['neo-viewport']
         */
        baseCls: ['neo-viewport']
    }

    /**
     *
     */
    onConstructed() {
        super.onConstructed();

        this.applyBodyCls && Neo.main.DomAccess.applyBodyCls({
            appName: this.appName,
            cls    : ['neo-body-viewport']
        })
    }
}

Neo.applyClassConfig(Viewport);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Viewport);


/***/ }),

/***/ "./src/form/field/Base.mjs":
/*!*********************************!*\
  !*** ./src/form/field/Base.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../component/Base.mjs */ "./src/component/Base.mjs");


/**
 * Abstract base class for form fields
 * @class Neo.form.field.Base
 * @extends Neo.component.Base
 */
class Base extends _component_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.form.field.Base'
         * @protected
         */
        className: 'Neo.form.field.Base',
        /**
         * @member {String} ntype='basefield'
         * @protected
         */
        ntype: 'basefield',
        /**
         * @member {*} value_=null
         */
        value_: null
    }

    /**
     * Triggered after the value config got changed
     * @param {*} value
     * @param {*} oldValue
     */
    afterSetValue(value, oldValue) {
        if (oldValue !== undefined) {
            this.fireChangeEvent(value, oldValue);
        }
    }

    /**
     * Override this method as needed
     * @param {*} value
     * @param {*} oldValue
     */
    fireChangeEvent(value, oldValue) {
        this.fire('change', {
            component: this,
            oldValue,
            value
        });
    }

    /**
     * @returns {*} this.value
     */
    getSubmitValue() {
        return this.value;
    }

    /**
     * @returns {Boolean}
     */
    isValid() {
        return true;
    }

    /**
     * Resets the field to a new value or null
     * @param {*} [value=null]
     */
    reset(value) {
        this.value = value;
    }

    /**
     * Checks for client-side field errors
     * @param {Boolean} silent=true
     * @returns {Boolean} Returns true in case there are no client-side errors
     */
    validate(silent=true) {
        return true;
    }
}

/**
 * The change event fires after the value config gets changed
 * @event change
 * @param {*} value
 * @param {*} oldValue
 * @returns {Object}
 */

Neo.applyClassConfig(Base);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Base);


/***/ }),

/***/ "./src/toolbar/Base.mjs":
/*!******************************!*\
  !*** ./src/toolbar/Base.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _button_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../button/Base.mjs */ "./src/button/Base.mjs");
/* harmony import */ var _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/Base.mjs */ "./src/component/Base.mjs");
/* harmony import */ var _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../container/Base.mjs */ "./src/container/Base.mjs");
/* harmony import */ var _component_Label_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../component/Label.mjs */ "./src/component/Label.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");






/**
 * @class Neo.toolbar.Base
 * @extends Neo.container.Base
 */
class Base extends _container_Base_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {
    /**
     * Valid values for dock
     * @member {String[]} dockPositions=['top','right','bottom','left', null]
     * @static
     */
    static dockPositions = ['top', 'right', 'bottom', 'left', null]

    static config = {
        /**
         * @member {String} className='Neo.toolbar.Base'
         * @protected
         */
        className: 'Neo.toolbar.Base',
        /**
         * @member {String} ntype='toolbar'
         * @protected
         */
        ntype: 'toolbar',
        /**
         * @member {String[]} baseCls=['neo-toolbar']
         */
        baseCls: ['neo-toolbar'],
        /**
         * @member {String|null} dock_=null
         */
        dock_: null,
        /**
         * @member {Object} itemDefaults={ntype:'button'}
         */
        itemDefaults: {
            ntype: 'button'
        },
        /**
         * @member {Object} layout={ntype: 'hbox', align: 'center', pack : 'start'}
         */
        layout: {
            ntype: 'hbox',
            align: 'center',
            pack : 'start'
        },
        /**
         * @member {Boolean} sortable_=false
         */
        sortable_: false,
        /**
         * @member {Neo.draggable.toolbar.SortZone|null} sortZone=null
         */
        sortZone: null,
        /**
         * @member {Object} sortZoneConfig=null
         */
        sortZoneConfig: null
    }

    /**
     * Triggered after the appName config got changed
     * @param {String|null} value
     * @param {String|null} oldValue
     * @protected
     */
    afterSetAppName(value, oldValue) {
        super.afterSetAppName(value, oldValue);

        if (this.sortZone) {
            this.sortZone.appName = value;
        }
    }

    /**
     * Triggered after the dock config got changed
     * @param {String} value
     * @param {String} oldValue
     * @protected
     */
    afterSetDock(value, oldValue) {
        let me            = this,
            cls           = me.cls,
            dockPositions = me.getStaticConfig('dockPositions');

        dockPositions.forEach(key => {
            key !== null && _util_Array_mjs__WEBPACK_IMPORTED_MODULE_4__["default"][key === value ? 'add' : 'remove'](cls, 'neo-dock-' + key);
        });

        me.cls    = cls;
        me.layout = me.getLayoutConfig();
    }

    /**
     * Triggered after the sortable config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetSortable(value, oldValue) {
        let me = this;

        if (value && !me.sortZone) {
            Promise.all(/*! import() */[__webpack_require__.e("vendors-src_draggable_DragZone_mjs"), __webpack_require__.e("vendors-src_draggable_toolbar_SortZone_mjs")]).then(__webpack_require__.bind(__webpack_require__, /*! ../draggable/toolbar/SortZone.mjs */ "./src/draggable/toolbar/SortZone.mjs")).then(module => {
                me.sortZone = Neo.create({
                    module             : module.default,
                    appName            : me.appName,
                    boundaryContainerId: me.id,
                    owner              : me,
                    ...me.sortZoneConfig
                });
            });
        }
    }

    /**
     * Checks if the new dock position matches a value of the static dockPositions config
     * @param {String} value
     * @param {String} oldValue
     * @returns {String} value
     * @protected
     */
    beforeSetDock(value, oldValue) {
        return this.beforeSetEnumValue(value, oldValue, 'dock', 'dockPositions');
    }

    /**
     *
     */
    createItems() {
        let items = this._items;

        if (Array.isArray(items)) {
            items.forEach((item, index) => {
                if (item === '->') {
                    items[index] = Neo.create({
                        module: _component_Base_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
                        flex  : 1
                    });
                }
            });
        }

        return super.createItems();
    }

    /**
     * Creates a layout config depending on this.dock
     * @returns {Object} layoutConfig
     */
    getLayoutConfig() {
        let me = this,
            layoutConfig;

        if (me.dock) {
            switch(me.dock) {
                case 'bottom':
                case 'top':
                    layoutConfig = {
                        ntype: 'hbox',
                        align: 'center',
                        pack : 'start'
                    };
                    break;
                case 'left':
                    layoutConfig = {
                        ntype    : 'vbox',
                        align    : 'center',
                        direction: 'column-reverse',
                        pack     : 'start'
                    };
                    break;
                case 'right':
                    layoutConfig = {
                        ntype    : 'vbox',
                        align    : 'center',
                        direction: 'column',
                        pack     : 'start'
                    };
                    break;
            }
        }

        return layoutConfig || me.layout;
    }
}

Neo.applyClassConfig(Base);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Base);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,