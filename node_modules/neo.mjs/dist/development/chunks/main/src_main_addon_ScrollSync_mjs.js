"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["src_main_addon_ScrollSync_mjs"],{

/***/ "./src/main/addon/ScrollSync.mjs":
/*!***************************************!*\
  !*** ./src/main/addon/ScrollSync.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/Base.mjs */ "./src/core/Base.mjs");
/* harmony import */ var _DomEvents_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../DomEvents.mjs */ "./src/main/DomEvents.mjs");



/**
 * This addon keeps the position of overlays in sync with an anchor element,
 * when scrolling inside any parent node.
 * A prominent use case is Neo.form.field.Picker.
 * @class Neo.main.addon.ScrollSync
 * @extends Neo.core.Base
 * @singleton
 */
class ScrollSync extends _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static config = {
        /**
         * @member {String} className='Neo.main.addon.ScrollSync'
         * @protected
         */
        className: 'Neo.main.addon.ScrollSync',
        /**
         * Remote method access for other workers
         * @member {Object} remote={app: [//...]}
         * @protected
         */
        remote: {
            app: [
                'register',
                'unregister'
            ]
        },
        /**
         * @member {Boolean} singleton=true
         * @protected
         */
        singleton: true
    }

    /**
     * @member {Object} sourceMap={}
     * @protected
     */
    sourceMap = {}

    /**
     * @param {Object} config
     */
    construct(config) {
        super.construct(config);

        document.addEventListener('scroll', this.onDocumentScroll.bind(this), true)
    }

    /**
     * @param {Event} event
     */
    onDocumentScroll(event) {
        let me         = this,
            scrollNode = event.target,
            sourceRect, targetNode;

        me.sourceMap[scrollNode.id]?.forEach(item => {
            sourceRect = document.getElementById(item.sourceId).getBoundingClientRect();
            targetNode = document.getElementById(item.targetId)

            targetNode.style.left = `${sourceRect.x + item.deltaX}px`;
            targetNode.style.top  = `${sourceRect.y + item.deltaY}px`
        })
    }

    /**
     * @param {Object} data
     * @param {String} data.sourceId
     * @param {String} data.targetId
     * @returns Promise<Boolean>
     */
    async register(data) {
        // short delay to ensure the target node got mounted
        await Neo.timeout(50)

        let sourceId   = data.sourceId,
            sourceMap  = this.sourceMap,
            sourceNode = document.getElementById(sourceId),
            sourceRect = sourceNode.getBoundingClientRect(),
            parentNode = sourceNode.parentNode,
            targetId   = data.targetId,
            targetRect = document.getElementById(targetId).getBoundingClientRect(),
            deltaX     = targetRect.x - sourceRect.x,
            deltaY     = targetRect.y - sourceRect.y,
            overflowX, overflowY, parentId;

        while (parentNode && parentNode.id) {
            parentId = parentNode.id;

            ({overflowX, overflowY} = getComputedStyle(parentNode))

            if (overflowX === 'auto' || overflowX === 'scroll' || overflowY === 'auto' || overflowY === 'scroll') {
                if (!sourceMap[parentId]) {
                    sourceMap[parentId] = []
                }

                sourceMap[parentId].push({deltaX, deltaY, sourceId, targetId})
            }

            parentNode = parentNode.parentNode
        }

        return true
    }

    /**
     * @param {Object} data
     * @param {String} data.sourceId
     * @param {String} data.targetId
     * @returns {Boolean}
     */
    unregister(data) {
        let sourceId   = data.sourceId,
            sourceMap  = this.sourceMap,
            sourceNode = document.getElementById(sourceId),
            parentNode = sourceNode.parentNode,
            parentId;

        while (parentNode && parentNode.id) {
            parentId = parentNode.id;

            if (sourceMap[parentId]) {
                [...sourceMap[parentId]].forEach((item, index) => {
                    if (item.sourceId === sourceId && item.targetId === data.targetId) {
                        sourceMap[parentId].splice(index, 1)
                    }
                })

                if (sourceMap[parentId].length < 1) {
                    delete sourceMap[parentId]
                }
            }

            parentNode = parentNode.parentNode
        }

        return true
    }
}

let instance = Neo.applyClassConfig(ScrollSync);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (instance);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2h1bmtzL21haW4vc3JjX21haW5fYWRkb25fU2Nyb2xsU3luY19tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ0o7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0RBQUk7QUFDN0I7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUSxRQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsdUNBQXVDLDJCQUEyQjtBQUNsRSx1Q0FBdUMsMkJBQTJCO0FBQ2xFLFNBQVM7QUFDVDs7QUFFQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxjQUFjLHNCQUFzQjs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMENBQTBDLG1DQUFtQztBQUM3RTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW8ubWpzLy4vc3JjL21haW4vYWRkb24vU2Nyb2xsU3luYy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJhc2UgICAgICBmcm9tICcuLi8uLi9jb3JlL0Jhc2UubWpzJztcbmltcG9ydCBEb21FdmVudHMgZnJvbSAnLi4vRG9tRXZlbnRzLm1qcydcblxuLyoqXG4gKiBUaGlzIGFkZG9uIGtlZXBzIHRoZSBwb3NpdGlvbiBvZiBvdmVybGF5cyBpbiBzeW5jIHdpdGggYW4gYW5jaG9yIGVsZW1lbnQsXG4gKiB3aGVuIHNjcm9sbGluZyBpbnNpZGUgYW55IHBhcmVudCBub2RlLlxuICogQSBwcm9taW5lbnQgdXNlIGNhc2UgaXMgTmVvLmZvcm0uZmllbGQuUGlja2VyLlxuICogQGNsYXNzIE5lby5tYWluLmFkZG9uLlNjcm9sbFN5bmNcbiAqIEBleHRlbmRzIE5lby5jb3JlLkJhc2VcbiAqIEBzaW5nbGV0b25cbiAqL1xuY2xhc3MgU2Nyb2xsU3luYyBleHRlbmRzIEJhc2Uge1xuICAgIHN0YXRpYyBjb25maWcgPSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAbWVtYmVyIHtTdHJpbmd9IGNsYXNzTmFtZT0nTmVvLm1haW4uYWRkb24uU2Nyb2xsU3luYydcbiAgICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICAgKi9cbiAgICAgICAgY2xhc3NOYW1lOiAnTmVvLm1haW4uYWRkb24uU2Nyb2xsU3luYycsXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZW1vdGUgbWV0aG9kIGFjY2VzcyBmb3Igb3RoZXIgd29ya2Vyc1xuICAgICAgICAgKiBAbWVtYmVyIHtPYmplY3R9IHJlbW90ZT17YXBwOiBbLy8uLi5dfVxuICAgICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgICAqL1xuICAgICAgICByZW1vdGU6IHtcbiAgICAgICAgICAgIGFwcDogW1xuICAgICAgICAgICAgICAgICdyZWdpc3RlcicsXG4gICAgICAgICAgICAgICAgJ3VucmVnaXN0ZXInXG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAbWVtYmVyIHtCb29sZWFufSBzaW5nbGV0b249dHJ1ZVxuICAgICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgICAqL1xuICAgICAgICBzaW5nbGV0b246IHRydWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyIHtPYmplY3R9IHNvdXJjZU1hcD17fVxuICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgKi9cbiAgICBzb3VyY2VNYXAgPSB7fVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZ1xuICAgICAqL1xuICAgIGNvbnN0cnVjdChjb25maWcpIHtcbiAgICAgICAgc3VwZXIuY29uc3RydWN0KGNvbmZpZyk7XG5cbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5vbkRvY3VtZW50U2Nyb2xsLmJpbmQodGhpcyksIHRydWUpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZXZlbnRcbiAgICAgKi9cbiAgICBvbkRvY3VtZW50U2Nyb2xsKGV2ZW50KSB7XG4gICAgICAgIGxldCBtZSAgICAgICAgID0gdGhpcyxcbiAgICAgICAgICAgIHNjcm9sbE5vZGUgPSBldmVudC50YXJnZXQsXG4gICAgICAgICAgICBzb3VyY2VSZWN0LCB0YXJnZXROb2RlO1xuXG4gICAgICAgIG1lLnNvdXJjZU1hcFtzY3JvbGxOb2RlLmlkXT8uZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgIHNvdXJjZVJlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpdGVtLnNvdXJjZUlkKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHRhcmdldE5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpdGVtLnRhcmdldElkKVxuXG4gICAgICAgICAgICB0YXJnZXROb2RlLnN0eWxlLmxlZnQgPSBgJHtzb3VyY2VSZWN0LnggKyBpdGVtLmRlbHRhWH1weGA7XG4gICAgICAgICAgICB0YXJnZXROb2RlLnN0eWxlLnRvcCAgPSBgJHtzb3VyY2VSZWN0LnkgKyBpdGVtLmRlbHRhWX1weGBcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBkYXRhLnNvdXJjZUlkXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IGRhdGEudGFyZ2V0SWRcbiAgICAgKiBAcmV0dXJucyBQcm9taXNlPEJvb2xlYW4+XG4gICAgICovXG4gICAgYXN5bmMgcmVnaXN0ZXIoZGF0YSkge1xuICAgICAgICAvLyBzaG9ydCBkZWxheSB0byBlbnN1cmUgdGhlIHRhcmdldCBub2RlIGdvdCBtb3VudGVkXG4gICAgICAgIGF3YWl0IE5lby50aW1lb3V0KDUwKVxuXG4gICAgICAgIGxldCBzb3VyY2VJZCAgID0gZGF0YS5zb3VyY2VJZCxcbiAgICAgICAgICAgIHNvdXJjZU1hcCAgPSB0aGlzLnNvdXJjZU1hcCxcbiAgICAgICAgICAgIHNvdXJjZU5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzb3VyY2VJZCksXG4gICAgICAgICAgICBzb3VyY2VSZWN0ID0gc291cmNlTm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICAgICAgICAgIHBhcmVudE5vZGUgPSBzb3VyY2VOb2RlLnBhcmVudE5vZGUsXG4gICAgICAgICAgICB0YXJnZXRJZCAgID0gZGF0YS50YXJnZXRJZCxcbiAgICAgICAgICAgIHRhcmdldFJlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0YXJnZXRJZCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICAgICAgICBkZWx0YVggICAgID0gdGFyZ2V0UmVjdC54IC0gc291cmNlUmVjdC54LFxuICAgICAgICAgICAgZGVsdGFZICAgICA9IHRhcmdldFJlY3QueSAtIHNvdXJjZVJlY3QueSxcbiAgICAgICAgICAgIG92ZXJmbG93WCwgb3ZlcmZsb3dZLCBwYXJlbnRJZDtcblxuICAgICAgICB3aGlsZSAocGFyZW50Tm9kZSAmJiBwYXJlbnROb2RlLmlkKSB7XG4gICAgICAgICAgICBwYXJlbnRJZCA9IHBhcmVudE5vZGUuaWQ7XG5cbiAgICAgICAgICAgICh7b3ZlcmZsb3dYLCBvdmVyZmxvd1l9ID0gZ2V0Q29tcHV0ZWRTdHlsZShwYXJlbnROb2RlKSlcblxuICAgICAgICAgICAgaWYgKG92ZXJmbG93WCA9PT0gJ2F1dG8nIHx8IG92ZXJmbG93WCA9PT0gJ3Njcm9sbCcgfHwgb3ZlcmZsb3dZID09PSAnYXV0bycgfHwgb3ZlcmZsb3dZID09PSAnc2Nyb2xsJykge1xuICAgICAgICAgICAgICAgIGlmICghc291cmNlTWFwW3BhcmVudElkXSkge1xuICAgICAgICAgICAgICAgICAgICBzb3VyY2VNYXBbcGFyZW50SWRdID0gW11cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBzb3VyY2VNYXBbcGFyZW50SWRdLnB1c2goe2RlbHRhWCwgZGVsdGFZLCBzb3VyY2VJZCwgdGFyZ2V0SWR9KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwYXJlbnROb2RlID0gcGFyZW50Tm9kZS5wYXJlbnROb2RlXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IGRhdGEuc291cmNlSWRcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZGF0YS50YXJnZXRJZFxuICAgICAqIEByZXR1cm5zIHtCb29sZWFufVxuICAgICAqL1xuICAgIHVucmVnaXN0ZXIoZGF0YSkge1xuICAgICAgICBsZXQgc291cmNlSWQgICA9IGRhdGEuc291cmNlSWQsXG4gICAgICAgICAgICBzb3VyY2VNYXAgID0gdGhpcy5zb3VyY2VNYXAsXG4gICAgICAgICAgICBzb3VyY2VOb2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc291cmNlSWQpLFxuICAgICAgICAgICAgcGFyZW50Tm9kZSA9IHNvdXJjZU5vZGUucGFyZW50Tm9kZSxcbiAgICAgICAgICAgIHBhcmVudElkO1xuXG4gICAgICAgIHdoaWxlIChwYXJlbnROb2RlICYmIHBhcmVudE5vZGUuaWQpIHtcbiAgICAgICAgICAgIHBhcmVudElkID0gcGFyZW50Tm9kZS5pZDtcblxuICAgICAgICAgICAgaWYgKHNvdXJjZU1hcFtwYXJlbnRJZF0pIHtcbiAgICAgICAgICAgICAgICBbLi4uc291cmNlTWFwW3BhcmVudElkXV0uZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uc291cmNlSWQgPT09IHNvdXJjZUlkICYmIGl0ZW0udGFyZ2V0SWQgPT09IGRhdGEudGFyZ2V0SWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZU1hcFtwYXJlbnRJZF0uc3BsaWNlKGluZGV4LCAxKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIGlmIChzb3VyY2VNYXBbcGFyZW50SWRdLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHNvdXJjZU1hcFtwYXJlbnRJZF1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHBhcmVudE5vZGUgPSBwYXJlbnROb2RlLnBhcmVudE5vZGVcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxufVxuXG5sZXQgaW5zdGFuY2UgPSBOZW8uYXBwbHlDbGFzc0NvbmZpZyhTY3JvbGxTeW5jKTtcblxuZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=