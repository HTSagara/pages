{"classData":[{"comment":"/**\n * @class Neo.core.Util\n * @extends Neo.core.Base\n */","meta":{"filename":"Util.mjs","lineno":3,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"class","name":"Util","augments":["Neo.core.Base"],"memberof":"Neo.core","longname":"Neo.core.Util","scope":"static","$longname":"Neo.core.Util","$kind":"class","id":1665,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * A regex to remove camel case syntax\n     * @member {RegExp} decamelRegEx=/([a-z])([A-Z])/g\n     * @protected\n     * @static\n     */","meta":{"filename":"Util.mjs","lineno":14,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"description":"<p>A regex to remove camel case syntax</p>","kind":"member","name":"decamelRegEx","type":{"names":["RegExp"]},"defaultvalue":"/([a-z])([A-Z])/g","access":"protected","scope":"static","longname":"decamelRegEx","$longname":"decamelRegEx","$kind":"property","id":1666,"neoClassName":"Neo.core.Util"},{"comment":"/**\n         * @member {String} className='Neo.core.Util'\n         * @protected\n         */","meta":{"filename":"Util.mjs","lineno":21,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.core.Util'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1667,"neoClassName":"Neo.core.Util"},{"comment":"/**\n         * @member {String} ntype='core-util'\n         * @protected\n         */","meta":{"filename":"Util.mjs","lineno":26,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'core-util'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1668,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * @param {Object} scope\n     * @param {String[]} values\n     */","meta":{"range":[673,813],"filename":"Util.mjs","lineno":33,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100053884","name":"Util.bindMethods","type":"MethodDefinition","paramnames":["scope","values"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"scope"},{"type":{"names":["Array.<String>"]},"name":"values"}],"name":"bindMethods","longname":"Util.bindMethods","kind":"function","memberof":"Util","scope":"static","$longname":"Util.bindMethods","$kind":"method","id":1669,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Makes the first character of a string uppercase\n     * @param {String} value\n     * @returns {Boolean|String} Returns false for non string inputs\n     */","meta":{"range":[988,1075],"filename":"Util.mjs","lineno":44,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100053910","name":"Util.capitalize","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Makes the first character of a string uppercase</p>","params":[{"type":{"names":["String"]},"name":"value"}],"returns":[{"type":{"names":["Boolean","String"]},"description":"Returns false for non string inputs"}],"name":"capitalize","longname":"Util.capitalize","kind":"function","memberof":"Util","scope":"static","$longname":"Util.capitalize","$kind":"method","id":1670,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Transforms a styles string into a styles object using camelcase syntax\n     * @param {String} string The styles string to parse\n     * @returns {Object} The camelcase styles object\n     */","meta":{"range":[1285,2148],"filename":"Util.mjs","lineno":53,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100053928","name":"Util.createStyleObject","type":"MethodDefinition","paramnames":["string"]},"vars":{"":null}},"description":"<p>Transforms a styles string into a styles object using camelcase syntax</p>","params":[{"type":{"names":["String"]},"description":"<p>The styles string to parse</p>","name":"string"}],"returns":[{"type":{"names":["Object"]},"description":"The camelcase styles object"}],"name":"createStyleObject","longname":"Util.createStyleObject","kind":"function","memberof":"Util","scope":"static","$longname":"Util.createStyleObject","$kind":"method","id":1671,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Converts a styles object which can use camelcase syntax into a styles string\n     * @param {Object} styles The styles object\n     * @returns {String} The styles string (DOM ready)\n     */","meta":{"range":[2357,2644],"filename":"Util.mjs","lineno":85,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054020","name":"Util.createStyles","type":"MethodDefinition","paramnames":["styles"]},"vars":{"":null}},"description":"<p>Converts a styles object which can use camelcase syntax into a styles string</p>","params":[{"type":{"names":["Object"]},"description":"<p>The styles object</p>","name":"styles"}],"returns":[{"type":{"names":["String"]},"description":"The styles string (DOM ready)"}],"name":"createStyles","longname":"Util.createStyles","kind":"function","memberof":"Util","scope":"static","$longname":"Util.createStyles","$kind":"method","id":1672,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Transforms all uppercase characters of a string into -lowercase.\n     * Does not touch special characters.\n     * @param {String} value The input containing uppercase characters\n     * @returns {String} The lowercase output\n     */","meta":{"range":[2897,2997],"filename":"Util.mjs","lineno":103,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054066","name":"Util.decamel","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Transforms all uppercase characters of a string into -lowercase.\nDoes not touch special characters.</p>","params":[{"type":{"names":["String"]},"description":"<p>The input containing uppercase characters</p>","name":"value"}],"returns":[{"type":{"names":["String"]},"description":"The lowercase output"}],"name":"decamel","longname":"Util.decamel","kind":"function","memberof":"Util","scope":"static","$longname":"Util.decamel","$kind":"method","id":1673,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is an array\n     * @param {Object} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[3144,3209],"filename":"Util.mjs","lineno":112,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054083","name":"Util.isArray","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Returns true if the passed value is an array</p>","params":[{"type":{"names":["Object"]},"description":"<p>The value to test</p>","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isArray","longname":"Util.isArray","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isArray","$kind":"method","id":1674,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is a boolean\n     * @param {Object} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[3357,3430],"filename":"Util.mjs","lineno":121,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054094","name":"Util.isBoolean","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Returns true if the passed value is a boolean</p>","params":[{"type":{"names":["Object"]},"description":"<p>The value to test</p>","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isBoolean","longname":"Util.isBoolean","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isBoolean","$kind":"method","id":1675,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is not undefined\n     * @param {Object} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[3582,3657],"filename":"Util.mjs","lineno":130,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054104","name":"Util.isDefined","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Returns true if the passed value is not undefined</p>","params":[{"type":{"names":["Object"]},"description":"<p>The value to test</p>","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isDefined","longname":"Util.isDefined","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isDefined","$kind":"method","id":1676,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is an empty Array, Object or String\n     * @param {Array|Object|String} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[3841,4314],"filename":"Util.mjs","lineno":139,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054114","name":"Util.isEmpty","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Returns true if the passed value is an empty Array, Object or String</p>","params":[{"type":{"names":["Array","Object","String"]},"description":"<p>The value to test</p>","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isEmpty","longname":"Util.isEmpty","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isEmpty","$kind":"method","id":1677,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is a function\n     * @param {Function} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[4465,4540],"filename":"Util.mjs","lineno":168,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054180","name":"Util.isFunction","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Returns true if the passed value is a function</p>","params":[{"type":{"names":["function"]},"description":"<p>The value to test</p>","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isFunction","longname":"Util.isFunction","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isFunction","$kind":"method","id":1678,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is a number. Returns false for non-finite numbers\n     * @param {Number} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[4725,4814],"filename":"Util.mjs","lineno":177,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054190","name":"Util.isNumber","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Returns true if the passed value is a number. Returns false for non-finite numbers</p>","params":[{"type":{"names":["Number"]},"description":"<p>The value to test</p>","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isNumber","longname":"Util.isNumber","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isNumber","$kind":"method","id":1679,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is an object\n     * @param {Object} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[4962,5076],"filename":"Util.mjs","lineno":186,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054204","name":"Util.isObject","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Returns true if the passed value is an object</p>","params":[{"type":{"names":["Object"]},"description":"<p>The value to test</p>","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isObject","longname":"Util.isObject","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isObject","$kind":"method","id":1680,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is a string\n     * @param {String} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[5223,5294],"filename":"Util.mjs","lineno":195,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054225","name":"Util.isString","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Returns true if the passed value is a string</p>","params":[{"type":{"names":["String"]},"description":"<p>The value to test</p>","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isString","longname":"Util.isString","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isString","$kind":"method","id":1681,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Converts any iterable (strings, numeric indices and a length property) into a true array\n     * @param {Object|String} iterable\n     * @param {Number} [start=0] start index\n     * @param {Number} [end=iterable.length] end index\n     * @returns {Array}\n     */","meta":{"range":[5575,5892],"filename":"Util.mjs","lineno":206,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/core","code":{"id":"astnode100054235","name":"Util.toArray","type":"MethodDefinition","paramnames":["iterable","start","end"]},"vars":{"":null}},"description":"<p>Converts any iterable (strings, numeric indices and a length property) into a true array</p>","params":[{"type":{"names":["Object","String"]},"name":"iterable"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"<p>start index</p>","name":"start"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":"iterable.length","description":"<p>end index</p>","name":"end"}],"returns":[{"type":{"names":["Array"]}}],"name":"toArray","longname":"Util.toArray","kind":"function","memberof":"Util","scope":"static","$longname":"Util.toArray","$kind":"method","id":1682,"neoClassName":"Neo.core.Util"}]}