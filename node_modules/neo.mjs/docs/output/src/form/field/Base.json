{"classData":[{"comment":"/**\n * Abstract base class for form fields\n * @class Neo.form.field.Base\n * @extends Neo.component.Base\n */","meta":{"filename":"Base.mjs","lineno":4,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Abstract base class for form fields","kind":"class","name":"Base","augments":["Neo.component.Base"],"memberof":"Neo.form.field","longname":"Neo.form.field.Base","scope":"static","$longname":"Neo.form.field.Base","$kind":"class","id":1909,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {String} className='Neo.form.field.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":15,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.form.field.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1910,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {String} ntype='basefield'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":20,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'basefield'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1911,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * Form groups can get set on any parent component level.\n         * An alternative way for using dots in field names.\n         * @member {String|null} formGroup_=null\n         */","meta":{"filename":"Base.mjs","lineno":26,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"Form groups can get set on any parent component level.<br />An alternative way for using dots in field names.","kind":"member","name":"formGroup_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"formGroup_","scope":"global","$longname":"formGroup_","$kind":"property","id":1912,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {*} value_=null\n         */","meta":{"filename":"Base.mjs","lineno":30,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"value_","type":{"names":["*"]},"defaultvalue":null,"longname":"value_","scope":"global","$longname":"value_","$kind":"property","id":1913,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * An internal cache for formGroups of all parent levels\n     * @member {String|null} formGroupString=null\n     */","meta":{"filename":"Base.mjs","lineno":37,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"An internal cache for formGroups of all parent levels","kind":"member","name":"formGroupString","type":{"names":["String","null"]},"defaultvalue":null,"longname":"formGroupString","scope":"global","$longname":"formGroupString","$kind":"property","id":1914,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Triggered after the value config got changed\n     * @param {*} value\n     * @param {*} oldValue\n     */","meta":{"range":[1138,1275],"filename":"Base.mjs","lineno":44,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100058776","name":"Base#afterSetValue","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Triggered after the value config got changed","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"name":"afterSetValue","longname":"Base#afterSetValue","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#afterSetValue","$kind":"method","id":1915,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Triggered when accessing the formGroup config\n     * @param {String|null} value\n     * @returns {String|null} parents\n     * @protected\n     */","meta":{"range":[1440,1918],"filename":"Base.mjs","lineno":56,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100058794","name":"Base#beforeGetFormGroup","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Triggered when accessing the formGroup config","params":[{"type":{"names":["String","null"]},"name":"value"}],"returns":[{"type":{"names":["String","null"]},"description":"parents"}],"access":"protected","name":"beforeGetFormGroup","longname":"Base#beforeGetFormGroup","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#beforeGetFormGroup","$kind":"method","id":1916,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Override this method as needed\n     * @param {*} value\n     * @param {*} oldValue\n     */","meta":{"range":[2029,2180],"filename":"Base.mjs","lineno":83,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100058865","name":"Base#fireChangeEvent","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"Override this method as needed","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"name":"fireChangeEvent","longname":"Base#fireChangeEvent","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#fireChangeEvent","$kind":"method","id":1917,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * @returns {*}\n     */","meta":{"range":[2222,2267],"filename":"Base.mjs","lineno":94,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100058884","name":"Base#getValue","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["*"]}}],"name":"getValue","longname":"Base#getValue","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#getValue","$kind":"method","id":1918,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[2315,2353],"filename":"Base.mjs","lineno":101,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100058892","name":"Base#isValid","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"isValid","longname":"Base#isValid","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#isValid","$kind":"method","id":1919,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Resets the field to a new value or null\n     * @param {*} value=null\n     */","meta":{"range":[2451,2504],"filename":"Base.mjs","lineno":109,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100058898","name":"Base#reset","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Resets the field to a new value or null","params":[{"type":{"names":["*"]},"defaultvalue":null,"name":"value"}],"name":"reset","longname":"Base#reset","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#reset","$kind":"method","id":1920,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Checks for client-side field errors\n     * @param {Boolean} silent=true\n     * @returns {Boolean} Returns true in case there are no client-side errors\n     */","meta":{"range":[2684,2734],"filename":"Base.mjs","lineno":118,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100058911","name":"Base#validate","type":"MethodDefinition","paramnames":["silent"]},"vars":{"":null}},"description":"Checks for client-side field errors","params":[{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"silent"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true in case there are no client-side errors"}],"name":"validate","longname":"Base#validate","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#validate","$kind":"method","id":1921,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n * The change event fires after the value config gets changed\n * @event change\n * @param {*} value\n * @param {*} oldValue\n * @returns {Object}\n */","meta":{"filename":"Base.mjs","lineno":123,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"The change event fires after the value config gets changed","kind":"event","name":"change","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"returns":[{"type":{"names":["Object"]}}],"longname":"event:change","scope":"global","$longname":"event:change","$kind":"event","id":1922,"neoClassName":"Neo.form.field.Base"}]}