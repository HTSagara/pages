{"classData":[{"comment":"/**\n * Abstract base class for form fields\n * @class Neo.form.field.Base\n * @extends Neo.component.Base\n */","meta":{"filename":"Base.mjs","lineno":4,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Abstract base class for form fields</p>","kind":"class","name":"Base","augments":["Neo.component.Base"],"memberof":"Neo.form.field","longname":"Neo.form.field.Base","scope":"static","$longname":"Neo.form.field.Base","$kind":"class","id":2106,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * @member {Object} delayable\n     * @protected\n     * @static\n     */","meta":{"filename":"Base.mjs","lineno":15,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"delayable","type":{"names":["Object"]},"access":"protected","scope":"static","longname":"delayable","$longname":"delayable","$kind":"property","id":2107,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {String} className='Neo.form.field.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":25,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.form.field.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":2108,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {String} ntype='basefield'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":30,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'basefield'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":2109,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * Form groups can get set on any parent component level.\n         * An alternative way for using dots in field names.\n         * @member {String|null} formGroup_=null\n         */","meta":{"filename":"Base.mjs","lineno":36,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Form groups can get set on any parent component level.\nAn alternative way for using dots in field names.</p>","kind":"member","name":"formGroup_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"formGroup_","scope":"global","$longname":"formGroup_","$kind":"property","id":2110,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {String|null} name_=null\n         */","meta":{"filename":"Base.mjs","lineno":40,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"name_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"name_","scope":"global","$longname":"name_","$kind":"property","id":2111,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * Neo itself does not need field names to get mapped to the DOM (input nodes),\n         * except for CheckBoxes & Radios to work. It can be useful for testing tools\n         * & accessibility though, so the default got set to true.\n         * Feel free to change it to false to keep the DOM minimal.\n         * @member {Boolean} renderName_=true\n         */","meta":{"filename":"Base.mjs","lineno":48,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Neo itself does not need field names to get mapped to the DOM (input nodes),\nexcept for CheckBoxes &amp; Radios to work. It can be useful for testing tools\n&amp; accessibility though, so the default got set to true.\nFeel free to change it to false to keep the DOM minimal.</p>","kind":"member","name":"renderName_","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"renderName_","scope":"global","$longname":"renderName_","$kind":"property","id":2112,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * In case renderName is set to true, you can optionally render the combination\n         * of all formGroup(s) & the field name into the DOM => input node\n         * @member {Boolean} renderPath=true\n         */","meta":{"filename":"Base.mjs","lineno":54,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>In case renderName is set to true, you can optionally render the combination\nof all formGroup(s) &amp; the field name into the DOM =&gt; input node</p>","kind":"member","name":"renderPath","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"renderPath","scope":"global","$longname":"renderPath","$kind":"property","id":2113,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n         * @member {*} value_=null\n         */","meta":{"filename":"Base.mjs","lineno":58,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"value_","type":{"names":["*"]},"defaultvalue":null,"longname":"value_","scope":"global","$longname":"value_","$kind":"property","id":2114,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * An internal cache for formGroups of all parent levels\n     * @member {String|null} formGroupString=null\n     */","meta":{"filename":"Base.mjs","lineno":65,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>An internal cache for formGroups of all parent levels</p>","kind":"member","name":"formGroupString","type":{"names":["String","null"]},"defaultvalue":null,"longname":"formGroupString","scope":"global","$longname":"formGroupString","$kind":"property","id":2115,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * An internal cache for formGroup(s) and the field name\n     * @member {String|null} path=null\n     */","meta":{"filename":"Base.mjs","lineno":70,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>An internal cache for formGroup(s) and the field name</p>","kind":"member","name":"path","type":{"names":["String","null"]},"defaultvalue":null,"longname":"path","scope":"global","$longname":"path","$kind":"property","id":2116,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Triggered after the name config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     */","meta":{"range":[2280,2432],"filename":"Base.mjs","lineno":77,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100064960","name":"Base#afterSetName","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the name config got changed</p>","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"name":"afterSetName","longname":"Base#afterSetName","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#afterSetName","$kind":"method","id":2117,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Triggered after the role config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[2594,2694],"filename":"Base.mjs","lineno":89,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100064989","name":"Base#afterSetRole","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the role config got changed</p>","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetRole","longname":"Base#afterSetRole","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#afterSetRole","$kind":"method","id":2118,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Triggered after the value config got changed\n     * @param {*} value\n     * @param {*} oldValue\n     */","meta":{"range":[2819,2929],"filename":"Base.mjs","lineno":99,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065009","name":"Base#afterSetValue","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the value config got changed</p>","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"name":"afterSetValue","longname":"Base#afterSetValue","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#afterSetValue","$kind":"method","id":2119,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Triggered when accessing the formGroup config\n     * @param {String|null} value\n     * @returns {String|null} parents\n     * @protected\n     */","meta":{"range":[3094,3571],"filename":"Base.mjs","lineno":109,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065026","name":"Base#beforeGetFormGroup","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Triggered when accessing the formGroup config</p>","params":[{"type":{"names":["String","null"]},"name":"value"}],"returns":[{"type":{"names":["String","null"]},"description":"parents"}],"access":"protected","name":"beforeGetFormGroup","longname":"Base#beforeGetFormGroup","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#beforeGetFormGroup","$kind":"method","id":2120,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Changes the value of a inputEl vdom object attribute or removes it in case it has no value\n     * @param {String} key\n     * @param {Array|Number|Object|String|null} value\n     * @param {Boolean} silent=false\n     */","meta":{"range":[3809,4085],"filename":"Base.mjs","lineno":137,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065097","name":"Base#changeInputElKey","type":"MethodDefinition","paramnames":["key","value","silent"]},"vars":{"":null}},"description":"<p>Changes the value of a inputEl vdom object attribute or removes it in case it has no value</p>","params":[{"type":{"names":["String"]},"name":"key"},{"type":{"names":["Array","Number","Object","String","null"]},"name":"value"},{"type":{"names":["Boolean"]},"defaultvalue":false,"name":"silent"}],"name":"changeInputElKey","longname":"Base#changeInputElKey","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#changeInputElKey","$kind":"method","id":2121,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Override this method as needed\n     * @param {*}      value\n     * @param {*}      oldValue\n     * @param {String} eventName\n     */","meta":{"range":[4239,4907],"filename":"Base.mjs","lineno":155,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065149","name":"Base#doFireChangeEvent","type":"MethodDefinition","paramnames":["value","oldValue","eventName"]},"vars":{"":null}},"description":"<p>Override this method as needed</p>","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"},{"type":{"names":["String"]},"name":"eventName"}],"name":"doFireChangeEvent","longname":"Base#doFireChangeEvent","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#doFireChangeEvent","$kind":"method","id":2122,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Override this method as needed\n     * @param {*} value\n     * @param {*} oldValue\n     */","meta":{"range":[5018,5116],"filename":"Base.mjs","lineno":181,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065238","name":"Base#fireChangeEvent","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Override this method as needed</p>","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"name":"fireChangeEvent","longname":"Base#fireChangeEvent","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#fireChangeEvent","$kind":"method","id":2123,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Override this method as needed\n     * @param {*} value\n     * @param {*} oldValue\n     */","meta":{"range":[5227,5333],"filename":"Base.mjs","lineno":190,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065252","name":"Base#fireUserChangeEvent","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Override this method as needed</p>","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"name":"fireUserChangeEvent","longname":"Base#fireUserChangeEvent","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#fireUserChangeEvent","$kind":"method","id":2124,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Forms in neo can be nested. This method will return the closest parent which is a form.Container or null.\n     * @returns {Neo.form.Container|null}\n     */","meta":{"range":[5510,5839],"filename":"Base.mjs","lineno":198,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065266","name":"Base#getClosestForm","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Forms in neo can be nested. This method will return the closest parent which is a form.Container or null.</p>","returns":[{"type":{"names":["Neo.form.Container","null"]}}],"name":"getClosestForm","longname":"Base#getClosestForm","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#getClosestForm","$kind":"method","id":2125,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Override this method as needed\n     * @returns {Object|null}\n     */","meta":{"range":[5929,5974],"filename":"Base.mjs","lineno":216,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065298","name":"Base#getInputEl","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Override this method as needed</p>","returns":[{"type":{"names":["Object","null"]}}],"name":"getInputEl","longname":"Base#getInputEl","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#getInputEl","$kind":"method","id":2126,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Returns the combination of the field formGroup(s) & name\n     * @returns {String|null}\n     */","meta":{"range":[6090,6786],"filename":"Base.mjs","lineno":224,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065306","name":"Base#getPath","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Returns the combination of the field formGroup(s) &amp; name</p>","returns":[{"type":{"names":["String","null"]}}],"name":"getPath","longname":"Base#getPath","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#getPath","$kind":"method","id":2127,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * @returns {*}\n     */","meta":{"range":[6828,6873],"filename":"Base.mjs","lineno":257,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065399","name":"Base#getValue","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["*"]}}],"name":"getValue","longname":"Base#getValue","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#getValue","$kind":"method","id":2128,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[6921,6959],"filename":"Base.mjs","lineno":264,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065407","name":"Base#isValid","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"isValid","longname":"Base#isValid","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#isValid","$kind":"method","id":2129,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * @param {Object} data\n     * @param {Object[]} data.oldPath\n     * @protected\n     */","meta":{"range":[7065,7665],"filename":"Base.mjs","lineno":273,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065413","name":"Base#onFocusLeave","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Array.<Object>"]},"name":"data.oldPath"}],"access":"protected","name":"onFocusLeave","longname":"Base#onFocusLeave","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#onFocusLeave","$kind":"method","id":2130,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Resets the field to a new value or null\n     * @param {*} value=null\n     */","meta":{"range":[7763,7816],"filename":"Base.mjs","lineno":297,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065489","name":"Base#reset","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Resets the field to a new value or null</p>","params":[{"type":{"names":["*"]},"defaultvalue":null,"name":"value"}],"name":"reset","longname":"Base#reset","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#reset","$kind":"method","id":2131,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n     * Checks for client-side field errors\n     * @param {Boolean} silent=true\n     * @returns {Boolean} Returns true in case there are no client-side errors\n     */","meta":{"range":[7996,8046],"filename":"Base.mjs","lineno":306,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100065502","name":"Base#validate","type":"MethodDefinition","paramnames":["silent"]},"vars":{"":null}},"description":"<p>Checks for client-side field errors</p>","params":[{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"silent"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true in case there are no client-side errors"}],"name":"validate","longname":"Base#validate","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#validate","$kind":"method","id":2132,"neoClassName":"Neo.form.field.Base"},{"comment":"/**\n * The change event fires after the value config gets changed\n * @event change\n * @param {*} value\n * @param {*} oldValue\n * @returns {Object}\n */","meta":{"filename":"Base.mjs","lineno":311,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>The change event fires after the value config gets changed</p>","kind":"event","name":"change","params":[{"type":{"names":["*"]},"name":"value"},{"type":{"names":["*"]},"name":"oldValue"}],"returns":[{"type":{"names":["Object"]}}],"longname":"event:change","scope":"global","$longname":"event:change","$kind":"event","id":2133,"neoClassName":"Neo.form.field.Base"}]}