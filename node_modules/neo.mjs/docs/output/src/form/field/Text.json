{"classData":[{"comment":"/**\n * @class Neo.form.field.Text\n * @extends Neo.form.field.Base\n */","meta":{"filename":"Text.mjs","lineno":9,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"class","name":"Text","augments":["Neo.form.field.Base"],"memberof":"Neo.form.field","longname":"Neo.form.field.Text","scope":"static","$longname":"Neo.form.field.Text","$kind":"class","id":2476,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Valid values for autoCapitalize\n     * @member {String[]} autoCapitalizeValues=['characters','none','on','off','sentences','words']\n     * @protected\n     * @static\n     */","meta":{"filename":"Text.mjs","lineno":20,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Valid values for autoCapitalize</p>","kind":"member","name":"autoCapitalizeValues","type":{"names":["Array.<String>"]},"defaultvalue":"['characters','none','on','off','sentences','words']","access":"protected","scope":"static","longname":"autoCapitalizeValues","$longname":"autoCapitalizeValues","$kind":"property","id":2477,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Valid values for labelPosition\n     * @member {String[]} labelPositions=['bottom','inline','left','right','top']\n     * @protected\n     * @static\n     */","meta":{"filename":"Text.mjs","lineno":27,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Valid values for labelPosition</p>","kind":"member","name":"labelPositions","type":{"names":["Array.<String>"]},"defaultvalue":"['bottom','inline','left','right','top']","access":"protected","scope":"static","longname":"labelPositions","$longname":"labelPositions","$kind":"property","id":2478,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} className='Neo.form.field.Text'\n         * @protected\n         */","meta":{"filename":"Text.mjs","lineno":34,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.form.field.Text'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":2479,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} ntype='textfield'\n         * @protected\n         */","meta":{"filename":"Text.mjs","lineno":39,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'textfield'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":2480,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * An enumerated attribute that controls whether and how text input is automatically capitalized as it is\n         * entered/edited by the user.\n         * Valid values: 'characters', 'none', 'on', 'off', 'sentences', 'words'\n         * @member {String} autoCapitalize=off'\n         */","meta":{"filename":"Text.mjs","lineno":46,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>An enumerated attribute that controls whether and how text input is automatically capitalized as it is\nentered/edited by the user.\nValid values: 'characters', 'none', 'on', 'off', 'sentences', 'words'</p>","kind":"member","name":"autoCapitalize","type":{"names":["String"]},"defaultvalue":"off'","longname":"autoCapitalize","scope":"global","$longname":"autoCapitalize","$kind":"property","id":2481,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Boolean} autoComplete_=false\n         */","meta":{"filename":"Text.mjs","lineno":50,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"autoComplete_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"autoComplete_","scope":"global","$longname":"autoComplete_","$kind":"property","id":2482,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} baseCls=['neo-textfield']\n         */","meta":{"filename":"Text.mjs","lineno":54,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"baseCls","type":{"names":["Array.<String>"]},"defaultvalue":"['neo-textfield']","longname":"baseCls","scope":"global","$longname":"baseCls","$kind":"property","id":2483,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Internal variable to store the actual width for the label centerBorderEl\n         * (only needed for labelPosition: 'inline')\n         * @member {Number|null} centerBorderElWidth=null\n         * @protected\n         */","meta":{"filename":"Text.mjs","lineno":61,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Internal variable to store the actual width for the label centerBorderEl\n(only needed for labelPosition: 'inline')</p>","kind":"member","name":"centerBorderElWidth","type":{"names":["Number","null"]},"defaultvalue":null,"access":"protected","longname":"centerBorderElWidth","scope":"global","$longname":"centerBorderElWidth","$kind":"property","id":2484,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * True shows a clear trigger in case the field has a non-empty value.\n         * @member {Boolean} clearable_=true\n         */","meta":{"filename":"Text.mjs","lineno":66,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>True shows a clear trigger in case the field has a non-empty value.</p>","kind":"member","name":"clearable_","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"clearable_","scope":"global","$longname":"clearable_","$kind":"property","id":2485,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * True will reset the field to its initial value config.\n         * Recommended for fields with required: true\n         * @member {Boolean} clearToOriginalValue_=false\n         */","meta":{"filename":"Text.mjs","lineno":72,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>True will reset the field to its initial value config.\nRecommended for fields with required: true</p>","kind":"member","name":"clearToOriginalValue_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"clearToOriginalValue_","scope":"global","$longname":"clearToOriginalValue_","$kind":"property","id":2486,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Prevent users from typing specific characters.\n         * E.g. disabling +-e for NumberFields\n         * @member {String[]|null} disabledChars_=null\n         */","meta":{"filename":"Text.mjs","lineno":78,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Prevent users from typing specific characters.\nE.g. disabling +-e for NumberFields</p>","kind":"member","name":"disabledChars_","type":{"names":["Array.<String>","null"]},"defaultvalue":null,"longname":"disabledChars_","scope":"global","$longname":"disabledChars_","$kind":"property","id":2487,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Setting `editable` to `false` means that the input field will be read-only\n         * but the field is still workable and may have its value changed by user interaction.\n         *\n         * For example picker fields such as `Date` and `Select` may still have their\n         * values changed by selecting from the picker using keyboard or pointer.\n         * @member {Boolean} editable_=true\n         */","meta":{"filename":"Text.mjs","lineno":87,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Setting <code>editable</code> to <code>false</code> means that the input field will be read-only\nbut the field is still workable and may have its value changed by user interaction.</p>\n<p>For example picker fields such as <code>Date</code> and <code>Select</code> may still have their\nvalues changed by selecting from the picker using keyboard or pointer.</p>","kind":"member","name":"editable_","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"editable_","scope":"global","$longname":"editable_","$kind":"property","id":2488,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Configure the value of empty fields. null or an empty string is recommended.\n         * @member {String|null} emptyValue=null\n         */","meta":{"filename":"Text.mjs","lineno":92,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Configure the value of empty fields. null or an empty string is recommended.</p>","kind":"member","name":"emptyValue","type":{"names":["String","null"]},"defaultvalue":null,"longname":"emptyValue","scope":"global","$longname":"emptyValue","$kind":"property","id":2489,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String|null} error_=null\n         */","meta":{"filename":"Text.mjs","lineno":96,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"error_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"error_","scope":"global","$longname":"error_","$kind":"property","id":2490,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Useful for fields inside a css grid where errors should live outside the layout\n         * @member {Boolean} errorPositionAbsolute_=false\n         */","meta":{"filename":"Text.mjs","lineno":101,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Useful for fields inside a css grid where errors should live outside the layout</p>","kind":"member","name":"errorPositionAbsolute_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"errorPositionAbsolute_","scope":"global","$longname":"errorPositionAbsolute_","$kind":"property","id":2491,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * data passes inputPattern, maxLength, minLength & valueLength properties\n         * @member {Function} errorTextInputPattern=data=>`Input pattern violation: ${data.inputPattern}`\n         */","meta":{"filename":"Text.mjs","lineno":106,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>data passes inputPattern, maxLength, minLength &amp; valueLength properties</p>","kind":"member","name":"errorTextInputPattern","type":{"names":["function"]},"defaultvalue":"data=>`Input","longname":"errorTextInputPattern","scope":"global","$longname":"errorTextInputPattern","$kind":"property","id":2492,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * data passes inputPattern, maxLength, minLength & valueLength properties\n         * @member {Function} errorTextMaxLength=data=>`Max length violation: ${valueLength} / ${maxLength}`\n         */","meta":{"filename":"Text.mjs","lineno":111,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>data passes inputPattern, maxLength, minLength &amp; valueLength properties</p>","kind":"member","name":"errorTextMaxLength","type":{"names":["function"]},"defaultvalue":"data=>`Max","longname":"errorTextMaxLength","scope":"global","$longname":"errorTextMaxLength","$kind":"property","id":2493,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * data passes inputPattern, maxLength, minLength & valueLength properties\n         * @member {Function} errorTextMinLength=data=>`Min length violation: ${data.valueLength} / ${data.minLength}`\n         */","meta":{"filename":"Text.mjs","lineno":116,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>data passes inputPattern, maxLength, minLength &amp; valueLength properties</p>","kind":"member","name":"errorTextMinLength","type":{"names":["function"]},"defaultvalue":"data=>`Min","longname":"errorTextMinLength","scope":"global","$longname":"errorTextMinLength","$kind":"property","id":2494,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} errorTextRequired='Required'\n         */","meta":{"filename":"Text.mjs","lineno":120,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"errorTextRequired","type":{"names":["String"]},"defaultvalue":"'Required'","longname":"errorTextRequired","scope":"global","$longname":"errorTextRequired","$kind":"property","id":2495,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Boolean} hideLabel_=false\n         */","meta":{"filename":"Text.mjs","lineno":124,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"hideLabel_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"hideLabel_","scope":"global","$longname":"hideLabel_","$kind":"property","id":2496,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {RegExp|null} inputPattern_=null\n         */","meta":{"filename":"Text.mjs","lineno":128,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"inputPattern_","type":{"names":["RegExp","null"]},"defaultvalue":null,"longname":"inputPattern_","scope":"global","$longname":"inputPattern_","$kind":"property","id":2497,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * If false, the inputPattern will only get validated via JavaScript, but not getting applied on DOM level.\n         * The regex support for input based patterns is not fully there yet, so feel free to disable this feature\n         * if needed (E.g. form.field.Phone).\n         * @member {Boolean} inputPatternDOM_=true\n         */","meta":{"filename":"Text.mjs","lineno":135,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>If false, the inputPattern will only get validated via JavaScript, but not getting applied on DOM level.\nThe regex support for input based patterns is not fully there yet, so feel free to disable this feature\nif needed (E.g. form.field.Phone).</p>","kind":"member","name":"inputPatternDOM_","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"inputPatternDOM_","scope":"global","$longname":"inputPatternDOM_","$kind":"property","id":2498,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} inputType_='text'\n         */","meta":{"filename":"Text.mjs","lineno":139,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"inputType_","type":{"names":["String"]},"defaultvalue":"'text'","longname":"inputType_","scope":"global","$longname":"inputType_","$kind":"property","id":2499,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} labelBaseCls=['neo-textfield-label']\n         */","meta":{"filename":"Text.mjs","lineno":143,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"labelBaseCls","type":{"names":["Array.<String>"]},"defaultvalue":"['neo-textfield-label']","longname":"labelBaseCls","scope":"global","$longname":"labelBaseCls","$kind":"property","id":2500,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} labelCls_=[]\n         */","meta":{"filename":"Text.mjs","lineno":147,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"labelCls_","type":{"names":["Array.<String>"]},"defaultvalue":"[]","longname":"labelCls_","scope":"global","$longname":"labelCls_","$kind":"property","id":2501,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Edge-case config in case we want to render leading content with their own selectors like:\n         * <span class=\"my-label-id-cls\">E10</span> • Firstname\n         * @member {String|null} labelId_=null\n         */","meta":{"filename":"Text.mjs","lineno":153,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Edge-case config in case we want to render leading content with their own selectors like:\n<span class=\"my-label-id-cls\">E10</span> • Firstname</p>","kind":"member","name":"labelId_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"labelId_","scope":"global","$longname":"labelId_","$kind":"property","id":2502,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * CSS rules for labelId\n         * @member {String[]} labelIdCls_=[]\n         */","meta":{"filename":"Text.mjs","lineno":158,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>CSS rules for labelId</p>","kind":"member","name":"labelIdCls_","type":{"names":["Array.<String>"]},"defaultvalue":"[]","longname":"labelIdCls_","scope":"global","$longname":"labelIdCls_","$kind":"property","id":2503,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Separator between labelId & labelText\n         * @member {String} labelIdSeparator_=' · '\n         */","meta":{"filename":"Text.mjs","lineno":163,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Separator between labelId &amp; labelText</p>","kind":"member","name":"labelIdSeparator_","type":{"names":["String"]},"defaultvalue":"'","longname":"labelIdSeparator_","scope":"global","$longname":"labelIdSeparator_","$kind":"property","id":2504,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} labelOptionalText_=' (Optional)'\n         */","meta":{"filename":"Text.mjs","lineno":167,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"labelOptionalText_","type":{"names":["String"]},"defaultvalue":"'","description":"<p>(Optional)'</p>","longname":"labelOptionalText_","scope":"global","$longname":"labelOptionalText_","$kind":"property","id":2505,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Valid values: 'bottom', 'inline', 'left', 'right', 'top'\n         * @member {String} labelPosition_='left'\n         */","meta":{"filename":"Text.mjs","lineno":172,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Valid values: 'bottom', 'inline', 'left', 'right', 'top'</p>","kind":"member","name":"labelPosition_","type":{"names":["String"]},"defaultvalue":"'left'","longname":"labelPosition_","scope":"global","$longname":"labelPosition_","$kind":"property","id":2506,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} labelText_='LabelText'\n         */","meta":{"filename":"Text.mjs","lineno":176,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"labelText_","type":{"names":["String"]},"defaultvalue":"'LabelText'","longname":"labelText_","scope":"global","$longname":"labelText_","$kind":"property","id":2507,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * defaults to px\n         * @member {Number|String} labelWidth_=150\n         */","meta":{"filename":"Text.mjs","lineno":181,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>defaults to px</p>","kind":"member","name":"labelWidth_","type":{"names":["Number","String"]},"defaultvalue":150,"longname":"labelWidth_","scope":"global","$longname":"labelWidth_","$kind":"property","id":2508,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * The maximum amount of chars which you can enter into this field\n         * @member {Number|null} maxLength_=null\n         */","meta":{"filename":"Text.mjs","lineno":186,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>The maximum amount of chars which you can enter into this field</p>","kind":"member","name":"maxLength_","type":{"names":["Number","null"]},"defaultvalue":null,"longname":"maxLength_","scope":"global","$longname":"maxLength_","$kind":"property","id":2509,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * The minimum amount of chars which you can enter into this field\n         * @member {Number|null} minLength_=null\n         */","meta":{"filename":"Text.mjs","lineno":191,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>The minimum amount of chars which you can enter into this field</p>","kind":"member","name":"minLength_","type":{"names":["Number","null"]},"defaultvalue":null,"longname":"minLength_","scope":"global","$longname":"minLength_","$kind":"property","id":2510,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String|null} placeholderText_=null\n         */","meta":{"filename":"Text.mjs","lineno":195,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"placeholderText_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"placeholderText_","scope":"global","$longname":"placeholderText_","$kind":"property","id":2511,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Setting `readOnly` means that the field may not be changed by user interaction.\n         *\n         * The input field will be read-only and other ways of changing the field's value\n         * (such as by operating pickers) will be disabled.\n         * @member {Boolean} readOnly_=false\n         */","meta":{"filename":"Text.mjs","lineno":203,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Setting <code>readOnly</code> means that the field may not be changed by user interaction.</p>\n<p>The input field will be read-only and other ways of changing the field's value\n(such as by operating pickers) will be disabled.</p>","kind":"member","name":"readOnly_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"readOnly_","scope":"global","$longname":"readOnly_","$kind":"property","id":2512,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Boolean} required_=false\n         */","meta":{"filename":"Text.mjs","lineno":207,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"required_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"required_","scope":"global","$longname":"required_","$kind":"property","id":2513,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Boolean} showOptionalText_=false\n         */","meta":{"filename":"Text.mjs","lineno":211,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"showOptionalText_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"showOptionalText_","scope":"global","$longname":"showOptionalText_","$kind":"property","id":2514,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * null => Follow the element's default behavior for spell checking\n         * @member {Boolean|null} spellCheck_=false\n         */","meta":{"filename":"Text.mjs","lineno":216,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>null =&gt; Follow the element's default behavior for spell checking</p>","kind":"member","name":"spellCheck_","type":{"names":["Boolean","null"]},"defaultvalue":false,"longname":"spellCheck_","scope":"global","$longname":"spellCheck_","$kind":"property","id":2515,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} subLabelBaseCls=['neo-textfield-sublabel']\n         */","meta":{"filename":"Text.mjs","lineno":220,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"subLabelBaseCls","type":{"names":["Array.<String>"]},"defaultvalue":"['neo-textfield-sublabel']","longname":"subLabelBaseCls","scope":"global","$longname":"subLabelBaseCls","$kind":"property","id":2516,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String[]} subLabelCls_=[]\n         */","meta":{"filename":"Text.mjs","lineno":224,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"subLabelCls_","type":{"names":["Array.<String>"]},"defaultvalue":"[]","longname":"subLabelCls_","scope":"global","$longname":"subLabelCls_","$kind":"property","id":2517,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {String} subLabelText_=null\n         */","meta":{"filename":"Text.mjs","lineno":228,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"subLabelText_","type":{"names":["String"]},"defaultvalue":null,"longname":"subLabelText_","scope":"global","$longname":"subLabelText_","$kind":"property","id":2518,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Object|Object[]|null} triggers_=null\n         */","meta":{"filename":"Text.mjs","lineno":232,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"triggers_","type":{"names":["Object","Array.<Object>","null"]},"defaultvalue":null,"longname":"triggers_","scope":"global","$longname":"triggers_","$kind":"property","id":2519,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * Using the alert state will display an empty but required field in orange instead of red.\n         * Intended to get combined with form.Container: getFormState().\n         * See apps/form as an example.\n         * @member {Boolean} useAlertState_=false\n         */","meta":{"filename":"Text.mjs","lineno":239,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Using the alert state will display an empty but required field in orange instead of red.\nIntended to get combined with form.Container: getFormState().\nSee apps/form as an example.</p>","kind":"member","name":"useAlertState_","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"useAlertState_","scope":"global","$longname":"useAlertState_","$kind":"property","id":2520,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * A string based value will get resolved into the closest controller which implements it\n         * @member {Function|String|null} validator=null\n         */","meta":{"filename":"Text.mjs","lineno":244,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>A string based value will get resolved into the closest controller which implements it</p>","kind":"member","name":"validator","type":{"names":["function","String","null"]},"defaultvalue":null,"longname":"validator","scope":"global","$longname":"validator","$kind":"property","id":2521,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * getVlue can be xssProtected and values are escaped\n         * @member {Boolean} xssProtected=false\n         */","meta":{"filename":"Text.mjs","lineno":249,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>getVlue can be xssProtected and values are escaped</p>","kind":"member","name":"xssProtected","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"xssProtected","scope":"global","$longname":"xssProtected","$kind":"property","id":2522,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Object} _vdom\n         */","meta":{"filename":"Text.mjs","lineno":253,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"_vdom","type":{"names":["Object"]},"longname":"_vdom","scope":"global","$longname":"_vdom","$kind":"property","id":2523,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n         * @member {Object} _vdom\n         */","meta":{"filename":"Text.mjs","lineno":256,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"kind":"member","name":"_vdom","type":{"names":["Object"]},"longname":"_vdom","scope":"global","$longname":"_vdom","$kind":"property","id":2524,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Set this value to false, in case a field should display errors up front.\n     * Otherwise, errors will stay hidden on mounting, unless you trigger validate(false).\n     * @member {Boolean} clean=true\n     */","meta":{"filename":"Text.mjs","lineno":272,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{}},"description":"<p>Set this value to false, in case a field should display errors up front.\nOtherwise, errors will stay hidden on mounting, unless you trigger validate(false).</p>","kind":"member","name":"clean","type":{"names":["Boolean"]},"defaultvalue":true,"longname":"clean","scope":"global","$longname":"clean","$kind":"property","id":2525,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} config\n     */","meta":{"range":[9802,10092],"filename":"Text.mjs","lineno":277,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074217","name":"Text#construct","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"}],"name":"construct","longname":"Text#construct","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#construct","$kind":"method","id":2526,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the appName config got changed\n     * @param {String} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[10252,10436],"filename":"Text.mjs","lineno":295,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074259","name":"Text#afterSetAppName","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the appName config got changed</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetAppName","longname":"Text#afterSetAppName","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetAppName","$kind":"method","id":2527,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the autoCapitalize config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[10598,10745],"filename":"Text.mjs","lineno":309,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074276","name":"Text#afterSetAutoCapitalize","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the autoCapitalize config got changed</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetAutoCapitalize","longname":"Text#afterSetAutoCapitalize","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetAutoCapitalize","$kind":"method","id":2528,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the autoComplete config got changed\n     * Chrome ignores a value of \"off\", so we stick to a different value instead\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[10988,11100],"filename":"Text.mjs","lineno":320,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074298","name":"Text#afterSetAutoComplete","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the autoComplete config got changed\nChrome ignores a value of \"off\", so we stick to a different value instead</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetAutoComplete","longname":"Text#afterSetAutoComplete","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetAutoComplete","$kind":"method","id":2529,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the clearable config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[11259,11554],"filename":"Text.mjs","lineno":330,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074314","name":"Text#afterSetClearable","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the clearable config got changed</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetClearable","longname":"Text#afterSetClearable","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetClearable","$kind":"method","id":2530,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the clearToOriginalValue config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[11724,11878],"filename":"Text.mjs","lineno":349,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074356","name":"Text#afterSetClearToOriginalValue","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the clearToOriginalValue config got changed</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetClearToOriginalValue","longname":"Text#afterSetClearToOriginalValue","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetClearToOriginalValue","$kind":"method","id":2531,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the disabledChars config got changed\n     * @param {String[]|null} value\n     * @param {String[]|null} oldValue\n     * @protected\n     */","meta":{"range":[12053,12346],"filename":"Text.mjs","lineno":362,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074373","name":"Text#afterSetDisabledChars","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the disabledChars config got changed</p>","params":[{"type":{"names":["Array.<String>","null"]},"name":"value"},{"type":{"names":["Array.<String>","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetDisabledChars","longname":"Text#afterSetDisabledChars","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetDisabledChars","$kind":"method","id":2532,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the editable config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[12504,12728],"filename":"Text.mjs","lineno":380,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074409","name":"Text#afterSetEditable","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the editable config got changed</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetEditable","longname":"Text#afterSetEditable","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetEditable","$kind":"method","id":2533,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the error config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[12891,12961],"filename":"Text.mjs","lineno":397,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074444","name":"Text#afterSetError","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the error config got changed</p>","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetError","longname":"Text#afterSetError","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetError","$kind":"method","id":2534,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the errorPositionAbsolute config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[13132,13387],"filename":"Text.mjs","lineno":407,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074456","name":"Text#afterSetErrorPositionAbsolute","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the errorPositionAbsolute config got changed</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetErrorPositionAbsolute","longname":"Text#afterSetErrorPositionAbsolute","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetErrorPositionAbsolute","$kind":"method","id":2535,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the hideLabel config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[13546,13767],"filename":"Text.mjs","lineno":422,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074497","name":"Text#afterSetHideLabel","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the hideLabel config got changed</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetHideLabel","longname":"Text#afterSetHideLabel","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetHideLabel","$kind":"method","id":2536,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the id config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[13917,14326],"filename":"Text.mjs","lineno":436,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074537","name":"Text#afterSetId","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the id config got changed</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetId","longname":"Text#afterSetId","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetId","$kind":"method","id":2537,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the inputPattern config got changed\n     * @param {RegExp|null} value\n     * @param {RegExp|null} oldValue\n     * @protected\n     */","meta":{"range":[14496,14783],"filename":"Text.mjs","lineno":456,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074593","name":"Text#afterSetInputPattern","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the inputPattern config got changed</p>","params":[{"type":{"names":["RegExp","null"]},"name":"value"},{"type":{"names":["RegExp","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetInputPattern","longname":"Text#afterSetInputPattern","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetInputPattern","$kind":"method","id":2538,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the inputType config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[14940,15027],"filename":"Text.mjs","lineno":473,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074634","name":"Text#afterSetInputType","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the inputType config got changed</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetInputType","longname":"Text#afterSetInputType","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetInputType","$kind":"method","id":2539,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelCls config got changed\n     * @param {String[]} value\n     * @param {String[]} oldValue\n     * @protected\n     */","meta":{"range":[15187,15387],"filename":"Text.mjs","lineno":483,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074647","name":"Text#afterSetLabelCls","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the labelCls config got changed</p>","params":[{"type":{"names":["Array.<String>"]},"name":"value"},{"type":{"names":["Array.<String>"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelCls","longname":"Text#afterSetLabelCls","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelCls","$kind":"method","id":2540,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelOptionalText config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[15552,15668],"filename":"Text.mjs","lineno":499,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074684","name":"Text#afterSetLabelOptionalText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the labelOptionalText config got changed</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelOptionalText","longname":"Text#afterSetLabelOptionalText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelOptionalText","$kind":"method","id":2541,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelPosition config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[15829,17416],"filename":"Text.mjs","lineno":509,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074698","name":"Text#afterSetLabelPosition","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the labelPosition config got changed</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelPosition","longname":"Text#afterSetLabelPosition","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelPosition","$kind":"method","id":2542,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelText config got changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[17573,18260],"filename":"Text.mjs","lineno":566,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100074913","name":"Text#afterSetLabelText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the labelText config got changed</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelText","longname":"Text#afterSetLabelText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelText","$kind":"method","id":2543,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the labelWidth config got changed\n     * @param {Number|String} value\n     * @param {Number|String} oldValue\n     * @protected\n     */","meta":{"range":[18432,18716],"filename":"Text.mjs","lineno":597,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075008","name":"Text#afterSetLabelWidth","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the labelWidth config got changed</p>","params":[{"type":{"names":["Number","String"]},"name":"value"},{"type":{"names":["Number","String"]},"name":"oldValue"}],"access":"protected","name":"afterSetLabelWidth","longname":"Text#afterSetLabelWidth","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetLabelWidth","$kind":"method","id":2544,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the maxLength config got changed\n     * @param {Number|null} value\n     * @param {Number|null} oldValue\n     * @protected\n     */","meta":{"range":[18883,19010],"filename":"Text.mjs","lineno":614,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075053","name":"Text#afterSetMaxLength","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the maxLength config got changed</p>","params":[{"type":{"names":["Number","null"]},"name":"value"},{"type":{"names":["Number","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetMaxLength","longname":"Text#afterSetMaxLength","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetMaxLength","$kind":"method","id":2545,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the minLength config got changed\n     * @param {Number|null} value\n     * @param {Number|null} oldValue\n     * @protected\n     */","meta":{"range":[19177,19304],"filename":"Text.mjs","lineno":625,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075071","name":"Text#afterSetMinLength","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the minLength config got changed</p>","params":[{"type":{"names":["Number","null"]},"name":"value"},{"type":{"names":["Number","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetMinLength","longname":"Text#afterSetMinLength","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetMinLength","$kind":"method","id":2546,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the mounted config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[19461,20152],"filename":"Text.mjs","lineno":636,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075089","name":"Text#afterSetMounted","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the mounted config got changed</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetMounted","longname":"Text#afterSetMounted","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetMounted","$kind":"method","id":2547,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the placeholderText config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[20325,20852],"filename":"Text.mjs","lineno":668,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075176","name":"Text#afterSetPlaceholderText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the placeholderText config got changed</p>","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetPlaceholderText","longname":"Text#afterSetPlaceholderText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetPlaceholderText","$kind":"method","id":2548,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the readOnly config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[21010,21358],"filename":"Text.mjs","lineno":688,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075243","name":"Text#afterSetReadOnly","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the readOnly config got changed</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetReadOnly","longname":"Text#afterSetReadOnly","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetReadOnly","$kind":"method","id":2549,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the required config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[21516,21871],"filename":"Text.mjs","lineno":708,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075281","name":"Text#afterSetRequired","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the required config got changed</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetRequired","longname":"Text#afterSetRequired","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetRequired","$kind":"method","id":2550,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the showOptionalText config got changed\n     * @param {Boolean} value\n     * @param {Boolean} oldValue\n     * @protected\n     */","meta":{"range":[22037,22152],"filename":"Text.mjs","lineno":728,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075338","name":"Text#afterSetShowOptionalText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the showOptionalText config got changed</p>","params":[{"type":{"names":["Boolean"]},"name":"value"},{"type":{"names":["Boolean"]},"name":"oldValue"}],"access":"protected","name":"afterSetShowOptionalText","longname":"Text#afterSetShowOptionalText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetShowOptionalText","$kind":"method","id":2551,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the spellCheck config got changed\n     * @param {Boolean|null} value\n     * @param {Boolean|null} oldValue\n     * @protected\n     */","meta":{"range":[22322,22446],"filename":"Text.mjs","lineno":738,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075352","name":"Text#afterSetSpellCheck","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the spellCheck config got changed</p>","params":[{"type":{"names":["Boolean","null"]},"name":"value"},{"type":{"names":["Boolean","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetSpellCheck","longname":"Text#afterSetSpellCheck","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetSpellCheck","$kind":"method","id":2552,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the subLabelCls config got changed\n     * @param {String[]} value\n     * @param {String[]} oldValue\n     * @protected\n     */","meta":{"range":[22609,22810],"filename":"Text.mjs","lineno":748,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075372","name":"Text#afterSetSubLabelCls","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the subLabelCls config got changed</p>","params":[{"type":{"names":["Array.<String>"]},"name":"value"},{"type":{"names":["Array.<String>"]},"name":"oldValue"}],"access":"protected","name":"afterSetSubLabelCls","longname":"Text#afterSetSubLabelCls","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetSubLabelCls","$kind":"method","id":2553,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the subLabelText config got changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[22980,23245],"filename":"Text.mjs","lineno":764,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075412","name":"Text#afterSetSubLabelText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the subLabelText config got changed</p>","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetSubLabelText","longname":"Text#afterSetSubLabelText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetSubLabelText","$kind":"method","id":2554,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the triggers config got changed\n     * @param {Object[]} value\n     * @param {Object[]} oldValue\n     * @protected\n     */","meta":{"range":[23405,25208],"filename":"Text.mjs","lineno":781,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075456","name":"Text#afterSetTriggers","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the triggers config got changed</p>","params":[{"type":{"names":["Array.<Object>"]},"name":"value"},{"type":{"names":["Array.<Object>"]},"name":"oldValue"}],"access":"protected","name":"afterSetTriggers","longname":"Text#afterSetTriggers","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetTriggers","$kind":"method","id":2555,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the value config got changed\n     * todo: add validation logic\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     */","meta":{"range":[25395,26229],"filename":"Text.mjs","lineno":844,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075681","name":"Text#afterSetValue","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the value config got changed\ntodo: add validation logic</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","name":"afterSetValue","longname":"Text#afterSetValue","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetValue","$kind":"method","id":2556,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered after the width config got changed\n     * @param {Number|String} value\n     * @param {Number|String} oldValue\n     * @protected\n     */","meta":{"range":[26396,26512],"filename":"Text.mjs","lineno":877,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075818","name":"Text#afterSetWidth","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the width config got changed</p>","params":[{"type":{"names":["Number","String"]},"name":"value"},{"type":{"names":["Number","String"]},"name":"oldValue"}],"access":"protected","name":"afterSetWidth","longname":"Text#afterSetWidth","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#afterSetWidth","$kind":"method","id":2557,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Return a shallow copy of the triggers config\n     * @param {Array|null} value\n     * @protected\n     */","meta":{"range":[26637,26768],"filename":"Text.mjs","lineno":887,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075836","name":"Text#beforeGetTriggers","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Return a shallow copy of the triggers config</p>","params":[{"type":{"names":["Array","null"]},"name":"value"}],"access":"protected","name":"beforeGetTriggers","longname":"Text#beforeGetTriggers","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeGetTriggers","$kind":"method","id":2558,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the autoCapitalize config gets changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     * @returns {String}\n     */","meta":{"range":[26957,27103],"filename":"Text.mjs","lineno":902,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075854","name":"Text#beforeSetAutoCapitalize","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the autoCapitalize config gets changed</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","returns":[{"type":{"names":["String"]}}],"name":"beforeSetAutoCapitalize","longname":"Text#beforeSetAutoCapitalize","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetAutoCapitalize","$kind":"method","id":2559,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the labelCls config gets changed.\n     * @param {String[]} value\n     * @param {String[]} oldValue\n     * @protected\n     */","meta":{"range":[27266,27370],"filename":"Text.mjs","lineno":912,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075869","name":"Text#beforeSetLabelCls","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the labelCls config gets changed.</p>","params":[{"type":{"names":["Array.<String>"]},"name":"value"},{"type":{"names":["Array.<String>"]},"name":"oldValue"}],"access":"protected","name":"beforeSetLabelCls","longname":"Text#beforeSetLabelCls","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetLabelCls","$kind":"method","id":2560,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the labelPosition config gets changed\n     * @param {String} value\n     * @param {String} oldValue\n     * @protected\n     * @returns {String}\n     */","meta":{"range":[27558,27678],"filename":"Text.mjs","lineno":923,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075886","name":"Text#beforeSetLabelPosition","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the labelPosition config gets changed</p>","params":[{"type":{"names":["String"]},"name":"value"},{"type":{"names":["String"]},"name":"oldValue"}],"access":"protected","returns":[{"type":{"names":["String"]}}],"name":"beforeSetLabelPosition","longname":"Text#beforeSetLabelPosition","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetLabelPosition","$kind":"method","id":2561,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the labelText config gets changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     * @returns {String}\n     */","meta":{"range":[27872,28357],"filename":"Text.mjs","lineno":934,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075900","name":"Text#beforeSetLabelText","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the labelText config gets changed</p>","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","returns":[{"type":{"names":["String"]}}],"name":"beforeSetLabelText","longname":"Text#beforeSetLabelText","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetLabelText","$kind":"method","id":2562,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the subLabelCls config gets changed\n     * @param {String[]} value\n     * @param {String[]} oldValue\n     * @returns {String[]}\n     * @protected\n     */","meta":{"range":[28549,28659],"filename":"Text.mjs","lineno":957,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075956","name":"Text#beforeSetSubLabelCls","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the subLabelCls config gets changed</p>","params":[{"type":{"names":["Array.<String>"]},"name":"value"},{"type":{"names":["Array.<String>"]},"name":"oldValue"}],"returns":[{"type":{"names":["Array.<String>"]}}],"access":"protected","name":"beforeSetSubLabelCls","longname":"Text#beforeSetSubLabelCls","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetSubLabelCls","$kind":"method","id":2563,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the triggers config gets changed\n     * @param {Object|Object[]} value\n     * @param {Object[]} oldValue\n     * @returns {Object[]} the parsed triggers config\n     * @protected\n     * @returns {Object|Object[]}\n     */","meta":{"range":[28916,30015],"filename":"Text.mjs","lineno":969,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100075973","name":"Text#beforeSetTriggers","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the triggers config gets changed</p>","params":[{"type":{"names":["Object","Array.<Object>"]},"name":"value"},{"type":{"names":["Array.<Object>"]},"name":"oldValue"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"the parsed triggers config"},{"type":{"names":["Object","Array.<Object>"]}}],"access":"protected","name":"beforeSetTriggers","longname":"Text#beforeSetTriggers","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetTriggers","$kind":"method","id":2564,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Triggered before the value config gets changed\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @returns {String|null}\n     * @protected\n     */","meta":{"range":[30210,30362],"filename":"Text.mjs","lineno":1013,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076126","name":"Text#beforeSetValue","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered before the value config gets changed</p>","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"returns":[{"type":{"names":["String","null"]}}],"access":"protected","name":"beforeSetValue","longname":"Text#beforeSetValue","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#beforeSetValue","$kind":"method","id":2565,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Resets the field to its original value or null depending on the clearToOriginalValue config\n     */","meta":{"range":[30483,30624],"filename":"Text.mjs","lineno":1024,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076147","name":"Text#clear","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Resets the field to its original value or null depending on the clearToOriginalValue config</p>","name":"clear","longname":"Text#clear","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#clear","$kind":"method","id":2566,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     *\n     * @param args\n     */","meta":{"range":[30672,30952],"filename":"Text.mjs","lineno":1035,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076176","name":"Text#destroy","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"params":[{"name":"args","variable":true}],"name":"destroy","longname":"Text#destroy","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#destroy","$kind":"method","id":2567,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Calls focus() on the inputEl node instead\n     * @param {String} id\n     * @override\n     */","meta":{"range":[31066,31124],"filename":"Text.mjs","lineno":1053,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076219","name":"Text#focus","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"<p>Calls focus() on the inputEl node instead</p>","params":[{"type":{"names":["String"]},"name":"id"}],"override":true,"name":"focus","longname":"Text#focus","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#focus","$kind":"method","id":2568,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Object|null}\n     */","meta":{"range":[31176,31294],"filename":"Text.mjs","lineno":1060,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076233","name":"Text#getCenterBorderEl","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Object","null"]}}],"name":"getCenterBorderEl","longname":"Text#getCenterBorderEl","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getCenterBorderEl","$kind":"method","id":2569,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Object|null}\n     */","meta":{"range":[31346,31455],"filename":"Text.mjs","lineno":1067,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076241","name":"Text#getInputEl","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Object","null"]}}],"name":"getInputEl","longname":"Text#getInputEl","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getInputEl","$kind":"method","id":2570,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {String}\n     */","meta":{"range":[31502,31559],"filename":"Text.mjs","lineno":1074,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076249","name":"Text#getInputElId","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["String"]}}],"name":"getInputElId","longname":"Text#getInputElId","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getInputElId","$kind":"method","id":2571,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Calculates the new inputWidth based on the labelWidth & total width\n     * @returns {Number|null} null in case this.width is unknown\n     */","meta":{"range":[31721,32185],"filename":"Text.mjs","lineno":1082,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076260","name":"Text#getInputWidth","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Calculates the new inputWidth based on the labelWidth &amp; total width</p>","returns":[{"type":{"names":["Number","null"]},"description":"null in case this.width is unknown"}],"name":"getInputWidth","longname":"Text#getInputWidth","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getInputWidth","$kind":"method","id":2572,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {String}\n     */","meta":{"range":[32232,32302],"filename":"Text.mjs","lineno":1100,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076324","name":"Text#getInputWrapperId","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["String"]}}],"name":"getInputWrapperId","longname":"Text#getInputWrapperId","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getInputWrapperId","$kind":"method","id":2573,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Object|null}\n     */","meta":{"range":[32354,32453],"filename":"Text.mjs","lineno":1107,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076335","name":"Text#getLabelEl","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Object","null"]}}],"name":"getLabelEl","longname":"Text#getLabelEl","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getLabelEl","$kind":"method","id":2574,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {String}\n     */","meta":{"range":[32500,32555],"filename":"Text.mjs","lineno":1114,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076343","name":"Text#getLabelId","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["String"]}}],"name":"getLabelId","longname":"Text#getLabelId","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getLabelId","$kind":"method","id":2575,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {String} type\n     * @returns {Neo.form.field.trigger.Base|null}\n     */","meta":{"range":[32656,32974],"filename":"Text.mjs","lineno":1122,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076354","name":"Text#getTrigger","type":"MethodDefinition","paramnames":["type"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"type"}],"returns":[{"type":{"names":["Neo.form.field.trigger.Base","null"]}}],"name":"getTrigger","longname":"Text#getTrigger","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#getTrigger","$kind":"method","id":2576,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {String} id\n     * @returns {Neo.form.field.trigger.Base|null}\n     */","meta":{"range":[33073,33389],"filename":"Text.mjs","lineno":1141,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076400","name":"Text#getTriggerById","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"id"}],"returns":[{"type":{"names":["Neo.form.field.trigger.Base","null"]}}],"name":"getTriggerById","longname":"Text#getTriggerById","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#getTriggerById","$kind":"method","id":2577,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {String} type\n     * @protected\n     * @returns {String} The trigger node id\n     */","meta":{"range":[33502,33572],"filename":"Text.mjs","lineno":1161,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076446","name":"Text#getTriggerId","type":"MethodDefinition","paramnames":["type"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"type"}],"access":"protected","returns":[{"type":{"names":["String"]},"description":"The trigger node id"}],"name":"getTriggerId","longname":"Text#getTriggerId","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#getTriggerId","$kind":"method","id":2578,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {*}\n    */","meta":{"range":[33613,33786],"filename":"Text.mjs","lineno":1168,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076459","name":"Text#getValue","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["*"]}}],"name":"getValue","longname":"Text#getValue","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#getValue","$kind":"method","id":2579,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[33834,33984],"filename":"Text.mjs","lineno":1179,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076483","name":"Text#hasContent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"hasContent","longname":"Text#hasContent","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#hasContent","$kind":"method","id":2580,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Finds a trigger by a given type config\n     * @param {String} type\n     * @returns {Boolean}\n     */","meta":{"range":[34106,34391],"filename":"Text.mjs","lineno":1190,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076510","name":"Text#hasTrigger","type":"MethodDefinition","paramnames":["type"]},"vars":{"":null}},"description":"<p>Finds a trigger by a given type config</p>","params":[{"type":{"names":["String"]},"name":"type"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"hasTrigger","longname":"Text#hasTrigger","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#hasTrigger","$kind":"method","id":2581,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Transform an input node value before applied to this.value.\n     * Override as needed\n     * @param {*} value\n     * @returns {*}\n     */","meta":{"range":[34550,34604],"filename":"Text.mjs","lineno":1210,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076551","name":"Text#inputValueAdjustor","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Transform an input node value before applied to this.value.\nOverride as needed</p>","params":[{"type":{"names":["*"]},"name":"value"}],"returns":[{"type":{"names":["*"]}}],"name":"inputValueAdjustor","longname":"Text#inputValueAdjustor","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#inputValueAdjustor","$kind":"method","id":2582,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Transform a value before getting rendered.\n     * Override as needed\n     * @param {*} value\n     * @returns {*}\n     */","meta":{"range":[34746,34800],"filename":"Text.mjs","lineno":1220,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076558","name":"Text#inputValueRenderer","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Transform a value before getting rendered.\nOverride as needed</p>","params":[{"type":{"names":["*"]},"name":"value"}],"returns":[{"type":{"names":["*"]}}],"name":"inputValueRenderer","longname":"Text#inputValueRenderer","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#inputValueRenderer","$kind":"method","id":2583,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[34848,34917],"filename":"Text.mjs","lineno":1227,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076565","name":"Text#isEmpty","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"isEmpty","longname":"Text#isEmpty","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#isEmpty","$kind":"method","id":2584,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[34965,35040],"filename":"Text.mjs","lineno":1234,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076574","name":"Text#isEmptyAndRequired","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"isEmptyAndRequired","longname":"Text#isEmptyAndRequired","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#isEmptyAndRequired","$kind":"method","id":2585,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @returns {Boolean}\n     */","meta":{"range":[35088,35197],"filename":"Text.mjs","lineno":1241,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076587","name":"Text#isValid","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Boolean"]}}],"name":"isValid","longname":"Text#isValid","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#isValid","$kind":"method","id":2586,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} config\n     * @param {Boolean} [preventOriginalConfig] True prevents the instance from getting an originalConfig property\n     * @returns {Object} config\n     */","meta":{"range":[35396,35675],"filename":"Text.mjs","lineno":1252,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076607","name":"Text#mergeConfig","type":"MethodDefinition","paramnames":["args"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"config"},{"type":{"names":["Boolean"]},"optional":true,"description":"<p>True prevents the instance from getting an originalConfig property</p>","name":"preventOriginalConfig"}],"returns":[{"type":{"names":["Object"]},"description":"config"}],"name":"mergeConfig","longname":"Text#mergeConfig","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#mergeConfig","$kind":"method","id":2587,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     * @param {Object[]} data.path\n     * @protected\n     */","meta":{"range":[35778,36279],"filename":"Text.mjs","lineno":1268,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076650","name":"Text#onFocusEnter","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Array.<Object>"]},"name":"data.path"}],"access":"protected","name":"onFocusEnter","longname":"Text#onFocusEnter","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onFocusEnter","$kind":"method","id":2588,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     * @param {Object[]} data.oldPath\n     * @protected\n     */","meta":{"range":[36385,37004],"filename":"Text.mjs","lineno":1292,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076718","name":"Text#onFocusLeave","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Array.<Object>"]},"name":"data.oldPath"}],"access":"protected","name":"onFocusLeave","longname":"Text#onFocusLeave","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onFocusLeave","$kind":"method","id":2589,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     * @protected\n     */","meta":{"range":[37072,37634],"filename":"Text.mjs","lineno":1323,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076810","name":"Text#onInputValueChange","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"access":"protected","name":"onInputValueChange","longname":"Text#onInputValueChange","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onInputValueChange","$kind":"method","id":2590,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     */","meta":{"range":[37684,37870],"filename":"Text.mjs","lineno":1347,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076891","name":"Text#onMouseEnter","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onMouseEnter","longname":"Text#onMouseEnter","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onMouseEnter","$kind":"method","id":2591,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * @param {Object} data\n     */","meta":{"range":[37920,38109],"filename":"Text.mjs","lineno":1360,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076924","name":"Text#onMouseLeave","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"name":"onMouseLeave","longname":"Text#onMouseLeave","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#onMouseLeave","$kind":"method","id":2592,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Removes all triggers of a given type\n     * @param {String} type\n     * @param {Boolean} [silent=false] true prevents a vdom update\n     * @param {Array} [triggerSource] pass a shallow copy of this.triggers\n     * @returns {Boolean} true in case a trigger was found & removed\n     */","meta":{"range":[38414,39025],"filename":"Text.mjs","lineno":1377,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100076957","name":"Text#removeTrigger","type":"MethodDefinition","paramnames":["type","silent","triggerSource"]},"vars":{"":null}},"description":"<p>Removes all triggers of a given type</p>","params":[{"type":{"names":["String"]},"name":"type"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"<p>true prevents a vdom update</p>","name":"silent"},{"type":{"names":["Array"]},"optional":true,"description":"<p>pass a shallow copy of this.triggers</p>","name":"triggerSource"}],"returns":[{"type":{"names":["Boolean"]},"description":"true in case a trigger was found & removed"}],"name":"removeTrigger","longname":"Text#removeTrigger","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#removeTrigger","$kind":"method","id":2593,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Resets the field to its original value or null depending on the clearToOriginalValue config\n     * You can optionally pass a new value, which will adjust the originalConfig.value if needed.\n     * @param {String|null} [value=null]\n     */","meta":{"range":[39285,39657],"filename":"Text.mjs","lineno":1407,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100077040","name":"Text#reset","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"<p>Resets the field to its original value or null depending on the clearToOriginalValue config\nYou can optionally pass a new value, which will adjust the originalConfig.value if needed.</p>","params":[{"type":{"names":["String","null"]},"optional":true,"defaultvalue":null,"name":"value"}],"name":"reset","longname":"Text#reset","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#reset","$kind":"method","id":2594,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Used for labelPosition: 'inline' to adjust the top border matching to the length of the label\n     * @param {Boolean} [silent=false] true to get the value, but not apply it to the DOM\n     * @protected\n     */","meta":{"range":[39888,40261],"filename":"Text.mjs","lineno":1430,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100077097","name":"Text#updateCenterBorderElWidth","type":"MethodDefinition","paramnames":["silent"]},"vars":{"":null}},"description":"<p>Used for labelPosition: 'inline' to adjust the top border matching to the length of the label</p>","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"<p>true to get the value, but not apply it to the DOM</p>","name":"silent"}],"access":"protected","name":"updateCenterBorderElWidth","longname":"Text#updateCenterBorderElWidth","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#updateCenterBorderElWidth","$kind":"method","id":2595,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     @param {String|null} value\n     @param {Boolean} silent=false\n     */","meta":{"range":[40350,40999],"filename":"Text.mjs","lineno":1447,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100077165","name":"Text#updateError","type":"MethodDefinition","paramnames":["value","silent"]},"vars":{"":null}},"params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["Boolean"]},"defaultvalue":false,"name":"silent"}],"name":"updateError","longname":"Text#updateError","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#updateError","$kind":"method","id":2596,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Calculates the new inputWidth based on the labelWidth & total width\n     * @protected\n     */","meta":{"range":[41114,41411],"filename":"Text.mjs","lineno":1475,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100077266","name":"Text#updateInputWidth","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Calculates the new inputWidth based on the labelWidth &amp; total width</p>","access":"protected","name":"updateInputWidth","longname":"Text#updateInputWidth","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#updateInputWidth","$kind":"method","id":2597,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * The DOM based readonly attribute needs to honor the editable & readOnly configs\n     */","meta":{"range":[41520,41651],"filename":"Text.mjs","lineno":1491,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100077320","name":"Text#updateReadOnlyState","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>The DOM based readonly attribute needs to honor the editable &amp; readOnly configs</p>","name":"updateReadOnlyState","longname":"Text#updateReadOnlyState","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#updateReadOnlyState","$kind":"method","id":2598,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Since triggers do not get rendered, assign the relevant props\n     * todo: this could be handled by component.Base\n     */","meta":{"range":[41795,42238],"filename":"Text.mjs","lineno":1501,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100077344","name":"Text#updateTriggerVnodes","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Since triggers do not get rendered, assign the relevant props\ntodo: this could be handled by component.Base</p>","name":"updateTriggerVnodes","longname":"Text#updateTriggerVnodes","kind":"function","memberof":"Text","scope":"instance","params":[],"$longname":"Text#updateTriggerVnodes","$kind":"method","id":2599,"neoClassName":"Neo.form.field.Text"},{"comment":"/**\n     * Checks for client-side field errors\n     * @param {Boolean} silent=true\n     * @returns {Boolean} Returns true in case there are no client-side errors\n     */","meta":{"range":[42418,44283],"filename":"Text.mjs","lineno":1523,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/form/field","code":{"id":"astnode100077395","name":"Text#validate","type":"MethodDefinition","paramnames":["silent"]},"vars":{"":null}},"description":"<p>Checks for client-side field errors</p>","params":[{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"silent"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true in case there are no client-side errors"}],"name":"validate","longname":"Text#validate","kind":"function","memberof":"Text","scope":"instance","$longname":"Text#validate","$kind":"method","id":2600,"neoClassName":"Neo.form.field.Text"}]}