{"classData":[{"comment":"/**\n * Creating IntersectionObservers to get infos about DOM node visibility.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n * @class Neo.main.addon.IntersectionObserver\n * @extends Neo.main.addon.Base\n */","meta":{"filename":"IntersectionObserver.mjs","lineno":4,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>Creating IntersectionObservers to get infos about DOM node visibility.\nSee: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\">https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API</a></p>\n","kind":"class","name":"IntersectionObserver","augments":["Neo.main.addon.Base"],"memberof":"Neo.main.addon","longname":"Neo.main.addon.IntersectionObserver","scope":"static","$longname":"Neo.main.addon.IntersectionObserver","$kind":"class","id":3378,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n         * @member {String} className='Neo.main.addon.IntersectionObserver'\n         * @protected\n         */","meta":{"filename":"IntersectionObserver.mjs","lineno":16,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.main.addon.IntersectionObserver'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":3379,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n         * Remote method access for other workers\n         * @member {Object} remote\n         * @protected\n         */","meta":{"filename":"IntersectionObserver.mjs","lineno":22,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>Remote method access for other workers</p>\n","kind":"member","name":"remote","type":{"names":["Object"]},"access":"protected","longname":"remote","scope":"global","$longname":"remote","$kind":"property","id":3380,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n     * Storing data from observe() calls which arrived prior to register()\n     * @member {Object} map={}\n     * @protected\n     */","meta":{"filename":"IntersectionObserver.mjs","lineno":36,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>Storing data from observe() calls which arrived prior to register()</p>\n","kind":"member","name":"map","type":{"names":["Object"]},"defaultvalue":"{}","access":"protected","longname":"map","scope":"global","$longname":"map","$kind":"property","id":3381,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n     * Storing component ids and their IntersectionObservers\n     * @member {Object} map={}\n     * @protected\n     */","meta":{"filename":"IntersectionObserver.mjs","lineno":42,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{}},"description":"<p>Storing component ids and their IntersectionObservers</p>\n","kind":"member","name":"map","type":{"names":["Object"]},"defaultvalue":"{}","access":"protected","longname":"map","scope":"global","$longname":"map","$kind":"property","id":3382,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n     * @param {Object} data\n     * @param {String} data.id\n     */","meta":{"range":[1226,1290],"filename":"IntersectionObserver.mjs","lineno":48,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{"id":"astnode100096807","name":"NeoIntersectionObserver#disconnect","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.id"}],"name":"disconnect","longname":"NeoIntersectionObserver#disconnect","kind":"function","memberof":"NeoIntersectionObserver","scope":"instance","$longname":"NeoIntersectionObserver#disconnect","$kind":"method","id":3383,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n     * @param {IntersectionObserverEntry[]} entries\n     * @param {IntersectionObserver} observer\n     */","meta":{"range":[1410,2453],"filename":"IntersectionObserver.mjs","lineno":56,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{"id":"astnode100096814","name":"NeoIntersectionObserver#findTopmostItem","type":"MethodDefinition","paramnames":["entries","observer"]},"vars":{"":null}},"params":[{"type":{"names":["Array.<IntersectionObserverEntry>"]},"name":"entries"},{"type":{"names":["IntersectionObserver"]},"name":"observer"}],"name":"findTopmostItem","longname":"NeoIntersectionObserver#findTopmostItem","kind":"function","memberof":"NeoIntersectionObserver","scope":"instance","$longname":"NeoIntersectionObserver#findTopmostItem","$kind":"method","id":3384,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n     * @param {IntersectionObserverEntry[]} entries\n     * @param {IntersectionObserver} observer\n     */","meta":{"range":[2573,3080],"filename":"IntersectionObserver.mjs","lineno":84,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{"id":"astnode100096940","name":"NeoIntersectionObserver#isVisible","type":"MethodDefinition","paramnames":["entries","observer"]},"vars":{"":null}},"params":[{"type":{"names":["Array.<IntersectionObserverEntry>"]},"name":"entries"},{"type":{"names":["IntersectionObserver"]},"name":"observer"}],"name":"isVisible","longname":"NeoIntersectionObserver#isVisible","kind":"function","memberof":"NeoIntersectionObserver","scope":"instance","$longname":"NeoIntersectionObserver#isVisible","$kind":"method","id":3385,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n     * Add more or new items into an existing observer instance\n     * @param {Object} data\n     * @param {Boolean} [data.disconnect=false] true removes all currently observed targets\n     * @param {String} data.id\n     * @param {String|String[]} data.observe The querySelector to match elements\n     * @returns {Boolean} true in case the targets got observed, false in case they got cached prior to a register() call\n     */","meta":{"range":[3520,4251],"filename":"IntersectionObserver.mjs","lineno":107,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{"id":"astnode100097029","name":"NeoIntersectionObserver#observe","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"<p>Add more or new items into an existing observer instance</p>\n","params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"<p>true removes all currently observed targets</p>\n","name":"data.disconnect"},{"type":{"names":["String"]},"name":"data.id"},{"type":{"names":["String","Array.<String>"]},"description":"<p>The querySelector to match elements</p>\n","name":"data.observe"}],"returns":[{"type":{"names":["Boolean"]},"description":"true in case the targets got observed, false in case they got cached prior to a register() call"}],"name":"observe","longname":"NeoIntersectionObserver#observe","kind":"function","memberof":"NeoIntersectionObserver","scope":"instance","$longname":"NeoIntersectionObserver#observe","$kind":"method","id":3386,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n     * @param {Object} data\n     * @param {String} data.callback\n     * @param {String} data.id\n     * @param {String|String[]} [data.observe] The querySelector to match elements\n     * @param {String} data.root\n     * @param {String} data.rootMargin='0px'\n     * @param {Number|Number[]} data.threshold=0.0\n     */","meta":{"range":[4581,5214],"filename":"IntersectionObserver.mjs","lineno":148,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{"id":"astnode100097145","name":"NeoIntersectionObserver#register","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"},{"type":{"names":["String"]},"name":"data.callback"},{"type":{"names":["String"]},"name":"data.id"},{"type":{"names":["String","Array.<String>"]},"optional":true,"description":"<p>The querySelector to match elements</p>\n","name":"data.observe"},{"type":{"names":["String"]},"name":"data.root"},{"type":{"names":["String"]},"defaultvalue":"'0px'","name":"data.rootMargin"},{"type":{"names":["Number","Array.<Number>"]},"defaultvalue":"0.0","name":"data.threshold"}],"name":"register","longname":"NeoIntersectionObserver#register","kind":"function","memberof":"NeoIntersectionObserver","scope":"instance","$longname":"NeoIntersectionObserver#register","$kind":"method","id":3387,"neoClassName":"Neo.main.addon.IntersectionObserver"},{"comment":"/**\n     * @param {Object} data\n     */","meta":{"range":[5264,5436],"filename":"IntersectionObserver.mjs","lineno":173,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/main/addon","code":{"id":"astnode100097253","name":"NeoIntersectionObserver#sendMessage","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"data"}],"name":"sendMessage","longname":"NeoIntersectionObserver#sendMessage","kind":"function","memberof":"NeoIntersectionObserver","scope":"instance","$longname":"NeoIntersectionObserver#sendMessage","$kind":"method","id":3388,"neoClassName":"Neo.main.addon.IntersectionObserver"}]}