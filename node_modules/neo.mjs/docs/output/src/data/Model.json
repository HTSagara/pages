{"classData":[{"comment":"/**\n * @class Neo.data.Model\n * @extends Neo.core.Base\n */","meta":{"filename":"Model.mjs","lineno":3,"columnno":0,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"class","name":"Model","augments":["Neo.core.Base"],"memberof":"Neo.data","longname":"Neo.data.Model","scope":"static","$longname":"Neo.data.Model","$kind":"class","id":1760,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {String} className='Neo.data.Model'\n         * @protected\n         */","meta":{"filename":"Model.mjs","lineno":13,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.data.Model'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1761,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {String} ntype='model'\n         * @protected\n         */","meta":{"filename":"Model.mjs","lineno":18,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'model'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1762,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {Array|null} fields=null\n         */","meta":{"filename":"Model.mjs","lineno":22,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"fields","type":{"names":["Array","null"]},"defaultvalue":null,"longname":"fields","scope":"global","$longname":"fields","$kind":"property","id":1763,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {String} keyProperty_='id'\n         */","meta":{"filename":"Model.mjs","lineno":26,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"keyProperty_","type":{"names":["String"]},"defaultvalue":"'id'","longname":"keyProperty_","scope":"global","$longname":"keyProperty_","$kind":"property","id":1764,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * @member {String|null} storeId=null\n         * @protected\n         */","meta":{"filename":"Model.mjs","lineno":31,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"kind":"member","name":"storeId","type":{"names":["String","null"]},"defaultvalue":null,"access":"protected","longname":"storeId","scope":"global","$longname":"storeId","$kind":"property","id":1765,"neoClassName":"Neo.data.Model"},{"comment":"/**\n         * Set this config to true in case you want to track modified fields.\n         * Be aware that this will double the amount of data inside each record,\n         * since each field will get an original value flag.\n         * @member {Boolean} trackModifiedFields=false\n         */","meta":{"filename":"Model.mjs","lineno":38,"columnno":8,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{}},"description":"<p>Set this config to true in case you want to track modified fields.\nBe aware that this will double the amount of data inside each record,\nsince each field will get an original value flag.</p>","kind":"member","name":"trackModifiedFields","type":{"names":["Boolean"]},"defaultvalue":false,"longname":"trackModifiedFields","scope":"global","$longname":"trackModifiedFields","$kind":"property","id":1766,"neoClassName":"Neo.data.Model"},{"comment":"/**\n     * A property set in all data records so that they are easily identifiable.\n     * @property {Boolean} isRecord=true\n     * @readonly\n     */","meta":{"range":[1198,1214],"filename":"Model.mjs","lineno":51,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{"id":"astnode100055942","name":"isRecord","type":"ClassProperty"}},"description":"<p>A property set in all data records so that they are easily identifiable.</p>","properties":[{"type":{"names":["Boolean"]},"defaultvalue":true,"name":"isRecord"}],"readonly":true,"name":"isRecord","longname":"Model#isRecord","kind":"member","memberof":"Model","scope":"instance","$longname":"Model#isRecord","$kind":"property","id":1767,"neoClassName":"Neo.data.Model"},{"comment":"/**\n     * Finds a field config by a given field name\n     * @param {String} name\n     * @returns {Object|null} The field config object or null if no match was found\n     */","meta":{"range":[1398,1668],"filename":"Model.mjs","lineno":53,"columnno":4,"path":"/Users/Shared/github/neomjs/pages/node_modules/neo.mjs/src/data","code":{"id":"astnode100055944","name":"Model#getField","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"<p>Finds a field config by a given field name</p>","params":[{"type":{"names":["String"]},"name":"name"}],"returns":[{"type":{"names":["Object","null"]},"description":"The field config object or null if no match was found"}],"name":"getField","longname":"Model#getField","kind":"function","memberof":"Model","scope":"instance","$longname":"Model#getField","$kind":"method","id":1768,"neoClassName":"Neo.data.Model"}]}